{"username":"Abhishek_G0YAL","email":"abhishek252167@gmail.com","school":"Thapar Institute Of Engineering And Technology, Patiala","country":"India","name":"Abhishek Goyal","city":"Patiala","website":"","job_title":"","tsize":"XL","phone_number":"8607987346","local_language":"English","college_major":"Electrical Engineering \u0026 Computer Science","college_major_id":11,"linkedin_url":"www.linkedin.com/in/abhishek-g0yal","jobs_consent":"true","personal_first_name":"Abhishek","personal_last_name":"Goyal","graduation_year":"2021","hacker_school_additional":[{"name":"Thapar Institute Of Engineering And Technology, Patiala","represented":true,"options":[{"from_year":2017,"to_year":2021,"program":"Electrical Engineering \u0026 Computer Science","degree":"BE"}]}],"timezone":"Asia/Calcutta","us_work_eligibility_2":false,"is_professional":false,"gender":"Male","us_citizenship_2":3,"is_organizer":true,"dashboard_survey_preference":8,"contest_data":{"source-of-contest":"random","explore-opportunities":"Yes","current-employer":"no","tshirt-size":"XL","address-pincode":"125133"},"hackos":8352,"favorite_challenges":["Unique Divide And Conquer       ","The Chosen One","Akhil and GF","Maximum Xor","Bigger is Greater","Rectangle Area"],"challenges_created":["R3V3R5E C0D1NG 1","R3V3R5E C0D1NG 2","R3V3R5E C0D1NG 3","R3V3R5E C0D1NG 5","R3V3R5E C0D1NG 4","Maira's birthday challange","Buying Chocolates 1","The High Triangle","Save Abhinav from detention"],"other_emails":[],"all_schools":[{"name":"Thapar Institute Of Engineering And Technology, Patiala","program":"Electrical Engineering \u0026 Computer Science","degree":"BE"}],"snippets":[],"submissions":[{"contest":"Code Golf ","challenge":"Ria's Algorithm","code":"#include \u003cstdio.h\u003e\n#include \u003cstring.h\u003e\n#include \u003cmath.h\u003e\n#include \u003cstdlib.h\u003e\n\nint main() {\n\n    /* Enter your code here. Read input from STDIN. Print output to STDOUT */\n    char a[100],b[100];int i,n;char chk;\n    scanf(\"%s%s\",\u0026a,\u0026b);\n    n=strlen(a)/2;\n    for(i=0;i\u003cn;i++)\n        printf(\"%c\",a[i]);\n    chk=a[i-1];\n    n=strlen(b);\n    for(i=1;i\u003cn;i++)\n    {\n        if(i==1 \u0026\u0026 chk==b[i])\n            continue;\n        else\n            printf(\"%c\",b[i]);}\n    return 0;\n    }\n","score":0.6,"language":"c"},{"contest":"Code Golf ","challenge":"DNA Profiling","code":"#include \u003cstdio.h\u003e\n#include \u003cstring.h\u003e\n#include \u003cmath.h\u003e\n#include \u003cstdlib.h\u003e\n\nint main() {\n\n    /* Enter your code here. Read input from STDIN. Print output to STDOUT */\n    char a[100],b[100];int i,c=0;\n    scanf(\"%s%s\",\u0026a,\u0026b);\n    for(i=0;i\u003cstrlen(a);i++)\n    {\n        if(a[i]==b[i])\n        {\n            printf(\"%c\",a[i]);\n            c=1;\n        }\n        else if(c==0)\n            continue;\n        else\n            break;\n    }\n    return 0;\n}\n","score":0.1,"language":"c"},{"contest":"Coding Buffet 1","challenge":"Sita's Dilemma","code":"#include \u003cstdio.h\u003e\n#include \u003cstring.h\u003e\n#include \u003cmath.h\u003e\n#include \u003cstdlib.h\u003e\n\nint main()\n{\n    int i,n;\n    scanf(\"%d\",\u0026n);\n    int s[n];\n    for(i=0;i\u003cn;i++)\n    scanf(\"%d\",\u0026s[i]);\n    for(i=0;i\u003cn;i++)\n    {\n        if(s[i]\u003e=38)\n        {\n            if(s[i]%5==4)\n                s[i]=s[i]+1;\n            else if(s[i]%5==3)\n                s[i]=s[i]+2;\n        }\n    }\n    for(i=0;i\u003cn;i++)\n        printf(\"%d\\n\",s[i]);\n    return 0;\n}\n","score":1.0,"language":"c"},{"contest":"Coding Buffet 1","challenge":"DigitFinder","code":"#include \u003cstdio.h\u003e\n#include \u003cstring.h\u003e\n#include \u003cmath.h\u003e\n#include \u003cstdlib.h\u003e\n\nint main()\n{    \n    int i,n,num,rev=0,x=0,r;\n    scanf(\"%d\",\u0026r);\n\tscanf(\"%d\",\u0026n);\n\tint dig[n];\n\tfor(i=1;i\u003c=r;i++)\n\t{\n\t\tnum=(i*10)+1;\n\t\twhile(num\u003e0)\n\t\t{\n\t\t\trev=(rev*10)+(num%10);\n\t\t\tnum=num/10;\n\t\t}\n\t\twhile(rev\u003e1)\n\t\t{\n\t\t\tdig[x]=rev%10;\n\t\t\trev=rev/10;\n\t\t\t++x;\n\t\t\tif(x==n)\n\t\t\tbreak;\n\t\t}\n\t\trev=0;\n\t\tif(x==n)\n\t\tbreak;\n\t}\n\tprintf(\"%d\\n\",dig[n-1]);\n\tprintf(\"%d\",i);\n}\n","score":1.0,"language":"c"},{"contest":"Coding Buffet 1","challenge":"IOI Team","code":"#include \u003cstdio.h\u003e\n#include \u003cstring.h\u003e\n#include \u003cmath.h\u003e\n#include \u003cstdlib.h\u003e\nint fact(int x)\n{\n\tint i;long long int fac=1;\n\tfor(i=2;i\u003c=x;i++)\n\tfac=fac*i;\n\treturn fac;\n}\nint main()\n{\n    int n,t,i,j,chk,p=0;\n    scanf(\"%d%d\",\u0026n,\u0026t);\n    int a[n];int b[(fact(n))/(fact(2)*fact(n-2))];\n    for(i=0;i\u003c(fact(n))/(fact(2)*fact(n-2));i++)\n        b[i]=t;\n    for(i=0;i\u003cn;i++)\n        scanf(\"%d\",\u0026a[i]);\n    for(i=0;i\u003cn;i++)\n    {\n        for(j=i+1;j\u003cn;j++)\n        {\n            chk=a[i]+a[j];\n            while(chk\u003e0)\n            {\n                if(chk % 10==0)\n                    b[p]=b[p]-1;\n                chk=chk/10;\n            }\n            ++p;\n        }\n    }\n    int largest=b[0];\n    for(i=0;i\u003c(fact(n))/(fact(2)*fact(n-2));i++)\n    {\n        if (largest \u003c b[i])\n            largest = b[i];\n    }\n    int count=0;\n    for(i=0;i\u003c(fact(n))/(fact(2)*fact(n-2));i++)\n    {\n        if (largest == b[i])\n            ++count;\n    }\n    printf(\"%d\\n%d\",largest,count);\n    return 0;\n}\n","score":0.0,"language":"c"},{"contest":"Coding Buffet 1","challenge":"IOI Team","code":"#include \u003cstdio.h\u003e\n#include \u003cstring.h\u003e\n#include \u003cmath.h\u003e\n#include \u003cstdlib.h\u003e\nint fact(int x)\n{\n\tint i;long long int fac=1;\n\tfor(i=2;i\u003c=x;i++)\n\tfac=fac*i;\n\treturn fac;\n}\nint main()\n{\n    int n,t,i,j,chk,p=0;\n    scanf(\"%d%d\",\u0026n,\u0026t);\n    int a[n];int b[(fact(n))/(fact(2)*fact(n-2))];\n    for(i=0;i\u003c(fact(n))/(fact(2)*fact(n-2));i++)\n        b[i]=t;\n    for(i=0;i\u003cn;i++)\n        scanf(\"%d\",\u0026a[i]);\n    for(i=0;i\u003cn;i++)\n    {\n        for(j=i+1;j\u003cn;j++)\n        {\n            chk=a[i]+a[j];\n            while(chk\u003e0)\n            {\n                if(chk % 10==0)\n                    b[p]=b[p]-1;\n                chk=chk/10;\n            }\n            ++p;\n        }\n    }\n    int largest=b[0];\n    for(i=0;i\u003c(fact(n))/(fact(2)*fact(n-2));i++)\n    {\n        if (largest \u003c b[i])\n            largest = b[i];\n    }\n    int count=0;\n    for(i=0;i\u003c(fact(n))/(fact(2)*fact(n-2));i++)\n    {\n        if (largest == b[i])\n            ++count;\n    }\n    printf(\"%d\\n%d\",largest,count);\n    return 0;\n}","score":0.0,"language":"c"},{"contest":"Coding Buffet 1","challenge":"IOI Team","code":"#include \u003cstdio.h\u003e\n#include \u003cstring.h\u003e\n#include \u003cmath.h\u003e\n#include \u003cstdlib.h\u003e\nint fact(int x)\n{\n\tint i;int fac=1;\n\tfor(i=2;i\u003c=x;i++)\n\tfac=fac*i;\n\treturn fac;\n}\nint main()\n{\n    int n,t,i,j,chk,p=0;\n    scanf(\"%d%d\",\u0026n,\u0026t);\n    int l=(fact(n))/(fact(2)*fact(n-2));\n    int a[n];int b[l];\n    for(i=0;i\u003cl;i++)\n        b[i]=t;\n    for(i=0;i\u003cn;i++)\n        scanf(\"%d\",\u0026a[i]);\n    for(i=0;i\u003cn;i++)\n    {\n        for(j=i+1;j\u003cn;j++)\n        {\n            chk=a[i]+a[j];\n            while(chk\u003e0)\n            {\n                if(chk % 10==0)\n                    b[p]=b[p]-1;\n                chk=chk/10;\n            }\n            ++p;\n        }\n    }\n    int largest=b[0];\n    for(i=0;i\u003cl;i++)\n    {\n        if (largest \u003c b[i])\n            largest = b[i];\n    }\n    int count=0;\n    for(i=0;i\u003cl;i++)\n    {\n        if (largest == b[i])\n            ++count;\n    }\n    printf(\"%d\\n%d\",largest,count);\n    return 0;\n}","score":0.0,"language":"c"},{"contest":"Coding Buffet 1","challenge":"IOI Team","code":"#include \u003cstdio.h\u003e\n#include \u003cstring.h\u003e\n#include \u003cmath.h\u003e\n#include \u003cstdlib.h\u003e\nint fact(int x)\n{\n\tint i;int fac=1;\n\tfor(i=2;i\u003c=x;i++)\n\tfac=fac*i;\n\treturn fac;\n}\nint main()\n{\n    int n,t,i,j,chk,p=0,k;\n    scanf(\"%d%d\",\u0026n,\u0026t);\n    if(n\u003e2)\n    {\n    int l=(fact(n))/(fact(2)*fact(n-2));\n    int a[n];int b[l];\n    for(i=0;i\u003cl;i++)\n        b[i]=t;\n    for(i=0;i\u003cn;i++)\n        scanf(\"%d\",\u0026a[i]);\n    for(i=0;i\u003cn;i++)\n    {\n        for(j=i+1;j\u003cn;j++)\n        {\n            chk=a[i]+a[j];\n            for(k=0;k\u003ct;k++)\n            {\n                if(chk % 10==0)\n                    b[p]=b[p]-1;\n                chk=chk/10;\n            }\n            ++p;\n        }\n    }\n    int largest=b[0];\n    for(i=0;i\u003cl;i++)\n    {\n        if (largest \u003c b[i])\n            largest = b[i];\n    }\n    int count=0;\n    for(i=0;i\u003cl;i++)\n    {\n        if (largest == b[i])\n            ++count;\n    }\n    printf(\"%d\\n%d\",largest,count);\n    return 0;\n    }\n}","score":0.0,"language":"c"},{"contest":"Coding Buffet 1","challenge":"Rovarspraket","code":"#include \u003cstdio.h\u003e\n#include \u003cstring.h\u003e\n#include \u003cmath.h\u003e\n#include \u003cstdlib.h\u003e\n\nint main()\n{\n    char a[1000];int i;\n    scanf(\"%s\",a);\n    for(i=0;i\u003cstrlen(a);i++)\n    {\n        if (a[i] == 'a' || a[i]== 'e' || a[i] == 'i' || a[i] == 'o' || a[i] == 'u' || a[i] == 'A' || a[i]== 'E' || a[i] == 'I' || a[i] == 'O' || a[i] == 'U')\n            printf(\"%c\",a[i]);\n        else\n            printf(\"%cO%c\",a[i],a[i]);\n    }\n    return 0;\n}\n","score":0.0,"language":"c"},{"contest":"Coding Buffet 1","challenge":"Rovarspraket","code":"#include \u003cstdio.h\u003e\n#include \u003cstring.h\u003e\n#include \u003cmath.h\u003e\n#include \u003cstdlib.h\u003e\n\nint main()\n{\n    char a[1000];int i;\n    gets(a);\n    for(i=0;i\u003cstrlen(a);i++)\n    {\n        if (a[i] == 'a' || a[i]== 'e' || a[i] == 'i' || a[i] == 'o' || a[i] == 'u' || a[i] == 'A' || a[i]== 'E' || a[i] == 'I' || a[i] == 'O' || a[i] == 'U')\n            printf(\"%c\",a[i]);\n        else\n            printf(\"%cO%c\",a[i],a[i]);\n    }\n    return 0;\n}","score":0.0,"language":"c"},{"contest":"Coding Buffet 1","challenge":"Rovarspraket","code":"// C++ implementation to Encrypt a \n// string into the rovarspraket (Robber Language)\n#include\u003ciostream\u003e\nusing namespace std;\n \n// Function return translated string\nstring translate(string a)\n{\n    // Length of the string\n    int len = a.length();\n    string res=\"\";\n     \n// Run till length of string\n    for(int i=0; i\u003clen ;i++)\n    {\n        // checking if character is vowel,\n        // if yes then append it as it is\n        if (a[i] == 'A' || a[i]== 'E' || a[i] == 'I' || a[i] == 'O' || a[i] == 'U')\n        {\n            res = res + a[i];\n        }\n         \n        // if space then append as it is\n        else if(a[i] == ' ')\n        {\n            res = res +a[i];\n        }\n         \n        // else double the consonant and put o in between\n        else\n        {\n            res =res+ a[i] + 'O' + a[i];\n        }\n    }\n     \n    // return translated string\n    return res;\n}\n \n// Driver Code\nint main()\n{\n    string str;\n    cin \u003e\u003e str;\n     \n    // Calling function\n    cout \u003c\u003c translate(str) \u003c\u003c endl;\n    return 0;\n}","score":0.0,"language":"cpp"},{"contest":"Coding Buffet 1","challenge":"Word Count 1","code":"#include \u003cstdio.h\u003e\n#include \u003cstring.h\u003e\n#include \u003cmath.h\u003e\n#include \u003cstdlib.h\u003e\n\nint main() {\n    char a[1000];int i,count=1;\n    gets(a);\n    for(i=0;i\u003cstrlen(a);i++)\n        if(a[i]\u003e=65 \u0026\u0026 a[i]\u003c=90)\n            ++count;\n    printf(\"%d\",count);\n    /* Enter your code here. Read input from STDIN. Print output to STDOUT */    \n    return 0;\n}\n","score":0.35,"language":"c"},{"contest":"Coding Buffet 1","challenge":"Word Count 1","code":"#include \u003cstdio.h\u003e\n#include \u003cstring.h\u003e\n#include \u003cmath.h\u003e\n#include \u003cstdlib.h\u003e\n\nint main() {\n    char a[1000];int i,count=1;\n    scanf(\"%s\",a);\n    for(i=0;i\u003cstrlen(a);i++)\n        if(a[i]\u003e=65 \u0026\u0026 a[i]\u003c=90)\n            ++count;\n    printf(\"%d\",count);\n    return 0;\n}\n","score":0.35,"language":"c"},{"contest":"Coding Buffet 1","challenge":"Word Count 1","code":"#include \u003cstdio.h\u003e\n#include \u003cstring.h\u003e\n#include \u003cmath.h\u003e\n#include \u003cstdlib.h\u003e\n\nint main() {\n    char a[1000];int i,count=1;\n    gets(a);\n    for(i=1;i\u003cstrlen(a);i++)\n        if(a[i]\u003e=65 \u0026\u0026 a[i]\u003c=90)\n            ++count;\n    printf(\"%d\",count);\n    /* Enter your code here. Read input from STDIN. Print output to STDOUT */    \n    return 0;\n}\n","score":0.35,"language":"c"},{"contest":"Coding Buffet 1","challenge":"Word Count 1","code":"#include \u003cstdio.h\u003e\n#include \u003cstring.h\u003e\n#include \u003cmath.h\u003e\n#include \u003cstdlib.h\u003e\n\nint main() {\n    char a[1000];int i,count=1;\n    gets(a);\n    for(i=0;i\u003cstrlen(a)-1;i++)\n    {if(a[i]\u003e=65 \u0026\u0026 a[i]\u003c=90)\n            ++count;}\n    printf(\"%d\",count);\n    /* Enter your code here. Read input from STDIN. Print output to STDOUT */    \n    return 0;\n}\n","score":0.35,"language":"c"},{"contest":"Coding Buffet 1","challenge":"Word Count 1","code":"#include \u003cstdio.h\u003e\n#include \u003cstring.h\u003e\n#include \u003cmath.h\u003e\n#include \u003cstdlib.h\u003e\n\nint main() {\n    char a[100];int i,count=1;\n    gets(a);\n    int k=strlen(a);\n    for(i=0;i\u003ck;++i)\n    if(a[i]\u003e=65 \u0026\u0026 a[i]\u003c=90)\n    ++count;\n    printf(\"%d\",count);\n    return 0;\n}\n","score":0.35,"language":"c"},{"contest":"Coding Buffet 1","challenge":"Height of Triangle","code":"#include \u003cstdio.h\u003e\n#include \u003cstring.h\u003e\n#include \u003cmath.h\u003e\n#include \u003cstdlib.h\u003e\n\nint main() {\n\n    /* Enter your code here. Read input from STDIN. Print output to STDOUT */  \n    int b,a,h; float area;\n    scanf(\"%d%d\",\u0026b,\u0026a);\n    for(h=0;h\u003e=0;++h)\n    {\n        area=0.5*h*b;\n        if(area\u003e=a)\n            break;\n    }\n    printf(\"%d\",h);\n    return 0;\n}\n","score":1.0,"language":"c"},{"contest":"Coding Buffet 1","challenge":"IOI Team","code":"#include \u003cstdio.h\u003e\n#include \u003cstring.h\u003e\n#include \u003cmath.h\u003e\n#include \u003cstdlib.h\u003e\nint fact(int x)\n{\n\tint i;int fac=1;\n\tfor(i=2;i\u003c=x;i++)\n\tfac=fac*i;\n\treturn fac;\n}\nint main()\n{\n    int n,t,i,j,chk,p=0,k;\n    scanf(\"%d%d\",\u0026n,\u0026t);\n    if(n\u003e2)\n    {\n    int l=(fact(n))/(fact(2)*fact(n-2));\n    int a[n];int b[l];\n    for(i=0;i\u003cl;i++)\n        b[i]=t;\n    for(i=0;i\u003cn;i++)\n        scanf(\"%d\",\u0026a[i]);\n    for(i=0;i\u003cn;i++)\n    {\n        for(j=i+1;j\u003cn;j++)\n        {\n            chk=a[i]+a[j];\n            for(k=0;k\u003ct;k++)\n            {\n                if(chk % 10==0)\n                    b[p]=b[p]-1;\n                chk=chk/10;\n            }\n            ++p;\n        }\n    }\n    int largest=b[0];\n    for(i=0;i\u003cl;i++)\n    {\n        if (largest \u003c b[i])\n            largest = b[i];\n    }\n    int count=0;\n    for(i=0;i\u003cl;i++)\n    {\n        if (largest == b[i])\n            ++count;\n    }\n    printf(\"%d\\n%d\",largest,count);\n    return 0;\n    }\n}","score":0.0,"language":"c"},{"contest":"Coding Buffet 1","challenge":"IOI Team","code":"#include \u003cstdio.h\u003e\n#include \u003cstring.h\u003e\n#include \u003cmath.h\u003e\n#include \u003cstdlib.h\u003e\nint fact(int x)\n{\n\tint i;int fac=1;\n\tfor(i=2;i\u003c=x;i++)\n\tfac=fac*i;\n\treturn fac;\n}\nint main()\n{\n    int n,t,i,j,chk,p=0,k;\n    scanf(\"%d%d\",\u0026n,\u0026t);\n    for(i=0;i\u003cn;i++)\n        scanf(\"%d\",\u0026a[i]);\n    int l=(fact(n))/(fact(2)*fact(n-2));\n    int a[n];int b[l];\n    for(i=0;i\u003cl;i++)\n        b[i]=t;\n    for(i=0;i\u003cn;++i)\n    {\n        for(j=i+1;j\u003cn;++j)\n        {\n            chk=a[i]+a[j];\n            for(k=0;k\u003ct;++k)\n            {\n                if(chk % 10==0)\n                    b[p]=b[p]-1;\n                chk=chk/10;\n            }\n            ++p;\n        }\n    }\n    int largest=b[0];\n    for(i=0;i\u003cl;++i)\n    {\n        if (largest \u003c b[i])\n            largest = b[i];\n    }\n    int count=0;\n    for(i=0;i\u003cl;++i)\n    {\n        if (largest == b[i])\n            ++count;\n    }\n    printf(\"%d\\n%d\",largest,count);\n    return 0;\n}","score":0.0,"language":"c"},{"contest":"Coding Buffet 1","challenge":"IOI Team","code":"#include \u003cstdio.h\u003e\n#include \u003cstring.h\u003e\n#include \u003cmath.h\u003e\n#include \u003cstdlib.h\u003e\nint fact(int x)\n{\n\tint i;int fac=1;\n\tfor(i=2;i\u003c=x;i++)\n\tfac=fac*i;\n\treturn fac;\n}\nint main()\n{\n    int n,t,i,j,chk,p=0,k;\n    scanf(\"%d%d\",\u0026n,\u0026t);\n    int l=(fact(n))/(fact(2)*fact(n-2));\n    int a[n];int b[l];\n    for(i=0;i\u003cn;i++)\n        scanf(\"%d\",\u0026a[i]);\n    for(i=0;i\u003cl;i++)\n        b[i]=t;\n    for(i=0;i\u003cn;++i)\n    {\n        for(j=i+1;j\u003cn;++j)\n        {\n            chk=a[i]+a[j];\n            for(k=0;k\u003ct;++k)\n            {\n                if(chk % 10==0)\n                    b[p]=b[p]-1;\n                chk=chk/10;\n            }\n            ++p;\n        }\n    }\n    int largest=b[0];\n    for(i=0;i\u003cl;++i)\n    {\n        if (largest \u003c b[i])\n            largest = b[i];\n    }\n    int count=0;\n    for(i=0;i\u003cl;++i)\n    {\n        if (largest == b[i])\n            ++count;\n    }\n    printf(\"%d\\n%d\",largest,count);\n    return 0;\n}","score":0.0,"language":"c"},{"contest":"Coding Buffet 1","challenge":"Word Count 1","code":"#include \u003cstdio.h\u003e\n#include \u003cstring.h\u003e\n#include \u003cmath.h\u003e\n#include \u003cstdlib.h\u003e\n\nint main() {\n    char a[1000];int i,count=1;\n    gets(a);\n    for(i=0;i\u003cstrlen(a);i++)\n        if(a[i]\u003e=65 \u0026\u0026 a[i]\u003c=90)\n            ++count;\n    printf(\"%d\",count);\n    /* Enter your code here. Read input from STDIN. Print output to STDOUT */    \n    return 0;\n}\n","score":0.35,"language":"c"},{"contest":"CODE REACTION","challenge":"Easy_1","code":"#include \u003cstdio.h\u003e\n#include \u003cstring.h\u003e\n#include \u003cmath.h\u003e\n#include \u003cstdlib.h\u003e\n\nint main()\n{\n    int n,i;\n    scanf(\"%d\",\u0026n);\n    for(i=0;i\u003cn;i++)\n    {\n        char a[50];\n        scanf(\"%s\",a);\n        for(i=0;i\u003cstrlen(a);i++)\n        {\n            if(a[i]\u003e=65 \u0026\u0026 a[i]\u003c=90)\n            a[i]=90-(a[i]-65);\n            else if(a[i]\u003e=97 \u0026\u0026 a[i]\u003c=122)\n            a[i]=122-(a[i]-97);\n        }\n        printf(\"%s\",a);\n    }\n    return 0;\n}\n","score":0.2,"language":"c"},{"contest":"CODE REACTION","challenge":"Easy_1","code":"#include \u003cstdio.h\u003e\n#include \u003cstring.h\u003e\n#include \u003cmath.h\u003e\n#include \u003cstdlib.h\u003e\n\nint main()\n{\n    int n,i;\n    scanf(\"%d\",\u0026n);\n    char a[n][50];\n    for(i=0;i\u003cn;i++)\n    scanf(\"%s\",a[n]);\n    for(i=0;i\u003cn;i++)\n    {\n        for(i=0;i\u003cstrlen(a[n]);i++)\n        {\n            if(a[n][i]\u003e=65 \u0026\u0026 a[n][i]\u003c=90)\n            a[n][i]=90-(a[n][i]-65);\n            else if(a[n][i]\u003e=97 \u0026\u0026 a[n][i]\u003c=122)\n            a[n][i]=122-(a[n][i]-97);\n        }\n        printf(\"%s\\n\",a[n]);\n    }\n    return 0;\n}\n","score":0.2,"language":"c"},{"contest":"CODE REACTION","challenge":"easy_2","code":"#include \u003cstdio.h\u003e\n#include \u003cstring.h\u003e\n#include \u003cmath.h\u003e\n#include \u003cstdlib.h\u003e\n\nint main()\n{\n    int n,i,sum=0;\n    scanf(\"%d\",\u0026n);\n    char a[n][50];\n    for(i=0;i\u003cn;i++)\n    scanf(\"%s\",a[n]);\n    for(i=0;i\u003cn;i++)\n    {\n        for(i=0;i\u003cstrlen(a[n]);i++)\n        {\n            if(a[n][i]=='a' || a[n][i]=='e' || a[n][i]=='i' || a[n][i]=='o' || a[n][i]=='u' || a[n][i]=='A' || a[n][i]=='E' || a[n][i]=='I' || a[n][i]=='O' || a[n][i]=='U')\n                sum=sum+a[n][i];\n        }\n        if(sum==0)\n        printf(\"101\\n\");\n        else\n        printf(\"%d\\n\",sum);\n        sum=0;\n    }\n    return 0;\n}\n","score":1.0,"language":"c"},{"contest":"CODE REACTION","challenge":"medium_1","code":"#include \u003cstdio.h\u003e\n#include \u003cstring.h\u003e\n#include \u003cmath.h\u003e\n#include \u003cstdlib.h\u003e\n\nint main()\n{\n    int n,i,j,sum=0;\n    scanf(\"%d\",\u0026n);\n    char a[50];\n    for(i=0;i\u003cn;i++)\n    {\n        scanf(\"%s\",a);\n        for(j=0;j\u003cstrlen(a);j++)\n        printf(\"%d\",a[j]);\n        printf(\"\\n\");\n    }\n    return 0;\n}\n","score":0.333333,"language":"c"},{"contest":"switch-coding-2","challenge":"B-Tree","code":"#include \u003cstdio.h\u003e\n#include \u003cstring.h\u003e\n#include \u003cmath.h\u003e\n#include \u003cstdlib.h\u003e\n\nint main() {\n\n    int T,N;\n    scanf(\"%d\",\u0026T);\n    for(int i=0; i\u003cT; i++)\n    {\n        scanf(\"%d\",\u0026N);\n        int id[N],sum[N];\n        for(int j=0; j\u003cN; j++)\n        {\n            scanf(\"%d %d\",\u0026id[j],\u0026sum[j]);\n            \n        }\n        for(int j=0; j\u003cN; j++)\n        {\n            if(sum[j]!=0)\n            printf(\"%d \",id[j]);\n            \n        }\n    }\n    return 0;\n}\n","score":0.0,"language":"c"},{"contest":"switch-coding-2","challenge":"B-Tree","code":"#include \u003cstdio.h\u003e\n#include \u003cstring.h\u003e\n#include \u003cmath.h\u003e\n#include \u003cstdlib.h\u003e\n\nint main() {\n\n    int T,N;\n    scanf(\"%d\",\u0026T);\n    for(int i=0; i\u003cT; i++)\n    {\n        scanf(\"%d\",\u0026N);\n        int id[N],sum[N];\n        for(int j=0; j\u003cN; j++)\n        {\n            scanf(\"%d %d\",\u0026id[j],\u0026sum[j]);\n            \n        }\n        for(int j=0; j\u003cN; j++)\n        {\n            if(sum[j]!=0)\n            printf(\"%d \",id[j]);\n            \n        }\n    }\n    return 0;\n}\n","score":0.0,"language":"c"},{"contest":"switch-coding-2","challenge":"B-Tree","code":"#include \u003cstdio.h\u003e\n#include \u003cstring.h\u003e\n#include \u003cmath.h\u003e\n#include \u003cstdlib.h\u003e\n\nint main() {\n\n    int T,N;\n    scanf(\"%d\",\u0026T);\n    for(int i=0; i\u003cT; i++)\n    {\n        scanf(\"%d\",\u0026N);\n        int id[N],sum[N];\n        for(int j=0; j\u003cN; j++)\n        {\n            scanf(\"%d %d\",\u0026id[j],\u0026sum[j]);\n            \n        }\n        for(int j=0; j\u003cN; j++)\n        {\n            if(sum[j]!=0)\n            printf(\"%d \",id[j]);\n            \n        }\n    }\n    return 0;\n}\n","score":0.0,"language":"c"},{"contest":"switch-coding-2","challenge":"B-Tree","code":"#include \u003cstdio.h\u003e\n#include \u003cstring.h\u003e\n#include \u003cmath.h\u003e\n#include \u003cstdlib.h\u003e\n\nint main() {\n\n    int T,N;\n    scanf(\"%d\",\u0026T);\n    for(int i=0; i\u003cT; i++)\n    {\n        scanf(\"%d\",\u0026N);\n        int id[N],sum[N];\n        for(int j=0; j\u003cN; j++)\n        {\n            scanf(\"%d %d\",\u0026id[j],\u0026sum[j]);\n            \n        }\n        for(int j=0; j\u003cN; j++)\n        {\n            if(sum[j]!=0)\n            printf(\"%d \",id[j]);\n            \n        }\n    }\n    return 0;\n}\n","score":0.0,"language":"c"},{"contest":"Owasp_code_arena","challenge":"Unique sum","code":"#include \u003cbits/stdc++.h\u003e\n#include \u003ccstring\u003e\n#include \u003ccstdio\u003e\nusing namespace std;\ntypedef long long ll;\n \n#define N 1002\n \n int a[N];\n int b[N*N];\n \nint main()\n{\n\tint t;\n\tscanf(\"%d\",\u0026t);\n\twhile(t--)\n\t{\n\t\tint n;\n\t\tscanf(\"%d\",\u0026n);\n\t\tint i,j,k;\n\t\tfor(i=0;i\u003cn;i++)\n\t\t\tscanf(\"%d\",\u0026a[i]);\n\t\t\n\t\tsort(\u0026a[0],\u0026a[n]);\t//for a-b pairwise\t\n\t\tk = 0;\n\t\tfor(i=0;i\u003cn;i++)\n\t\tfor(j=i+1;j\u003cn;j++)\n\t\tb[k++] = a[i]+a[j];\n\t\t\n\t\tsort(\u0026b[0],\u0026b[k]);\n\t\t\n\t\tll ans  = 0;\n\t\tfor(i=0;i\u003ck;i++)\n\t\t{\n\t\t\t//cout\u003c\u003cb[i]\u003c\u003c\" \";\n\t\t\tans += (i - (k-i-1))*2*(ll)b[i]; //k instead of n\n\t\t}\n\t\t//cout\u003c\u003cans\u003c\u003c\"\\n\";\n\t\tfor(i=0;i\u003cn;i++)\n\t\tfor(j=i+1;j\u003cn;j++)\n\t\t{\n\t\t\t//cout\u003c\u003ca[j]-a[i]\u003c\u003c\" \";\n\t\t\tans -= 2*(n-2)*(ll)(a[j]-a[i]);\n\t\t}\n\t\tprintf(\"%lld\\n\",ans);\n\t\t\n\t}\n\treturn 0;\n}","score":1.0,"language":"cpp"},{"contest":"Owasp_code_arena","challenge":"Play with strings 4","code":"#include \u003cstdio.h\u003e\n#include \u003cstring.h\u003e\n#include \u003cmath.h\u003e\n#include \u003cstdlib.h\u003e\n\nint main() {\n\n    /* Enter your code here. Read input from STDIN. Print output to STDOUT */    \n    char str[51];int i,sum=0;\n    scanf(\"%s\",str);\n    sum=str[0];\n    for(i=0;i\u003cstrlen(str)-2;i++)\n    {\n        if(str[i+1]=='+')\n            sum=sum+str[i+2];\n        else if(str[i+1]=='-')\n            sum=sum-str[i+2];\n        else\n            continue;\n    }\n    printf(\"%d\",sum);\n    return 0;\n}\n","score":0.75,"language":"c"},{"contest":"Owasp_code_arena","challenge":"Play with strings 4","code":"#include \u003cstdio.h\u003e\n#include \u003cstring.h\u003e\n#include \u003cmath.h\u003e\n#include \u003cstdlib.h\u003e\n\nint main() {\n\n    /* Enter your code here. Read input from STDIN. Print output to STDOUT */    \n    char str[51];int i,sum=0;\n    scanf(\"%s\",str);\n    sum=str[0];\n    for(i=2;i\u003cstrlen(str);i++)\n    {\n        if(str[i-1]=='+')\n            sum=sum+str[i];\n        else if(str[i-1]=='-')\n            sum=sum-str[i];\n    }\n    printf(\"%d\",sum);\n    return 0;\n}\n","score":1.0,"language":"c"},{"contest":"Owasp_code_arena","challenge":"Lost contacts","code":"#include \u003cstdio.h\u003e\n#include \u003cstring.h\u003e\n#include \u003cmath.h\u003e\n#include \u003cstdlib.h\u003e\n\nint main() {\n\n    /* Enter your code here. Read input from STDIN. Print output to STDOUT */ \n    char names[][8]={\"Chirag\",\"Rohan\",\"Raghav\",\"Dixit\",\"Sourav\",\"Virat\"};\n    char msg[1000];int i,j,count=0;\n    scanf(\"%[^\\n]s\",msg);\n    for(i=0;i\u003c6;i++)\n    {\n        if(strstr(msg,names[i]))\n        {++count;j=i;}\n    }\n    if(count==1)\n        printf(\"Yes %s\",names[j]);\n    else\n        printf(\"No\");\n    return 0;\n}\n","score":0.666667,"language":"c"},{"contest":"Owasp_code_arena","challenge":"Lost contacts","code":"#include \u003cstdio.h\u003e\n#include \u003cstring.h\u003e\n#include \u003cmath.h\u003e\n#include \u003cstdlib.h\u003e\n\nint main() {\n\n    /* Enter your code here. Read input from STDIN. Print output to STDOUT */ \n    char names[][8]={\"Chirag\",\"Rohan\",\"Raghav\",\"Dixit\",\"Sourav\",\"Virat\"};\n    char msg[1000];int i,j,count=0;\n    scanf(\"%[^\\n]s\",msg);\n    for(i=0;i\u003c6;i++)\n    {\n        if(strstr(msg,names[i]))\n        {++count;j=i;}\n        if(strstr(msg+10,names[i]))\n        ++count;\n    }\n    if(count==1)\n        printf(\"Yes %s\",names[j]);\n    else\n        printf(\"No\");\n    return 0;\n}\n","score":0.666667,"language":"c"},{"contest":"Owasp_code_arena","challenge":"Zig zag primes","code":"#include \u003cstdio.h\u003e\n#include \u003cstring.h\u003e\n#include \u003cmath.h\u003e\n#include \u003cstdlib.h\u003e\n\nint chkprime(int p)\n{\n\tint a=0,b;\n\tfor(b=2;b\u003cp;b++)\n\tif(p%b==0 \u0026\u0026 ++a)\n\tbreak;\n\treturn (a==0?1:0);\n}\nint main() {\n\n    /* Enter your code here. Read input from STDIN. Print output to STDOUT */    \n    int m,n,i,j,sum=0,count=0;\n    scanf(\"%d %d\",\u0026m,\u0026n);\n    int mat[m][n];\n    for(i=0;i\u003cm;i++)\n        for(j=0;j\u003cn;j++)\n            scanf(\"%d \",\u0026mat[i][j]);\n    for(i=0;i\u003cm;i++)\n    {\n        if(i%2==0)\n        {\n            for(j=0;j\u003cn;j++)\n            {\n                if(chkprime(mat[i][j]))\n                {\n                    if(count%2==0)\n                        sum=sum+mat[i][j];\n                    count++;\n                }\n            }\n        }\n        if(i%2!=0)\n        {\n            for(j=n-1;j\u003e=0;j--)\n            {\n                if(chkprime(mat[i][j]))\n                {\n                    if(count%2==0)\n                        sum=sum+mat[i][j];\n                    count++;\n                }\n            }\n        }\n    }\n    printf(\"%d\",sum);\n    return 0;\n}\n","score":1.0,"language":"c"},{"contest":"Owasp_code_arena","challenge":"Crazy array game","code":"#include \u003cstdio.h\u003e\n#include \u003cstring.h\u003e\n#include \u003cmath.h\u003e\n#include \u003cstdlib.h\u003e\n\nint main() {\n    int t,n,i,A=0,B=0;\n    scanf(\"%d\",\u0026t);\n    while(t--)\n    {\n        scanf(\"%d\",\u0026n);\n        int a[n],b[n];\n        for(i=0;i\u003cn;i++)\n        scanf(\"%d\",\u0026a[i]);\n        for(i=0;i\u003cn;i++)\n        scanf(\"%d\",\u0026b[i]);\n    \n    for(i=0;i\u003cn;i++)\n    {\n        A=A+a[i];\n        B=B+b[i];\n    }\n    if(A==B)\n        printf(\"draw\\n\");\n    else if(A\u003cB)\n        printf(\"crazy dictator\\n\");\n    else\n        printf(\"egoistic terrorist\\n\");\n    }\n    /* Enter your code here. Read input from STDIN. Print output to STDOUT */    \n    return 0;\n}\n","score":0.0,"language":"c"},{"contest":"Week of Code 36","challenge":"Acid Naming","code":"#include \u003cbits/stdc++.h\u003e\n\nusing namespace std;\n\nstring acidNaming(string acid_name) {\n    // Complete this function\n    if(acid_name.substr(acid_name.length()-2)==\"ic\")\n    {\n        if(acid_name.substr(0,5)==\"hydro\")\n            return \"non-metal acid\";\n        else\n            return \"polyatomic acid\";\n    }\n    else\n        return \"not an acid\";\n}\n\nint main() {\n    int n;\n    cin \u003e\u003e n;\n    for(int a0 = 0; a0 \u003c n; a0++){\n        string acid_name;\n        cin \u003e\u003e acid_name;\n        string result = acidNaming(acid_name);\n        cout \u003c\u003c result \u003c\u003c endl;\n    }\n    return 0;\n}\n","score":1.0,"language":"cpp"},{"contest":"Week of Code 36","challenge":"Ways to give a check","code":"#include \u003cmath.h\u003e\n#include \u003cstdio.h\u003e\n#include \u003cstring.h\u003e\n#include \u003cstdlib.h\u003e\n#include \u003cassert.h\u003e\n#include \u003climits.h\u003e\n#include \u003cstdbool.h\u003e\n\nint waysToGiveACheck(char board[8][8]) {\n    // Complete this function\n    int i,j,p[2]={0},k[2],P=0,x,y,ys;\n    for(i=0;i\u003c8;i++){\n        for(j=0;j\u003c8;j++){\n            if(i==1 \u0026\u0026 board[i][j]=='P' \u0026\u0026 board[i-1][j]=='#'){\n                p[0]=i-1;\n                p[1]=j;\n                board[i][j]='#';\n            }\n            if(board[i][j]=='k'){\n                k[0]=i;\n                k[1]=j;\n            }\n        }\n    }\n    x=k[0]-1;\n    y=k[1]-p[1];\n    \n    if(x==0){\n        if(y\u003c0){\n            y=k[1]+1;\n            while(y\u003c8){\n                if(board[1][y]!='#'){\n                    if(board[1][y]=='Q' || board[1][y]=='R')return 4;\n                    break;\n                }\n                y++;\n            }\n        }\n        else{\n            y=k[1]-1;\n            while(y\u003e-1){\n                if(board[1][y]!='#'){\n                    if(board[1][y]=='Q' || board[1][y]=='R')return 4;\n                    break;\n                }\n                y--;\n            }\n\n        }  \n    }\n    else if(x==abs(y))\n        {\n            if(y\u003c0)ys=-1;else ys=1;\n            x=k[0]-1;\n            y=k[1]-ys;\n            while(x\u003e-1 \u0026\u0026 y\u003e-1 \u0026\u0026 y\u003c8){\n                //printf(\"%d %d \",x,y);\n                if(board[x][y]!='#'){\n                    if(board[x][y]=='Q'|| board[x][y]=='B')return 4;\n                    break;\n                }\n                x--;\n                y-=ys;\n            }\n        }\n    \n    j=0;\n    x=k[0]-p[0];\n    y=k[1]-p[1];\n    if(x==0){\n        j+=2;\n        if(y\u003c0){\n            while(y\u003c-1){\n                if(board[0][k[1]-y-1]!='#'){\n                    j-=2;\n                    break;\n                }\n                y++;\n            }\n        }\n        else{\n            while(y\u003e1){\n                if(board[0][k[1]-y+1]!='#'){\n                    j-=2;\n                    break;\n                }\n                y--;\n            }\n\n        }  \n    }\n    else if(y==0){\n        j+=2;\n\n        while(x\u003e2){\n            if(board[k[0]-x+2][k[1]]!='#'){\n                j-=2;\n                break;\n            }\n            x--;\n        }\n    }\n    else if(x==abs(y)){\n        j+=2;\n        if(y\u003c0)ys=-1;else ys=1;\n        while(x\u003e1){\n            if(board[k[0]-x+1][k[1]-y+ys]!='#'){\n                j-=2;\n                break;\n            }\n            x--;\n            y-=ys;\n        }\n    }\n    else if((abs(x)==1 \u0026\u0026 abs(y)==2)|| (abs(x)==2 \u0026\u0026 abs(y)==1)){\n        j++;\n    }\n    return j;\n}\n\nint main() {\n    int t; \n    scanf(\"%i\", \u0026t);\n    for(int a0 = 0; a0 \u003c t; a0++){\n        char ch,board[8][8];\n        ch=getchar_unlocked();\n        for (int board_i = 0; board_i \u003c 8; board_i++) {\n           for (int board_j = 0; board_j \u003c 8; board_j++) {\n               while(ch=='\\n' || ch==' ')ch=getchar_unlocked();\n                board[board_i][board_j]=ch;\n              //printf(\"%c\",board[board_i][board_j]);\n               ch=getchar_unlocked();\n           }\n           \n        }\n        int result = waysToGiveACheck(board);\n        printf(\"%d\\n\", result);\n    }\n    return 0;\n}","score":1.0,"language":"cpp"},{"contest":"Week of Code 36","challenge":"Ways to give a check","code":"#include \u003cmath.h\u003e\n#include \u003cstdio.h\u003e\n#include \u003cstring.h\u003e\n#include \u003cstdlib.h\u003e\n#include \u003cassert.h\u003e\n#include \u003climits.h\u003e\n#include \u003cstdbool.h\u003e\n\nint main() \n{\n    int i,j,t,p,r; \n    scanf(\"%d\", \u0026t);\n    while(t--)\n    {\n        char b[9][9];\n        for(i=0;i\u003c8;i++)\n            for(j=0;j\u003c9;j++)\n                scanf(\"%c\",\u0026b[i][j]);\n        for(j=0;j\u003c8;j++)\n            if(b[1][j]=='P')\n                break;\n        p=j;\n        if( (p-2\u003e=0 \u0026\u0026 b[1][p-2]=='k') ||  (p+2\u003c8 \u0026\u0026 b[1][p+2]=='k') ||  (p-1\u003e=0 \u0026\u0026 b[2][p-1]=='k') ||  (p+1\u003c8 \u0026\u0026 b[2][p+1]=='k') )\n            r=1;\n       else\n        {\n            for(i=1;i\u003c8;i++)\n            {\n                if(p-i\u003e=0 \u0026\u0026 b[0][p-i]=='k')\n                {\n                    for(j=p-i+1;j\u003cp;j++)\n                    {\n                        if(b[0][j]!='#')\n                        {r=0;break;}\n                        else\n                        {r=2;break;}\n                    }\n                }\n                else if(p+i\u003c8 \u0026\u0026 b[0][p+i]=='k')\n                {\n                    for(j=p+1;j\u003cp+i;j++)\n                    {\n                        if(b[0][j]!='#')\n                        {r=0;break;}\n                        else\n                        {r=2;break;}\n                    }\n                }\n                else if(b[i][p]=='k')\n                {\n                    for(j=2;j\u003ci;j++)\n                    {\n                        if(b[j][p]!='#')\n                        {r=0;break;}\n                        else\n                        {r=2;break;}\n                    }\n                }\n                else if(p-i\u003e=0 \u0026\u0026 b[i][p-i]=='k')\n                {\n                    for(j=1;j\u003ci;j++)\n                    {\n                        if(b[j][p-j]!='#')\n                        {r=0;break;}\n                        else\n                        {r=2;break;}\n                    }\n                }\n                else if(p+i\u003c8 \u0026\u0026 b[i][p+i]=='k')\n                {\n                    for(j=1;j\u003ci;j++)\n                    {\n                        if(b[j][p+j]!='#')\n                        {r=0;break;}\n                        else\n                        {r=2;break;}\n                    }\n                }\n            }\n        }\n        printf(\"%d\\n\",r);\n    }\n    return 0;\n}","score":0.166667,"language":"c"},{"contest":"iet_codingcombat","challenge":"Zig zag primes 1","code":"#include \u003cstdio.h\u003e\n#include \u003cstring.h\u003e\n#include \u003cmath.h\u003e\n#include \u003cstdlib.h\u003e\n\nint chkprime(int p)\n{\n\tint a=0,b;\n\tfor(b=2;b\u003cp;b++)\n\tif(p%b==0 \u0026\u0026 ++a)\n\tbreak;\n\treturn (a==0?1:0);\n}\nint main() {\n\n    /* Enter your code here. Read input from STDIN. Print output to STDOUT */    \n    int m,n,i,j,sum=0,count=0;\n    scanf(\"%d %d\",\u0026m,\u0026n);\n    int mat[m][n];\n    for(i=0;i\u003cm;i++)\n        for(j=0;j\u003cn;j++)\n            scanf(\"%d \",\u0026mat[i][j]);\n    for(i=0;i\u003cm;i++)\n    {\n        if(i%2==0)\n        {\n            for(j=0;j\u003cn;j++)\n            {\n                if(chkprime(mat[i][j]))\n                {\n                    if(count%2==0)\n                        sum=sum+mat[i][j];\n                    count++;\n                }\n            }\n        }\n        if(i%2!=0)\n        {\n            for(j=n-1;j\u003e=0;j--)\n            {\n                if(chkprime(mat[i][j]))\n                {\n                    if(count%2==0)\n                        sum=sum+mat[i][j];\n                    count++;\n                }\n            }\n        }\n    }\n    printf(\"%d\",sum);\n    return 0;\n}\n","score":1.0,"language":"c"},{"contest":"iet_codingcombat","challenge":"largest number 6","code":"#include \u003ccmath\u003e\n#include \u003ccstdio\u003e\n#include \u003cvector\u003e\n#include \u003ciostream\u003e\n#include \u003calgorithm\u003e\n#include \u003cstring\u003e\nusing namespace std;\nint myCompare(string X, string Y)\n{\n    string XY = X.append(Y);\n    string YX = Y.append(X);\n    return XY.compare(YX) \u003e 0 ? 1: 0;\n}\nint main() {\n    /* Enter your code here. Read input from STDIN. Print output to STDOUT */   \n    int i,n;\n    cin \u003e\u003e n;\n    int arr[n];\n    for(i=0;i\u003cn;i++)\n        cin \u003e\u003e arr[i];\n    sort(arr,arr+n,[](const std::string \u0026lhs, const std::string \u0026rhs){return rhs+lhs \u003c lhs+rhs;});\n    for(i=0;i\u003cn;i++)\n        cout \u003c\u003c arr[i];\n    return 0;\n}\n","score":0.0,"language":"cpp"},{"contest":"iet_codingcombat","challenge":"largest number 6","code":"#include \u003ccmath\u003e\n#include \u003ccstdio\u003e\n#include \u003cvector\u003e\n#include \u003ciostream\u003e\n#include \u003calgorithm\u003e\n#include \u003cstring\u003e\nusing namespace std;\nint myCompare(string X, string Y)\n{\n    string XY = X.append(Y);\n    string YX = Y.append(X);\n    return XY.compare(YX) \u003e 0 ? 1: 0;\n}\nint main() {\n    /* Enter your code here. Read input from STDIN. Print output to STDOUT */   \n    int i,n;\n    cin \u003e\u003e n;\n    vector\u003cstring\u003e arr;\n    for(i=0;i\u003cn;i++)\n    {\n        string input;\n        cin \u003e\u003e input;\n        arr.push_back(input);\n    }\n    sort(arr.begin(), arr.end(), myCompare);\n    for(i=0;i\u003carr.size();i++)\n        cout \u003c\u003c arr[i];\n    return 0;\n}\n","score":1.0,"language":"cpp"},{"contest":"Week of Code 36","challenge":"Ways to give a check","code":"#include \u003cmath.h\u003e\n#include \u003cstdio.h\u003e\n#include \u003cstring.h\u003e\n#include \u003cstdlib.h\u003e\n#include \u003cassert.h\u003e\n#include \u003climits.h\u003e\n#include \u003cstdbool.h\u003e\n\nint main() \n{\n    int i,j,t,p,r;char X; \n    scanf(\"%d\", \u0026t);\n    scanf(\"%c\",\u0026X);\n    while(t--)\n    {\n        char b[9][9];\n        for(i=0;i\u003c8;i++)\n            for(j=0;j\u003c9;j++)\n                scanf(\"%c\",\u0026b[i][j]);\n        for(j=0;j\u003c8;j++)\n            if(b[1][j]=='P')\n            {\n                p=j;\n                b[1][j]='#';\n                break;\n            }\n        if( (p-2\u003e=0 \u0026\u0026 b[1][p-2]=='k') ||  (p+2\u003c8 \u0026\u0026 b[1][p+2]=='k') ||  (p-1\u003e=0 \u0026\u0026 b[2][p-1]=='k') ||  (p+1\u003c8 \u0026\u0026 b[2][p+1]=='k') )\n            r=1;\n       else\n        {\n            for(i=1;i\u003c8;i++)\n            {\n                if(p-i\u003e=0 \u0026\u0026 b[0][p-i]=='k')\n                {\n                    for(j=p-i+1;j\u003cp;j++)\n                    {\n                        if(b[0][j]!='#')\n                        {r=0;break;}\n                        else\n                        {r=2;break;}\n                    }\n                }\n                else if(p+i\u003c8 \u0026\u0026 b[0][p+i]=='k')\n                {\n                    for(j=p+1;j\u003cp+i;j++)\n                    {\n                        if(b[0][j]!='#')\n                        {r=0;break;}\n                        else\n                        {r=2;break;}\n                    }\n                }\n                else if(b[i][p]=='k')\n                {\n                    for(j=2;j\u003ci;j++)\n                    {\n                        if(b[j][p]!='#')\n                        {r=0;break;}\n                        else\n                        {r=2;break;}\n                    }\n                }\n                else if(p-i\u003e=0 \u0026\u0026 b[i][p-i]=='k')\n                {\n                    for(j=1;j\u003ci;j++)\n                    {\n                        if(b[j][p-j]!='#')\n                        {r=0;break;}\n                        else\n                        {r=2;break;}\n                    }\n                }\n                else if(p+i\u003c8 \u0026\u0026 b[i][p+i]=='k')\n                {\n                    for(j=1;j\u003ci;j++)\n                    {\n                        if(b[j][p+j]!='#')\n                        {r=0;break;}\n                        else\n                        {r=2;break;}\n                    }\n                }\n            }\n        }\n        printf(\"%d\\n\",r);\n    }\n    return 0;\n}","score":0.166667,"language":"c"},{"contest":"University CodeSprint 4","challenge":"Unique Art","code":"#include \u003ccmath\u003e\n#include \u003ccstdio\u003e\n#include \u003cvector\u003e\n#include \u003ciostream\u003e\n#include \u003calgorithm\u003e\nusing namespace std;\nint uniquePaintings(int begin,int end,int *paintings)\n{\n    int i,j,count1,count2=0;\n    for(i=begin-1;i\u003cend;i++)\n    {\n        count1=0;\n        for(j=begin-1;j\u003cend;j++)\n        {\n            if(*(paintings+i)==*(paintings+j))\n                ++count1;\n        }\n        if(count1==1)\n            ++count2;\n    }\n    return count2;\n}\n\nint main()\n{\n    /* Enter your code here. Read input from STDIN. Print output to STDOUT */   \n    int i,j,n,sn;\n    cin \u003e\u003e n;\n    int paintings[n];\n    for(i=0;i\u003cn;i++)\n    cin \u003e\u003e paintings[i];\n    cin \u003e\u003e sn;\n    int sdata[sn][2];\n    for(i=0;i\u003csn;i++)\n    cin \u003e\u003e sdata[i][0] \u003e\u003e sdata[i][1];\n    for(i=0;i\u003csn;i++)\n        cout \u003c\u003c uniquePaintings(sdata[i][0],sdata[i][1],paintings) \u003c\u003c '\\n';\n    return 0;\n}\n","score":0.25,"language":"cpp14"},{"contest":"University CodeSprint 4","challenge":"Unique Art","code":"#include \u003ccmath\u003e\n#include \u003ccstdio\u003e\n#include \u003cvector\u003e\n#include \u003ciostream\u003e\n#include \u003calgorithm\u003e\nusing namespace std;\nint uniquePaintings(int begin,int end,int *paintings)\n{\n    int i,j,count1,count2=0;\n    for(i=begin-1;i\u003cend;i++)\n    {\n        count1=0;\n        for(j=begin-1;j\u003cend;j++)\n        {\n            if(*(paintings+i)==*(paintings+j))\n                ++count1;\n            if(count1==2)\n                break;\n        }\n        if(count1==1)\n            ++count2;\n    }\n    return count2;\n}\n\nint main()\n{\n    /* Enter your code here. Read input from STDIN. Print output to STDOUT */   \n    int i,j,n,sn;\n    cin \u003e\u003e n;\n    int paintings[n];\n    for(i=0;i\u003cn;i++)\n    cin \u003e\u003e paintings[i];\n    cin \u003e\u003e sn;\n    int sdata[sn][2];\n    for(i=0;i\u003csn;i++)\n    cin \u003e\u003e sdata[i][0] \u003e\u003e sdata[i][1];\n    for(i=0;i\u003csn;i++)\n        cout \u003c\u003c uniquePaintings(sdata[i][0],sdata[i][1],paintings) \u003c\u003c '\\n';\n    return 0;\n}\n","score":0.25,"language":"cpp14"},{"contest":"University CodeSprint 4","challenge":"Unique Art","code":"\n#include \u003cbits/stdc++.h\u003e\nusing namespace std;\nint uniquePaintings(int begin,int end,int *paintings)\n{\n    int i,j,count1,count2=0;\n    for(i=begin-1;i\u003cend;i++)\n    {\n        count1=0;\n        for(j=begin-1;j\u003cend;j++)\n        {\n            if(*(paintings+i)==*(paintings+j))\n                ++count1;\n            if(count1==2)\n                break;\n        }\n        if(count1==1)\n            ++count2;\n    }\n    return count2;\n}\n\nint main()\n{\n    /* Enter your code here. Read input from STDIN. Print output to STDOUT */   \n    int i,j,n,sn;\n    cin \u003e\u003e n;\n    int paintings[n];\n    for(i=0;i\u003cn;i++)\n    cin \u003e\u003e paintings[i];\n    cin \u003e\u003e sn;\n    int sdata[sn][2];\n    for(i=0;i\u003csn;i++)\n    cin \u003e\u003e sdata[i][0] \u003e\u003e sdata[i][1];\n    for(i=0;i\u003csn;i++)\n        cout \u003c\u003c uniquePaintings(sdata[i][0],sdata[i][1],paintings) \u003c\u003c '\\n';\n    return 0;\n}\n","score":0.25,"language":"cpp14"},{"contest":"University CodeSprint 4","challenge":"Unique Art","code":"#include \u003cbits/stdc++.h\u003e\nusing namespace std;\nint uniquePaintings(int begin,int end,int *paintings)\n{\n    unordered_map\u003cint, int\u003e hm;\n    int i,j,c=0;\n    for(i=begin-1;i\u003cend;i++)\n    hm[*(paintings+i)]++;\n    for(i=begin-1;i\u003cend;i++)\n        if(hm[*(paintings+i)]==1)\n            ++c;\n    return c;\n}\n    \nint main()\n{\n    /* Enter your code here. Read input from STDIN. Print output to STDOUT */   \n    int i,j,n,sn;\n    cin \u003e\u003e n;\n    int paintings[n];\n    for(i=0;i\u003cn;i++)\n    cin \u003e\u003e paintings[i];\n    cin \u003e\u003e sn;\n    int sdata[sn][2];\n    for(i=0;i\u003csn;i++)\n    cin \u003e\u003e sdata[i][0] \u003e\u003e sdata[i][1];\n    for(i=0;i\u003csn;i++)\n        cout \u003c\u003c uniquePaintings(sdata[i][0],sdata[i][1],paintings) \u003c\u003c '\\n';\n    return 0;\n}\n","score":0.25,"language":"cpp14"},{"contest":"University CodeSprint 4","challenge":"Unique Art","code":"#include \u003cbits/stdc++.h\u003e\nusing namespace std;\nint uniquePaintings(int begin,int end,int *paintings)\n{\n    unordered_map\u003cint, int\u003e hm;\n    int i,j,c=0;\n    for(i=begin-1;i\u003cend;i++)\n    hm[*(paintings+i)]++;\n    for(i=begin-1;i\u003cend;i++)\n        if(hm[*(paintings+i)]==1)\n            ++c;\n    return c;\n}\n    \nint main()\n{\n    /* Enter your code here. Read input from STDIN. Print output to STDOUT */   \n    ios_base::sync_with_stdio(false);\n    cin.tie(NULL);\n    int i,j,n,sn;\n    cin \u003e\u003e n;\n    int paintings[n];\n    for(i=0;i\u003cn;i++)\n    cin \u003e\u003e paintings[i];\n    cin \u003e\u003e sn;\n    int sdata[sn][2];\n    for(i=0;i\u003csn;i++)\n    cin \u003e\u003e sdata[i][0] \u003e\u003e sdata[i][1];\n    for(i=0;i\u003csn;i++)\n        cout \u003c\u003c uniquePaintings(sdata[i][0],sdata[i][1],paintings) \u003c\u003c '\\n';\n    return 0;\n}\n","score":0.25,"language":"cpp14"},{"contest":"University CodeSprint 4","challenge":"Unique Art","code":"#include \u003cbits/stdc++.h\u003e\nusing namespace std;\nint uniquePaintings(int begin,int end,int *paintings)\n{\n    unordered_map\u003cint, int\u003e hm;\n    int i,j,c=0;\n    for(i=begin-1;i\u003cend;i++)\n    hm[*(paintings+i)]++;\n    for(i=begin-1;i\u003cend;i++)\n        if(hm[*(paintings+i)]==1)\n            ++c;\n    return c;\n}\n    \nint main()\n{\n    /* Enter your code here. Read input from STDIN. Print output to STDOUT */   \n    ios_base::sync_with_stdio(false);\n    cin.tie(NULL);\n    int i,j,n,sn;\n    cin \u003e\u003e n;\n    int paintings[n];\n    for(i=0;i\u003cn;i++)\n    cin \u003e\u003e paintings[i];\n    cin \u003e\u003e sn;\n    int sdata[sn][2];\n    for(i=0;i\u003csn;i++)\n    cin \u003e\u003e sdata[i][0] \u003e\u003e sdata[i][1];\n    for(i=0;i\u003csn;i++)\n        cout \u003c\u003c uniquePaintings(sdata[i][0],sdata[i][1],paintings) \u003c\u003c '\\n';\n    return 0;\n}\n","score":0.25,"language":"cpp"},{"contest":"University CodeSprint 4","challenge":"Unique Art","code":"#include \u003cbits/stdc++.h\u003e\nusing namespace std;\nint uniquePaintings(int begin,int end,int *paintings)\n{\n    unordered_map\u003cint, int\u003e hm;\n    int i,j,c=0;\n    for(i=begin-1;i\u003cend;i++)\n    hm[*(paintings+i)]++;\n    for(i=begin-1;i\u003cend;i++)\n        if(hm[*(paintings+i)]==1)\n            ++c;\n    return c;\n}\n    \nint main()\n{\n    /* Enter your code here. Read input from STDIN. Print output to STDOUT */   \n    ios_base::sync_with_stdio(false);\n    cin.tie(NULL);\n    int i,j,n,sn;\n    cin \u003e\u003e n;\n    int paintings[n];\n    cin.ignore(numeric_limits\u003cstreamsize\u003e::max(), '\\n');\n    for(i=0;i\u003cn;i++)\n    cin \u003e\u003e paintings[i];\n    cin \u003e\u003e sn;\n    int sdata[sn][2];\n    for(i=0;i\u003csn;i++)\n    cin \u003e\u003e sdata[i][0] \u003e\u003e sdata[i][1];\n    for(i=0;i\u003csn;i++)\n        cout \u003c\u003c uniquePaintings(sdata[i][0],sdata[i][1],paintings) \u003c\u003c '\\n';\n    return 0;\n}\n","score":0.25,"language":"cpp14"},{"contest":"University CodeSprint 4","challenge":"Unique Art","code":"#include \u003cbits/stdc++.h\u003e\n\nusing namespace std;\n\nvector\u003cstring\u003e split_string(string);\n\n\n/*\n * Complete the student function below.\n */\nint student(int begin,int end,vector\u003cint\u003e t) {\n    // Return the number of paintings that this student will appreciate.\n    unordered_map\u003cint, int\u003e hm;\n    int i,j,c=0;\n    for(i=begin-1;i\u003cend;i++)\n    hm[t[i]]++;\n    for(i=begin-1;i\u003cend;i++)\n        if(hm[t[i]]==1)\n            ++c;\n    return c;\n}\n\n\nint main()\n{\n    int n;\n    cin \u003e\u003e n;\n    cin.ignore(numeric_limits\u003cstreamsize\u003e::max(), '\\n');\n\n    string t_temp_temp;\n    getline(cin, t_temp_temp);\n\n    vector\u003cstring\u003e t_temp = split_string(t_temp_temp);\n\n    vector\u003cint\u003e t(n);\n\n    for (int t_itr = 0; t_itr \u003c n; t_itr++) {\n        int t_item = stoi(t_temp[t_itr]);\n\n        t[t_itr] = t_item;\n    }\n\n    int q;\n    cin \u003e\u003e q;\n    cin.ignore(numeric_limits\u003cstreamsize\u003e::max(), '\\n');\n\n    for (int q_itr = 0; q_itr \u003c q; q_itr++) {\n        string ij_temp;\n        getline(cin, ij_temp);\n\n        vector\u003cstring\u003e ij = split_string(ij_temp);\n\n        int i = stoi(ij[0]);\n\n        int j = stoi(ij[1]);\n\n        int result = student(i, j, t);\n\n        cout \u003c\u003c result \u003c\u003c \"\\n\";\n    }\n\n    return 0;\n}\n\nvector\u003cstring\u003e split_string(string input_string) {\n    string::iterator new_end = unique(input_string.begin(), input_string.end(), [] (const char \u0026x, const char \u0026y) {\n        return x == y and x == ' ';\n    });\n\n    input_string.erase(new_end, input_string.end());\n\n    while (input_string[input_string.length() - 1] == ' ') {\n        input_string.pop_back();\n    }\n\n    vector\u003cstring\u003e splits;\n    char delimiter = ' ';\n\n    size_t i = 0;\n    size_t pos = input_string.find(delimiter);\n\n    while (pos != string::npos) {\n        splits.push_back(input_string.substr(i, pos - i));\n\n        i = pos + 1;\n        pos = input_string.find(delimiter, i);\n    }\n\n    splits.push_back(input_string.substr(i, min(pos, input_string.length()) - i + 1));\n\n    return splits;\n}\n","score":0.25,"language":"cpp"},{"contest":"University CodeSprint 4","challenge":"Cubes and Cylinders","code":"#include\u003ciostream\u003e\n#include\u003ccmath\u003e\nusing namespace std;\nint main()\n{\n\tint i,j,n,m,count=0;\n\tcin \u003e\u003e n \u003e\u003e m;\n\tint s[n],k[n],r[m],c[m];\n\tfor(i=0;i\u003cn;i++)\n\t\tcin\u003e\u003es[i];\n\tfor(i=0;i\u003cn;i++)\n\t\tcin\u003e\u003ek[i];\n\tfor(i=0;i\u003cm;i++)\n\t\tcin\u003e\u003er[i];\n\tfor(i=0;i\u003cm;i++)\n\t\tcin\u003e\u003ec[i];\n\ti=-1;I:++i;if(i\u003e=n) goto exit;\n\tj=-1;J:++j;if(j\u003e=m) goto I;\n\tif(s[i]\u003c=1.41421356237F*r[j] \u0026\u0026 c[j]!=0)\n\t{\n\t\twhile(k[i]!=0 \u0026\u0026 c[j]!=0)\n\t\t{  \n\t\t\tk[i]=k[i]-1;\n\t\t\tc[j]=c[j]-1;\n\t\t\t++count;   \n\t\t}   \n\t}\n\tif(k[i]==0 \u0026\u0026 c[j]==0)\n\tgoto I;\n\tif(k[i]==0)\n\tgoto I;\n\tif(c[j]==0)\n\tgoto J;\n\texit:;\n\tcout\u003c\u003ccount;\n\treturn 0;\n}\t\n","score":0.468966,"language":"cpp"},{"contest":"Mock ICPC","challenge":"ICPC_D","code":"#include \u003ciostream\u003e\nusing namespace std;\n\n\nint main() {\n    /* Enter your code here. Read input from STDIN. Print output to STDOUT */ \n    int t,i,n,k;\n    cin\u003e\u003et;\n    while(t--)\n    {\n        cin\u003e\u003en\u003e\u003ek;\n        int a[n];\n        for(i=0;i\u003cn;i++)\n            cin\u003e\u003ea[i];\n        for(i=k+1;i\u003cn;i++)\n            cout\u003c\u003ca[i]\u003c\u003c\" \";\n        for(i=0;i\u003c=k;i++)\n            cout\u003c\u003ca[i]\u003c\u003c\" \";\n        cout\u003c\u003cendl;\n    }\n    return 0;\n}\n","score":0.0,"language":"cpp14"},{"contest":"Mock ICPC","challenge":"ICPC_A","code":"#include\u003ciostream\u003e\n#include\u003cstring.h\u003e\nusing namespace std;\nint main()\n{\n    int n,i,k,l,y=0,j,max=0,sum;\n    \n    cin\u003e\u003en;\n    int a[n];\n    while(n--)\n    {   sum=0;\n    \n        string s;\n        cin\u003e\u003es;\n        l=s.length();\n        \n    \n    for(i=0;i\u003cl;i++)\n    {\n        if(s[i]=='-')\n        {\n            sum=sum-(int(s[i+1])-48);\n            i++;\n            goto label;\n        }\n        if(s[i]=='+')\n        {\n            sum=sum+(int(s[i+1])-48);\n            i++;\n            goto label;\n        }\n        k=int(s[i])-48;\n        sum=sum+k;\n        label:;\n    }\n    \n    a[y]=sum;\n    y++;\n    \n    }\n    for(j=0;j\u003cy;j++)\n    {\n        if(a[j]\u003emax)\n        {\n            max=a[j];\n        }\n    }\n    cout\u003c\u003cmax;\n\n    return 0;\n    \n}\n","score":1.0,"language":"cpp14"},{"contest":"Mock ICPC","challenge":"ICPC_D","code":"#include \u003ciostream\u003e\nusing namespace std;\n\n\nint main() {\n    /* Enter your code here. Read input from STDIN. Print output to STDOUT */ \n    int t,i,n,k;\n    cin\u003e\u003et;\n    while(t--)\n    {\n        cin\u003e\u003en\u003e\u003ek;\n        int a[n];\n        for(i=0;i\u003cn;i++)\n            cin\u003e\u003ea[i];\n        k=k%n;\n        for(i=k+1;i\u003cn;i++)\n            cout\u003c\u003ca[i]\u003c\u003c\" \";\n        for(i=0;i\u003c=k;i++)\n            cout\u003c\u003ca[i]\u003c\u003c\" \";\n        cout\u003c\u003cendl;\n    }\n    return 0;\n}\n","score":0.0,"language":"cpp14"},{"contest":"Mock ICPC","challenge":"ICPC_D","code":"#include \u003ciostream\u003e\nusing namespace std;\n\n\nint main() {\n    /* Enter your code here. Read input from STDIN. Print output to STDOUT */ \n    int t,i,n,k;\n    cin\u003e\u003et;\n    while(t--)\n    {\n        cin\u003e\u003en\u003e\u003ek;\n        int a[n];\n        for(i=0;i\u003cn;i++)\n            cin\u003e\u003ea[i];\n        k=k%n;\n        for(i=k+1;i\u003cn;i++)\n            cout\u003c\u003ca[i]\u003c\u003c\" \";\n        for(i=0;i\u003c=k;i++)\n            cout\u003c\u003ca[i]\u003c\u003c\" \";\n    }\n    return 0;\n}\n","score":0.0,"language":"cpp14"},{"contest":"Mock ICPC","challenge":"ICPC_D","code":"#include \u003ciostream\u003e\nusing namespace std;\n\n\nint main() {\n    /* Enter your code here. Read input from STDIN. Print output to STDOUT */ \n    int t,i,n,k,ri;\n    cin\u003e\u003et;\n    while(t--)\n    {\n        cin\u003e\u003en\u003e\u003ek;\n        k=k%n;\n        ri=n-k;\n        int a[n];\n        for(i=0;i\u003cn;i++)\n            cin\u003e\u003ea[i];\n        for(i=ri;i\u003cn;i++)\n            cout\u003c\u003ca[i]\u003c\u003c\" \";\n        for(i=0;i\u003cri;i++)\n            cout\u003c\u003ca[i]\u003c\u003c\" \";\n        cout\u003c\u003c\"\\n\";\n    }\n    return 0;\n}\n","score":1.0,"language":"cpp14"},{"contest":"Mock ICPC","challenge":"ICPC_B","code":"#include \u003ccmath\u003e\n#include \u003ccstdio\u003e\n#include \u003cvector\u003e\n#include \u003ciostream\u003e\n#include \u003calgorithm\u003e\nusing namespace std;\n\n\nint main() {\n    /* Enter your code here. Read input from STDIN. Print output to STDOUT */   \n    int n;\n    cin\u003e\u003en;\n    cout\u003c\u003cn-2;\n    return 0;\n}\n","score":0.0,"language":"cpp14"},{"contest":"GameOfCodes II","challenge":"Reaching the Restaurant","code":"#include \u003ccmath\u003e\n#include \u003ccstdio\u003e\n#include \u003cvector\u003e\n#include \u003ciostream\u003e\n#include \u003calgorithm\u003e\nusing namespace std;\n\n\nint main() {\n    /* Enter your code here. Read input from STDIN. Print output to STDOUT */   \n    int t,i,x,s1,s2;\n    cin\u003e\u003et;\n    while(t--)\n    {\n        s1=0;\n        cin\u003e\u003ex;\n        for(i=1;;i++)\n        {\n            s1=s1+i;\n            if(s1\u003e=x)\n                break;\n        }\n        s2=s1-i;\n        if(s1==x)\n            cout\u003c\u003ci\u003c\u003cendl;\n        else if((s1-x)\u003c(x-s2))\n            cout\u003c\u003ci+s1-x\u003c\u003cendl;\n        else\n            cout\u003c\u003ci-1+x-s2\u003c\u003cendl;\n    }\n    return 0;\n}\n","score":1.0,"language":"cpp"},{"contest":"GameOfCodes II","challenge":"Binary Flush","code":"#include \u003ccmath\u003e\n#include \u003ccstdio\u003e\n#include \u003cvector\u003e\n#include \u003ciostream\u003e\n#include \u003calgorithm\u003e\nusing namespace std;\n\n\nint main() {\n    /* Enter your code here. Read input from STDIN. Print output to STDOUT */   \n    int f;\n    cin\u003e\u003ef;\n    while(f--)\n    {\n        int g;\n        cin\u003e\u003eg;\n        int i[g],t[g],q[g];\n        for(int x=0;x\u003cg;x++)\n            cin\u003e\u003ei[x]\u003e\u003et[x]\u003e\u003eq[x];\n        for(int x=0;x\u003cg;x++)\n        {\n            if(i[x]==q[x])\n                cout\u003c\u003ct[x]/2\u003c\u003cendl;\n            else\n                cout\u003c\u003ct[x]-(t[x]/2)\u003c\u003cendl;\n        }\n    }\n    return 0;\n}\n","score":1.0,"language":"cpp"},{"contest":"GameOfCodes II","challenge":"Paper Game","code":"#include \u003ccmath\u003e\n#include \u003ccstdio\u003e\n#include \u003cvector\u003e\n#include \u003ciostream\u003e\n#include \u003calgorithm\u003e\nusing namespace std;\n\n\nint main() {\n    /* Enter your code here. Read input from STDIN. Print output to STDOUT */   \n    int t;\n    cin\u003e\u003et;\n    while(t--)\n    {\n        int n;\n        cin \u003e\u003e n;\n        len[n];\n        for(int i=0;i\u003cn;i++)\n            cin\u003e\u003elen[n];\n        if(len[n-1]%2==0)\n            cout\u003c\u003c\"Alice\"\u003c\u003cendl;\n        else\n            cout\u003c\u003c\"Bob\"\u003c\u003cendl;\n        \n    }\n    return 0;\n}\n","score":0.0,"language":"cpp"},{"contest":"GameOfCodes II","challenge":"Paper Game","code":"#include \u003ccmath\u003e\n#include \u003ccstdio\u003e\n#include \u003cvector\u003e\n#include \u003ciostream\u003e\n#include \u003calgorithm\u003e\nusing namespace std;\n\n\nint main() {\n    /* Enter your code here. Read input from STDIN. Print output to STDOUT */   \n    int t;\n    cin\u003e\u003et;\n    while(t--)\n    {\n        int n;\n        cin \u003e\u003e n;\n        int len[n];\n        for(int i=0;i\u003cn;i++)\n            cin\u003e\u003elen[n];\n        if(len[n-1]%2==0)\n            cout\u003c\u003c\"Alice\"\u003c\u003cendl;\n        else\n            cout\u003c\u003c\"Bob\"\u003c\u003cendl;\n        \n    }\n    return 0;\n}\n","score":0.0,"language":"cpp"},{"contest":"Game of Codes II - 1st Year","challenge":"Summing Challenge","code":"#include \u003ccmath\u003e\n#include \u003ccstdio\u003e\n#include \u003cvector\u003e\n#include \u003ciostream\u003e\n#include \u003calgorithm\u003e\nusing namespace std;\n\n\nint main() {\n    /* Enter your code here. Read input from STDIN. Print output to STDOUT */  \n    int t;\n    cin\u003e\u003et;\n    while(t--)\n    {\n        int n;\n        cin\u003e\u003en;\n        int arr[n];\n        for(int i=0;i\u003cn;i++)\n            cin\u003e\u003earr[i];\n        int min=arr[0];\n        for(int i=0;i\u003cn;i++)\n            if(arr[i]\u003cmin)\n                min=arr[i];\n        for(int i=0;i\u003cn;i++)\n        {\n            if(min==arr[i])\n            {\n                cout\u003c\u003ci+1\u003c\u003cendl;\n                break;\n            }\n        }\n    }\n    return 0;\n}\n","score":1.0,"language":"cpp14"},{"contest":"Game of Codes II - 1st Year","challenge":"Linking Doughnuts","code":"#include \u003ccmath\u003e\n#include \u003ccstdio\u003e\n#include \u003cvector\u003e\n#include \u003ciostream\u003e\n#include \u003calgorithm\u003e\nusing namespace std;\n\n\nint main() {\n    /* Enter your code here. Read input from STDIN. Print output to STDOUT */  \n    int t,n,m,i,count;\n    cin\u003e\u003et;\n    while(t--)\n    {\n        cin\u003e\u003en\u003e\u003em;\n        int arr[m];\n        for(i=0;i\u003cm;i++)\n            cin\u003e\u003earr[i];\n        count=0;\n        for(i=0;i\u003cm;i++)\n            if(arr[i]==1)\n                ++count;\n        if(m-count\u003ecount)\n            cout\u003c\u003cm-1-count\u003c\u003cendl;\n        else\n            cout\u003c\u003cm-count-1+(((count-(m-count-1))+1)/2)\u003c\u003cendl;\n    }\n    return 0;\n}\n","score":0.166667,"language":"cpp14"},{"contest":"Game of Codes II - 1st Year","challenge":"Linking Doughnuts","code":"#include \u003ccmath\u003e\n#include \u003ccstdio\u003e\n#include \u003cvector\u003e\n#include \u003ciostream\u003e\n#include \u003calgorithm\u003e\nusing namespace std;\n\n\nint main() {\n    /* Enter your code here. Read input from STDIN. Print output to STDOUT */  \n    int t,n,m,i,count;\n    cin\u003e\u003et;\n    while(t--)\n    {\n        cin\u003e\u003en\u003e\u003em;\n        int arr[m];\n        for(i=0;i\u003cm;i++)\n            cin\u003e\u003earr[i];\n        count=0;\n        for(i=0;i\u003cm;i++)\n            if(arr[i]==1)\n                ++count;\n        if(m-count\u003ecount)\n            cout\u003c\u003cm-1-count\u003c\u003cendl;\n        else\n            cout\u003c\u003c(m-count-1)+(count-(m-count-1)+1)/2\u003c\u003cendl;\n    }\n    return 0;\n}\n","score":0.166667,"language":"cpp14"},{"contest":"Game of Codes II - 1st Year","challenge":"Inverse of an array","code":"#include \u003ccmath\u003e\n#include \u003ccstdio\u003e\n#include \u003cvector\u003e\n#include \u003ciostream\u003e\n#include \u003calgorithm\u003e\nusing namespace std;\n\n\nint main() {\n    /* Enter your code here. Read input from STDIN. Print output to STDOUT */   \n    int t,n,i;\n    cin \u003e\u003et;\n    while(t--)\n    {\n        cin\u003e\u003en;\n        int arr[n],arr2[n];\n        for(i=0;i\u003cn;i++)\n            cin\u003e\u003earr[i];\n        for(i=0;i\u003cn;i++)\n            arr2[arr[i]-1]=i+1;\n        for(i=0;i\u003cn;i++)\n            cout\u003c\u003carr2[i]\u003c\u003c\" \";\n        cout\u003c\u003cendl;\n    }\n    return 0;\n}\n","score":1.0,"language":"cpp14"},{"contest":"Game of Codes II - 1st Year","challenge":"Rohit and Balls","code":"#include \u003ccmath\u003e\n#include \u003ccstdio\u003e\n#include \u003cvector\u003e\n#include \u003ciostream\u003e\n#include \u003calgorithm\u003e\nusing namespace std;\n\n\nint main() {\n    /* Enter your code here. Read input from STDIN. Print output to STDOUT */ \n    int t,n,i;\n    cin\u003e\u003et;\n    while(t--)\n    {\n        int cballs =0;\n        cin\u003e\u003en;\n        int arr[n];\n        for(i=0;i\u003cn;i++)\n            cin\u003e\u003earr[i];\n        for(i=0;i\u003cn-1;i++)\n        {\n            if(arr[i]\u003earr[i+1])\n            {\n                ++cballs;\n                arr[i+1]+=1;\n                i=i-1;\n            }\n        }\n        for(i=0;i\u003cn-1;i++)\n        {\n            if(__gcd(arr[i],arr[i+1])\u003c=1)\n            {\n                ++cballs;\n                (arr[i]%2==1)?++arr[i]:++arr[i+1];\n                i=i-1;\n            }\n        }\n        cout\u003c\u003ccballs\u003c\u003cendl;\n    }\n    return 0;\n}\n","score":0.5,"language":"cpp14"},{"contest":"Game of Codes II - 1st Year","challenge":"Linking Doughnuts","code":"#include \u003ccmath\u003e\n#include \u003ccstdio\u003e\n#include \u003cvector\u003e\n#include \u003ciostream\u003e\n#include \u003calgorithm\u003e\nusing namespace std;\n\n\nint main() {\n    /* Enter your code here. Read input from STDIN. Print output to STDOUT */  \n    int t,n,m,i,count;\n    cin\u003e\u003et;\n    while(t--)\n    {\n        cin\u003e\u003en\u003e\u003em;\n        int arr[m];\n        for(i=0;i\u003cm;i++)\n            cin\u003e\u003earr[i];\n        count=0;\n        for(i=0;i\u003cm;i++)\n            if(arr[i]==1)\n                ++count;\n        if(m-count\u003ecount)\n            cout\u003c\u003cm-1-count\u003c\u003cendl;\n        else\n            cout\u003c\u003c(m-count-1)+(count-(m-count-1))/2\u003c\u003cendl;\n    }\n    return 0;\n}\n","score":0.166667,"language":"cpp14"},{"contest":"Game of Codes II - 1st Year","challenge":"Linking Doughnuts","code":"#include \u003ccmath\u003e\n#include \u003ccstdio\u003e\n#include \u003cvector\u003e\n#include \u003ciostream\u003e\n#include \u003calgorithm\u003e\nusing namespace std;\n\n\nint main() {\n    /* Enter your code here. Read input from STDIN. Print output to STDOUT */  \n    int t,n,m,i,count;\n    cin\u003e\u003et;\n    while(t--)\n    {\n        cin\u003e\u003en\u003e\u003em;\n        int arr[m];\n        for(i=0;i\u003cm;i++)\n            cin\u003e\u003earr[i];\n        count=0;\n        for(i=0;i\u003cm;i++)\n            if(arr[i]==1)\n                ++count;\n        if(m-count\u003ecount)\n            cout\u003c\u003cm-1-count\u003c\u003cendl;\n        else\n            cout\u003c\u003c(m-count-1)+(count-(m-count-1))\u003c\u003cendl;\n    }\n    return 0;\n}\n","score":0.166667,"language":"cpp14"},{"contest":"Week of Code 35","challenge":"3D Surface Area","code":"#include \u003cbits/stdc++.h\u003e\n\nusing namespace std;\nint f(int x)\n{\n    if(x\u003e0)\n        return x;\n    else\n        return 0;\n}\nint main() {\n    int H,W;\n    cin \u003e\u003e H \u003e\u003e W;\n    int area=2*H*W;\n    int a[H+2][W+2];\n    for(int i=0;i\u003cH+2;i++)\n        for(int j=0;j\u003cW+2;j++)\n            a[i][j]=0;\n    for(int i=1;i\u003c=H;i++)\n        for(int j=1;j\u003c=W;j++)\n            cin\u003e\u003ea[i][j];\n    for(int i=1;i\u003c=H;i++)\n        for(int j=1;j\u003c=W;j++)\n            area=area + f(a[i][j]-a[i-1][j]) + f(a[i][j]-a[i][j-1]) + f(a[i][j]-a[i+1][j]) + f(a[i][j]-a[i][j+1]);\n    cout \u003c\u003c area \u003c\u003c endl;\n    return 0;\n}","score":1.0,"language":"cpp"},{"contest":"Week of Code 38","challenge":"Which Section?","code":"#include \u003cbits/stdc++.h\u003e\n\nusing namespace std;\n\nvector\u003cstring\u003e split_string(string);\n\n// Complete the whichSection function below.\nint whichSection(int n, int k, vector\u003cint\u003e a) {\n    // Return the section number you will be assigned to assuming you are student number k.\n    int i=0,sum=0;\n    while(sum\u003ck)\n    {\n        sum+=a[i];\n        ++i;\n    }\n    return i;\n\n}\n\nint main()\n{\n    ofstream fout(getenv(\"OUTPUT_PATH\"));\n\n    int t;\n    cin \u003e\u003e t;\n    cin.ignore(numeric_limits\u003cstreamsize\u003e::max(), '\\n');\n\n    for (int t_itr = 0; t_itr \u003c t; t_itr++) {\n        string nkm_temp;\n        getline(cin, nkm_temp);\n\n        vector\u003cstring\u003e nkm = split_string(nkm_temp);\n\n        int n = stoi(nkm[0]);\n\n        int k = stoi(nkm[1]);\n\n        int m = stoi(nkm[2]);\n\n        string a_temp_temp;\n        getline(cin, a_temp_temp);\n\n        vector\u003cstring\u003e a_temp = split_string(a_temp_temp);\n\n        vector\u003cint\u003e a(m);\n\n        for (int i = 0; i \u003c m; i++) {\n            int a_item = stoi(a_temp[i]);\n\n            a[i] = a_item;\n        }\n\n        int result = whichSection(n, k, a);\n\n        fout \u003c\u003c result \u003c\u003c \"\\n\";\n    }\n\n    fout.close();\n\n    return 0;\n}\n\nvector\u003cstring\u003e split_string(string input_string) {\n    string::iterator new_end = unique(input_string.begin(), input_string.end(), [] (const char \u0026x, const char \u0026y) {\n        return x == y and x == ' ';\n    });\n\n    input_string.erase(new_end, input_string.end());\n\n    while (input_string[input_string.length() - 1] == ' ') {\n        input_string.pop_back();\n    }\n\n    vector\u003cstring\u003e splits;\n    char delimiter = ' ';\n\n    size_t i = 0;\n    size_t pos = input_string.find(delimiter);\n\n    while (pos != string::npos) {\n        splits.push_back(input_string.substr(i, pos - i));\n\n        i = pos + 1;\n        pos = input_string.find(delimiter, i);\n    }\n\n    splits.push_back(input_string.substr(i, min(pos, input_string.length()) - i + 1));\n\n    return splits;\n}\n","score":1.0,"language":"cpp14"},{"contest":"Week of Code 38","challenge":"Minute to Win It","code":"#include \u003cbits/stdc++.h\u003e\n\nusing namespace std;\n\nvector\u003cstring\u003e split_string(string);\n\n// Complete the minuteToWinIt function below.\nint minuteToWinIt(vector\u003cint\u003e a, int k) {\n    // Return the minimum amount of time in minutes.\n    int n=a.size();\n    vector\u003cint\u003e b(a);\n    int minutes1=0,minutes2=0;\n    for(int i=1;i\u003cn;i++)\n    {\n        if(a[i]-a[i-1]!=k)\n        {\n            a[i]=a[i-1]+k;\n            ++minutes1;\n        }\n        if(b[n-i]-b[n-i-1]!=k)\n        {\n            b[n-i-1]=b[n-i]-k;\n            ++minutes2;\n        }\n    }\n    return (minutes1\u003cminutes2)?minutes1:minutes2;\n}\n\nint main()\n{\n    ofstream fout(getenv(\"OUTPUT_PATH\"));\n\n    string nk_temp;\n    getline(cin, nk_temp);\n\n    vector\u003cstring\u003e nk = split_string(nk_temp);\n\n    int n = stoi(nk[0]);\n\n    int k = stoi(nk[1]);\n\n    string a_temp_temp;\n    getline(cin, a_temp_temp);\n\n    vector\u003cstring\u003e a_temp = split_string(a_temp_temp);\n\n    vector\u003cint\u003e a(n);\n\n    for (int i = 0; i \u003c n; i++) {\n        int a_item = stoi(a_temp[i]);\n\n        a[i] = a_item;\n    }\n\n    int result = minuteToWinIt(a, k);\n\n    fout \u003c\u003c result \u003c\u003c \"\\n\";\n\n    fout.close();\n\n    return 0;\n}\n\nvector\u003cstring\u003e split_string(string input_string) {\n    string::iterator new_end = unique(input_string.begin(), input_string.end(), [] (const char \u0026x, const char \u0026y) {\n        return x == y and x == ' ';\n    });\n\n    input_string.erase(new_end, input_string.end());\n\n    while (input_string[input_string.length() - 1] == ' ') {\n        input_string.pop_back();\n    }\n\n    vector\u003cstring\u003e splits;\n    char delimiter = ' ';\n\n    size_t i = 0;\n    size_t pos = input_string.find(delimiter);\n\n    while (pos != string::npos) {\n        splits.push_back(input_string.substr(i, pos - i));\n\n        i = pos + 1;\n        pos = input_string.find(delimiter, i);\n    }\n\n    splits.push_back(input_string.substr(i, min(pos, input_string.length()) - i + 1));\n\n    return splits;\n}\n","score":0.833333,"language":"cpp14"},{"contest":"Week of Code 38","challenge":"Minute to Win It","code":"#include \u003cbits/stdc++.h\u003e\n\nusing namespace std;\n\nvector\u003cstring\u003e split_string(string);\n\n// Complete the minuteToWinIt function below.\nint minuteToWinIt(vector\u003clong long\u003e a, int k) {\n    // Return the minimum amount of time in minutes.\n    int n=a.size();\n    vector\u003clong long\u003e b(a);\n    int minutes1=0,minutes2=0;\n    for(int i=1;i\u003cn;i++)\n    {\n        if(a[i]-a[i-1]!=k)\n        {\n            a[i]=a[i-1]+k;\n            ++minutes1;\n        }\n        if(b[n-i]-b[n-i-1]!=k)\n        {\n            b[n-i-1]=b[n-i]-k;\n            ++minutes2;\n        }\n    }\n    return (minutes1\u003cminutes2)?minutes1:minutes2;\n}\n\nint main()\n{\n    ofstream fout(getenv(\"OUTPUT_PATH\"));\n\n    string nk_temp;\n    getline(cin, nk_temp);\n\n    vector\u003cstring\u003e nk = split_string(nk_temp);\n\n    int n = stoi(nk[0]);\n\n    int k = stoi(nk[1]);\n\n    string a_temp_temp;\n    getline(cin, a_temp_temp);\n\n    vector\u003cstring\u003e a_temp = split_string(a_temp_temp);\n\n    vector\u003clong long\u003e a(n);\n\n    for (int i = 0; i \u003c n; i++) {\n        int a_item = stoi(a_temp[i]);\n\n        a[i] = a_item;\n    }\n\n    int result = minuteToWinIt(a, k);\n\n    fout \u003c\u003c result \u003c\u003c \"\\n\";\n\n    fout.close();\n\n    return 0;\n}\n\nvector\u003cstring\u003e split_string(string input_string) {\n    string::iterator new_end = unique(input_string.begin(), input_string.end(), [] (const char \u0026x, const char \u0026y) {\n        return x == y and x == ' ';\n    });\n\n    input_string.erase(new_end, input_string.end());\n\n    while (input_string[input_string.length() - 1] == ' ') {\n        input_string.pop_back();\n    }\n\n    vector\u003cstring\u003e splits;\n    char delimiter = ' ';\n\n    size_t i = 0;\n    size_t pos = input_string.find(delimiter);\n\n    while (pos != string::npos) {\n        splits.push_back(input_string.substr(i, pos - i));\n\n        i = pos + 1;\n        pos = input_string.find(delimiter, i);\n    }\n\n    splits.push_back(input_string.substr(i, min(pos, input_string.length()) - i + 1));\n\n    return splits;\n}\n","score":0.833333,"language":"cpp14"},{"contest":"Week of Code 38","challenge":"Minute to Win It","code":"#include \u003cbits/stdc++.h\u003e\n\nusing namespace std;\n\nvector\u003cstring\u003e split_string(string);\n\n// Complete the minuteToWinIt function below.\nint minuteToWinIt(vector\u003clong long\u003e a, int k) {\n    // Return the minimum amount of time in minutes.\n    int n=a.size();\n    vector\u003clong long\u003e b;\n    long long pos,count=0,max=0;\n    for(int i=1;i\u003cn;i++)\n    {\n        b.push_back(a[i]-a[i-1]);\n        if(b[i-1]==k)\n            ++count;\n        else\n            count=0;\n        if(count\u003emax)\n        {\n            max=count;\n            pos=i;\n        }\n    }\n    int min=0;\n    for(int i=pos-count;i\u003e0;i--)\n    {\n        if(a[i]-a[i-1]!=k)\n        {\n            a[i-1]=a[i]-k;\n            ++min;\n        }\n    }\n    for(int i=pos;i\u003cn-1;i++)\n    {\n        if(a[i+1]-a[i]!=k)\n        {\n            a[i+1]=a[i]+k;\n            ++min;\n        }\n    }\n    return min;\n}\n\nint main()\n{\n    ofstream fout(getenv(\"OUTPUT_PATH\"));\n\n    string nk_temp;\n    getline(cin, nk_temp);\n\n    vector\u003cstring\u003e nk = split_string(nk_temp);\n\n    int n = stoi(nk[0]);\n\n    int k = stoi(nk[1]);\n\n    string a_temp_temp;\n    getline(cin, a_temp_temp);\n\n    vector\u003cstring\u003e a_temp = split_string(a_temp_temp);\n\n    vector\u003clong long\u003e a(n);\n\n    for (int i = 0; i \u003c n; i++) {\n        int a_item = stoi(a_temp[i]);\n\n        a[i] = a_item;\n    }\n\n    int result = minuteToWinIt(a, k);\n\n    fout \u003c\u003c result \u003c\u003c \"\\n\";\n\n    fout.close();\n\n    return 0;\n}\n\nvector\u003cstring\u003e split_string(string input_string) {\n    string::iterator new_end = unique(input_string.begin(), input_string.end(), [] (const char \u0026x, const char \u0026y) {\n        return x == y and x == ' ';\n    });\n\n    input_string.erase(new_end, input_string.end());\n\n    while (input_string[input_string.length() - 1] == ' ') {\n        input_string.pop_back();\n    }\n\n    vector\u003cstring\u003e splits;\n    char delimiter = ' ';\n\n    size_t i = 0;\n    size_t pos = input_string.find(delimiter);\n\n    while (pos != string::npos) {\n        splits.push_back(input_string.substr(i, pos - i));\n\n        i = pos + 1;\n        pos = input_string.find(delimiter, i);\n    }\n\n    splits.push_back(input_string.substr(i, min(pos, input_string.length()) - i + 1));\n\n    return splits;\n}\n","score":0.1,"language":"cpp14"},{"contest":"Week of Code 38","challenge":"Minute to Win It","code":"#include \u003cbits/stdc++.h\u003e\n\nusing namespace std;\n\nvector\u003cstring\u003e split_string(string);\n\n// Complete the minuteToWinIt function below.\nint minuteToWinIt(vector\u003clong long\u003e a, int k) {\n    // Return the minimum amount of time in minutes.\n    int n=a.size();\n    vector\u003clong long\u003e b;\n    long long pos=0,count=0,max=0;\n    for(int i=1;i\u003cn;i++)\n    {\n        b.push_back(a[i]-a[i-1]);\n        if(b[i-1]==k)\n            ++count;\n        else\n            count=0;\n        if(count\u003emax)\n        {\n            pos=i;\n            max=count;\n        }\n    }\n    int min=0;\n    for(int i=pos-max;i\u003e0;i--)\n    {\n        if(a[i]-a[i-1]!=k)\n        {\n            a[i-1]=a[i]-k;\n            ++min;\n        }\n    }\n    for(int i=pos;i\u003cn-1;i++)\n    {\n        if(a[i+1]-a[i]!=k)\n        {\n            a[i+1]=a[i]+k;\n            ++min;\n        }\n    }\n    return min;\n}\n\nint main()\n{\n    ofstream fout(getenv(\"OUTPUT_PATH\"));\n\n    string nk_temp;\n    getline(cin, nk_temp);\n\n    vector\u003cstring\u003e nk = split_string(nk_temp);\n\n    int n = stoi(nk[0]);\n\n    int k = stoi(nk[1]);\n\n    string a_temp_temp;\n    getline(cin, a_temp_temp);\n\n    vector\u003cstring\u003e a_temp = split_string(a_temp_temp);\n\n    vector\u003clong long\u003e a(n);\n\n    for (int i = 0; i \u003c n; i++) {\n        int a_item = stoi(a_temp[i]);\n\n        a[i] = a_item;\n    }\n\n    int result = minuteToWinIt(a, k);\n\n    fout \u003c\u003c result \u003c\u003c \"\\n\";\n\n    fout.close();\n\n    return 0;\n}\n\nvector\u003cstring\u003e split_string(string input_string) {\n    string::iterator new_end = unique(input_string.begin(), input_string.end(), [] (const char \u0026x, const char \u0026y) {\n        return x == y and x == ' ';\n    });\n\n    input_string.erase(new_end, input_string.end());\n\n    while (input_string[input_string.length() - 1] == ' ') {\n        input_string.pop_back();\n    }\n\n    vector\u003cstring\u003e splits;\n    char delimiter = ' ';\n\n    size_t i = 0;\n    size_t pos = input_string.find(delimiter);\n\n    while (pos != string::npos) {\n        splits.push_back(input_string.substr(i, pos - i));\n\n        i = pos + 1;\n        pos = input_string.find(delimiter, i);\n    }\n\n    splits.push_back(input_string.substr(i, min(pos, input_string.length()) - i + 1));\n\n    return splits;\n}\n","score":0.933333,"language":"cpp14"},{"contest":"University Codesprint 5","challenge":"Exceeding the Speed Limit","code":"#include \u003cbits/stdc++.h\u003e\n\nusing namespace std;\n\nstring ltrim(const string \u0026);\nstring rtrim(const string \u0026);\n\n// Complete the solve function below.\nvoid solve(int s) {\n    if(s\u003c91)\n        cout\u003c\u003c0\u003c\u003c\" No punishment\"\u003c\u003cendl;\n    else if(s\u003c111)\n        cout\u003c\u003c(s-90)*300\u003c\u003c\" Warning\"\u003c\u003cendl;\n    else\n        cout\u003c\u003c(s-90)*500\u003c\u003c\" License removed\"\u003c\u003cendl;\n}\n\nint main()\n{\n    string s_temp;\n    getline(cin, s_temp);\n\n    int s = stoi(ltrim(rtrim(s_temp)));\n\n    solve(s);\n\n    return 0;\n}\n\nstring ltrim(const string \u0026str) {\n    string s(str);\n\n    s.erase(\n        s.begin(),\n        find_if(s.begin(), s.end(), not1(ptr_fun\u003cint, int\u003e(isspace)))\n    );\n\n    return s;\n}\n\nstring rtrim(const string \u0026str) {\n    string s(str);\n\n    s.erase(\n        find_if(s.rbegin(), s.rend(), not1(ptr_fun\u003cint, int\u003e(isspace))).base(),\n        s.end()\n    );\n\n    return s;\n}\n","score":1.0,"language":"cpp"},{"contest":"University Codesprint 5","challenge":"Array Triplets","code":"#include \u003cbits/stdc++.h\u003e\n#define ll long long\n#define pb push_back\n#define mp make_pair\n\nusing namespace std;\n\nstring ltrim(const string \u0026);\nstring rtrim(const string \u0026);\nvector\u003cstring\u003e split(const string \u0026);\n\nvoid allSubsets(int n,vector\u003cint\u003e \u0026a,ll \u0026sm,vector\u003cpair\u003cll,vector\u003cint\u003e \u003e \u003e \u0026powerset,vector\u003cint\u003e set={}){\n    if(n==0) {\n        if(!set.empty()) {\n            ll sum=0;\n            for(auto it=set.begin();it!=set.end();it++)\n                sum+=a[*it];\n            if(sum == sm)\n                powerset.pb(mp(sum,set));\n        }\n        return;\n    }\n    allSubsets(n-1,a,sm,powerset,set);\n    set.pb(n-1);\n    allSubsets(n-1,a,sm,powerset,set);\n}\n\n// Complete the solve function below.\nint solve(vector\u003cint\u003e a){\n    ll n=a.size(),sm=0,triplets=0;\n    bool dp[n];\n    for(int i=0;i\u003cn;i++)\n        sm+=a[i];\n    if(sm % 3 == 0)\n        sm/=3;\n    else\n        return 0;\n    vector\u003cpair\u003cll,vector\u003cint\u003e \u003e \u003e powerset;\n    allSubsets(n,a,sm,powerset);\n    // sort(powerset.begin(),powerset.end());\n    // cout\u003c\u003cpowerset.size()\u003c\u003cendl;\n    // for(auto it=powerset.begin();it!=powerset.end();it++){\n    //     cout\u003c\u003c\"sum = \"\u003c\u003c(*it).first\u003c\u003c\"\\tindices = \";\n    //     for(auto it2=((*it).second).begin();it2!=((*it).second).end();it2++)\n    //         cout\u003c\u003c*it2\u003c\u003c\" \";\n    //     cout\u003c\u003cendl;\n    // }\n    for(auto i=powerset.begin();i!=powerset.end();i++){\n        memset(dp,0,n);\n        for(auto x=((*i).second).begin();x!=((*i).second).end();x++)\n            dp[*x]=true;\n        for(auto j=i+1;j!=powerset.end();j++){\n            auto y=((*j).second).begin(); for(;y!=((*j).second).end();y++)\n                if(dp[*y]==true)\n                    break;\n            if(y==((*j).second).end())\n                triplets+=2;\n        }\n    }\n    return triplets;\n}\n\n\n\nint main()\n{\n    ofstream fout(getenv(\"OUTPUT_PATH\"));\n\n    string a_count_temp;\n    getline(cin, a_count_temp);\n\n    int a_count = stoi(ltrim(rtrim(a_count_temp)));\n\n    string a_temp_temp;\n    getline(cin, a_temp_temp);\n\n    vector\u003cstring\u003e a_temp = split(rtrim(a_temp_temp));\n\n    vector\u003cint\u003e a(a_count);\n\n    for (int i = 0; i \u003c a_count; i++) {\n        int a_item = stoi(a_temp[i]);\n\n        a[i] = a_item;\n    }\n\n    int result = solve(a);\n\n    fout \u003c\u003c result \u003c\u003c \"\\n\";\n\n    fout.close();\n\n    return 0;\n}\n\nstring ltrim(const string \u0026str) {\n    string s(str);\n\n    s.erase(\n        s.begin(),\n        find_if(s.begin(), s.end(), not1(ptr_fun\u003cint, int\u003e(isspace)))\n    );\n\n    return s;\n}\n\nstring rtrim(const string \u0026str) {\n    string s(str);\n\n    s.erase(\n        find_if(s.rbegin(), s.rend(), not1(ptr_fun\u003cint, int\u003e(isspace))).base(),\n        s.end()\n    );\n\n    return s;\n}\n\nvector\u003cstring\u003e split(const string \u0026str) {\n    vector\u003cstring\u003e tokens;\n\n    string::size_type start = 0;\n    string::size_type end = 0;\n\n    while ((end = str.find(\" \", start)) != string::npos) {\n        tokens.push_back(str.substr(start, end - start));\n\n        start = end + 1;\n    }\n\n    tokens.push_back(str.substr(start));\n\n    return tokens;\n}\n","score":0.951691,"language":"cpp"},{"contest":"University Codesprint 5","challenge":"Array Triplets","code":"#include \u003cbits/stdc++.h\u003e\n#define ll long long\n#define pb push_back\n#define mp make_pair\n\nusing namespace std;\n\nstring ltrim(const string \u0026);\nstring rtrim(const string \u0026);\nvector\u003cstring\u003e split(const string \u0026);\n\nvoid allSubsets(int n,vector\u003cint\u003e \u0026a,ll \u0026sm,vector\u003cvector\u003cint\u003e \u003e \u0026powerset,vector\u003cint\u003e set={}){\n    if(n==0) {\n        if(!set.empty()) {\n            ll sum=0;\n            for(auto it=set.begin();it!=set.end();it++)\n                sum+=a[*it];\n            if(sum == sm)\n                powerset.pb(set);\n        }\n        return;\n    }\n    allSubsets(n-1,a,sm,powerset,set);\n    set.pb(n-1);\n    allSubsets(n-1,a,sm,powerset,set);\n}\n\n// Complete the solve function below.\nint solve(vector\u003cint\u003e a){\n    ll n=a.size(),sm=0,triplets=0;\n    bool dp[n];\n    for(int i=0;i\u003cn;i++)\n        sm+=a[i];\n    if(sm % 3 == 0)\n        sm/=3;\n    else\n        return 0;\n    vector\u003cvector\u003cint\u003e \u003e powerset;\n    allSubsets(n,a,sm,powerset);\n    // sort(powerset.begin(),powerset.end());\n    // cout\u003c\u003cpowerset.size()\u003c\u003cendl;\n    // for(auto it=powerset.begin();it!=powerset.end();it++){\n    //     cout\u003c\u003c\"sum = \"\u003c\u003c(*it).first\u003c\u003c\"\\tindices = \";\n    //     for(auto it2=((*it).second).begin();it2!=((*it).second).end();it2++)\n    //         cout\u003c\u003c*it2\u003c\u003c\" \";\n    //     cout\u003c\u003cendl;\n    // }\n    for(auto i=powerset.begin();i!=powerset.end();i++){\n        memset(dp,0,n);\n        for(auto x=(*i).begin();x!=(*i).end();x++)\n            dp[*x]=true;\n        for(auto j=i+1;j!=powerset.end();j++){\n            auto y=(*j).begin(); for(;y!=(*j).end();y++)\n                if(dp[*y]==true)\n                    break;\n            if(y==(*j).end())\n                triplets+=2;\n        }\n    }\n    return triplets;\n}\n\n\n\nint main()\n{\n    ofstream fout(getenv(\"OUTPUT_PATH\"));\n\n    string a_count_temp;\n    getline(cin, a_count_temp);\n\n    int a_count = stoi(ltrim(rtrim(a_count_temp)));\n\n    string a_temp_temp;\n    getline(cin, a_temp_temp);\n\n    vector\u003cstring\u003e a_temp = split(rtrim(a_temp_temp));\n\n    vector\u003cint\u003e a(a_count);\n\n    for (int i = 0; i \u003c a_count; i++) {\n        int a_item = stoi(a_temp[i]);\n\n        a[i] = a_item;\n    }\n\n    int result = solve(a);\n\n    fout \u003c\u003c result \u003c\u003c \"\\n\";\n\n    fout.close();\n\n    return 0;\n}\n\nstring ltrim(const string \u0026str) {\n    string s(str);\n\n    s.erase(\n        s.begin(),\n        find_if(s.begin(), s.end(), not1(ptr_fun\u003cint, int\u003e(isspace)))\n    );\n\n    return s;\n}\n\nstring rtrim(const string \u0026str) {\n    string s(str);\n\n    s.erase(\n        find_if(s.rbegin(), s.rend(), not1(ptr_fun\u003cint, int\u003e(isspace))).base(),\n        s.end()\n    );\n\n    return s;\n}\n\nvector\u003cstring\u003e split(const string \u0026str) {\n    vector\u003cstring\u003e tokens;\n\n    string::size_type start = 0;\n    string::size_type end = 0;\n\n    while ((end = str.find(\" \", start)) != string::npos) {\n        tokens.push_back(str.substr(start, end - start));\n\n        start = end + 1;\n    }\n\n    tokens.push_back(str.substr(start));\n\n    return tokens;\n}\n","score":0.951691,"language":"cpp"},{"contest":"University Codesprint 5","challenge":"Array Triplets","code":"#include \u003cbits/stdc++.h\u003e\n#define ll long long\n#define pb push_back\n#define mp make_pair\n\nusing namespace std;\n\nvoid allSubsets(int n,vector\u003cint\u003e \u0026a,ll \u0026sm,vector\u003cvector\u003cint\u003e \u003e \u0026powerset,vector\u003cint\u003e set={}){\n    if(n==0) {\n        if(!set.empty()) {\n            ll sum=0;\n            for(auto it=set.begin();it!=set.end();it++)\n                sum+=a[*it];\n            if(sum == sm)\n                powerset.pb(set);\n        }\n        return;\n    }\n    allSubsets(n-1,a,sm,powerset,set);\n    set.pb(n-1);\n    allSubsets(n-1,a,sm,powerset,set);\n}\n\n// Complete the solve function below.\nint solve(vector\u003cint\u003e a){\n    ll n=a.size(),sm=0,triplets=0;\n    bool dp[n];\n    for(int i=0;i\u003cn;i++)\n        sm+=a[i];\n    if(sm % 3 == 0)\n        sm/=3;\n    else\n        return 0;\n    vector\u003cvector\u003cint\u003e \u003e powerset;\n    allSubsets(n,a,sm,powerset);\n    for(auto i=powerset.begin();i!=powerset.end();i++){\n        memset(dp,0,n);\n        for(auto x=(*i).begin();x!=(*i).end();x++)\n            dp[*x]=true;\n        for(auto j=i+1;j!=powerset.end();j++){\n            auto y=(*j).begin(); for(;y!=(*j).end();y++)\n                if(dp[*y]==true)\n                    break;\n            if(y==(*j).end())\n                triplets+=2;\n        }\n    }\n    return triplets;\n}\n\n\n\nint main()\n{\n    ios_base::sync_with_stdio(false);\n    cin.tie(NULL);\n    ofstream fout(getenv(\"OUTPUT_PATH\"));\n    int n;\n    cin\u003e\u003en;\n    vector\u003cint\u003e a(n);\n    for (int i = 0; i \u003c n; i++)\n        cin\u003e\u003ea[i];\n    int result = solve(a);\n    fout \u003c\u003c result \u003c\u003c \"\\n\";\n    fout.close();\n\n    return 0;\n}\n","score":0.951691,"language":"cpp"},{"contest":"University Codesprint 5","challenge":"Array Triplets","code":"#include \u003cbits/stdc++.h\u003e\n#define ll long long\n#define pb push_back\n#define mp make_pair\n\nusing namespace std;\n\nvoid allSubsets(int n,vector\u003cint\u003e \u0026a,ll \u0026sm,vector\u003cint\u003e \u0026powerset,int set=0){\n    if(n==0) {\n        if(set!=0) {\n            ll sum=0;\n            for(int i=0;i\u003ca.size();i++)\n                if((set \u0026 (1\u003c\u003ci)) != 0)\n                    sum+=a[i];\n            if(sum == sm)\n                powerset.pb(set);\n        }\n        return;\n    }\n    allSubsets(n-1,a,sm,powerset,set);\n    allSubsets(n-1,a,sm,powerset,set+(1\u003c\u003c(n-1)));\n}\n\n// Complete the solve function below.\nint solve(vector\u003cint\u003e a){\n    ll n=a.size(),sm=0,triplets=0;\n    for(int i=0;i\u003cn;i++)\n        sm+=a[i];\n    if(sm % 3 == 0)\n        sm/=3;\n    else\n        return 0;\n    vector\u003cint\u003e powerset;\n    allSubsets(n,a,sm,powerset);\n    for(auto i=powerset.begin();i!=powerset.end();i++)\n        for(auto j=i+1;j!=powerset.end();j++)\n            if(((*i)\u0026(*j))==0)\n                triplets+=2;\n    return triplets;\n}\n\n\n\nint main()\n{\n    ios_base::sync_with_stdio(false);\n    cin.tie(NULL);\n    ofstream fout(getenv(\"OUTPUT_PATH\"));\n    int n;\n    cin\u003e\u003en;\n    vector\u003cint\u003e a(n);\n    for (int i = 0; i \u003c n; i++)\n        cin\u003e\u003ea[i];\n    int result = solve(a);\n    fout \u003c\u003c result \u003c\u003c \"\\n\";\n    fout.close();\n\n    return 0;\n}\n","score":0.951691,"language":"cpp"},{"contest":"holaOWASP!!!","challenge":"Lisa's Workbook","code":"#include \u003cbits/stdc++.h\u003e\n\nusing namespace std;\n\nvector\u003cstring\u003e split_string(string);\n\n// Complete the workbook function below.\nint workbook(int n, int k, vector\u003cint\u003e arr)\n{\n    int count=0,a,b,page=1;\n    for(int i=0;i\u003cn;i++)\n    {\n        a=1-k;b=0;\n        for(int j=1;j\u003c=arr[i]/k;j++)\n        {\n            a=a+k;\n            b=b+k;\n            if(page\u003e=a \u0026\u0026 page\u003c=b)\n                ++count;\n            ++page;\n        }\n        if(arr[i] % k != 0)\n        {\n            a=a+k;\n            b=b+(arr[i] % k);\n            if(page\u003e=a \u0026\u0026 page\u003c=b)\n                ++count;\n            ++page;\n        }\n    }\n    return count;\n}\n\nint main()\n{\n    ofstream fout(getenv(\"OUTPUT_PATH\"));\n\n    string nk_temp;\n    getline(cin, nk_temp);\n\n    vector\u003cstring\u003e nk = split_string(nk_temp);\n\n    int n = stoi(nk[0]);\n\n    int k = stoi(nk[1]);\n\n    string arr_temp_temp;\n    getline(cin, arr_temp_temp);\n\n    vector\u003cstring\u003e arr_temp = split_string(arr_temp_temp);\n\n    vector\u003cint\u003e arr(n);\n\n    for (int i = 0; i \u003c n; i++) {\n        int arr_item = stoi(arr_temp[i]);\n\n        arr[i] = arr_item;\n    }\n\n    int result = workbook(n, k, arr);\n\n    fout \u003c\u003c result \u003c\u003c \"\\n\";\n\n    fout.close();\n\n    return 0;\n}\n\nvector\u003cstring\u003e split_string(string input_string) {\n    string::iterator new_end = unique(input_string.begin(), input_string.end(), [] (const char \u0026x, const char \u0026y) {\n        return x == y and x == ' ';\n    });\n\n    input_string.erase(new_end, input_string.end());\n\n    while (input_string[input_string.length() - 1] == ' ') {\n        input_string.pop_back();\n    }\n\n    vector\u003cstring\u003e splits;\n    char delimiter = ' ';\n\n    size_t i = 0;\n    size_t pos = input_string.find(delimiter);\n\n    while (pos != string::npos) {\n        splits.push_back(input_string.substr(i, pos - i));\n\n        i = pos + 1;\n        pos = input_string.find(delimiter, i);\n    }\n\n    splits.push_back(input_string.substr(i, min(pos, input_string.length()) - i + 1));\n\n    return splits;\n}\n","score":1.0,"language":"cpp"},{"contest":"holaOWASP!!!","challenge":"String Construction ","code":"#include \u003cbits/stdc++.h\u003e\n\nusing namespace std;\n\n// Complete the stringConstruction function below.\nint stringConstruction(string s) {\n    bool arr[26]={0};\n    int cnt=0;\n    for(int i=0;i\u003cs.length();i++)\n        arr[s[i]-'a']=true;\n    for(int i=0;i\u003c26;i++)\n        if(arr[i]==true)\n            ++cnt;\n    return cnt;\n}\n\nint main()\n{\n    ofstream fout(getenv(\"OUTPUT_PATH\"));\n\n    int q;\n    cin \u003e\u003e q;\n    cin.ignore(numeric_limits\u003cstreamsize\u003e::max(), '\\n');\n\n    for (int q_itr = 0; q_itr \u003c q; q_itr++) {\n        string s;\n        getline(cin, s);\n\n        int result = stringConstruction(s);\n\n        fout \u003c\u003c result \u003c\u003c \"\\n\";\n    }\n\n    fout.close();\n\n    return 0;\n}\n","score":1.0,"language":"cpp"},{"contest":"holaOWASP!!!","challenge":"A Weird Function","code":"#include\u003cstdio.h\u003e\n#include\u003ciostream\u003e\n#include\u003calgorithm\u003e\n\nusing namespace std;\n\nlong long int req[1500010][2], sum[1500100], a[1500100], phi[1500100], ans[1500000];\n\nint main()\n{\n    long long int l, r, temp,tmp, x, y;\n    int t, i , j, k;\n    \n    for(i=2;i\u003c=1250;i++)\n    {\n        if(a[i]==0)\n        {\n            a[i] = i;\n            \n            for(j=i;(i*j)\u003c=1500000;j++)\n            {\n                a[i*j] = i;\n            }\n        }\n    }\n    \n    for(i=1250;i\u003c=1500000;i++)\n    {\n        if(a[i] == 0)\n        {\n            a[i] = i;\n        }\n    }\n    \n\n    phi[1] = 1;\n    phi[2] = 1;\n    \n    for(i=3;i\u003c=1500000;i++)\n    {\n        temp = i;\n        \n        while(temp%a[i] == 0)\n        {\n            temp = temp/a[i];\n        }\n        \n        if(temp == 1)\n        {\n            tmp = i/a[i];\n            tmp = i - tmp;\n            phi[i] = tmp; \n        }\n        \n        else\n        {\n            phi[i] = phi[temp];\n            temp = i/temp;\n            phi[i] = phi[i]*phi[temp];\n        }\n    }\n    \n    k = 1;\n    sum[0] = 0;\n    ans[0] = 0;\n    for(i=1;i\u003c=1500000 ;i++)\n    {\n        if(i%2==0)\n        {\n            req[k][0] = i/2;\n            req[k][1] = i+1;\n        }\n        \n        else\n        {\n            req[k][0] = (i+1)/2;\n            req[k][1] = i;\n        }\n        \n        sum[k] = req[k][0] * req[k][1];\n        ans[k] = ans[k-1] + phi[req[k][0]]*phi[req[k][1]];\n        ++k;            \n    }\n    \n    scanf(\"%d\",\u0026t);\n    \n    while(t--)\n    {    \n        scanf(\"%lld%lld\",\u0026l,\u0026r);\n        long long int an;\n        \n        x = lower_bound(sum,sum+k,l) - sum;\n        y = upper_bound(sum,sum+k,r) - sum;    \n        y--;\n        \n        an = ans[y] - ans[x-1];\n        \n        printf(\"%lld\\n\",an);\n    }\n}","score":1.0,"language":"cpp"},{"contest":"holaOWASP!!!","challenge":"Balanced Forest","code":"#include \u003cbits/stdc++.h\u003e\n#define ll long long\n#define ull unsigned long long\n#define pii pair\u003cint,int\u003e\n#define pil pair\u003cint,long long\u003e\n#define pli pair\u003clong long,int\u003e\n#define pll pair\u003clong long,long long\u003e\n#define pb push_back\n#define mk make_pair\n#define sd(x) scanf(\"%d\", \u0026x)\n#define pd(x) printf(\"%d\\n\",x)\n#define pdl(x) printf(\"%lld\\n\",x)\n#define sdl(x) scanf(\"%lld\", \u0026x)\n#define eps 1e-12\n#define maxn 100009\nusing namespace std;\nint par[maxn];\ninline int parent(int pos)\n{\n    if(par[pos]!=pos)\n    {\n        par[pos]=parent(par[pos]);\n    }\n    return par[pos];\n}\nvector\u003cint\u003e g[maxn];\nll a[maxn],ans,tot=0,subsize[maxn];\nmap\u003cll,int\u003e mp[maxn],mp1;\ninline void merge(int xx,int yy)\n{\n    int p1=parent(xx);\n    int p2=parent(yy);\n    if(mp[p1].size()\u003cmp[p2].size())\n    {\n        swap(p1,p2);\n    }\n    for(auto it=mp[p2].begin();it!=mp[p2].end();it++)\n    {\n        mp[p1][it-\u003efirst]+=it-\u003esecond;\n    }\n    mp[p2].clear();\n    par[p2]=p1;\n}\ninline void dfs(int pos,int prev)\n{\n    subsize[pos]=a[pos];\n    for(int i=0;i\u003cg[pos].size();i++)\n    {\n        if(g[pos][i]!=prev)\n        {\n            dfs(g[pos][i],pos);\n            subsize[pos]+=subsize[g[pos][i]];\n        }\n    }\n}\ninline void dfs1(int pos,int prev)\n{\n    for(int i=0;i\u003cg[pos].size();i++)\n    {\n        if(g[pos][i]!=prev)\n        {\n            dfs1(g[pos][i],pos);\n            merge(pos,g[pos][i]);\n        }\n    }\n    int p1=parent(pos);\n    mp[p1][subsize[pos]]++;\n    if(pos==1)\n    {\n        return;\n    }\n    if(subsize[pos]%2==0)\n    {\n        if(tot-subsize[pos]\u003c=(subsize[pos]/2)\u0026\u0026mp[p1][subsize[pos]/2]\u003e0)\n        {\n            // cout\u003c\u003cpos\u003c\u003c\" 1\\n\";\n            ans=min(ans,(subsize[pos]/2)-(tot-subsize[pos]));\n        }\n    }\n    if(subsize[pos]\u003e=tot-subsize[pos])\n    {\n        if(mp[p1][tot-subsize[pos]]\u003e0||(mp[p1][2*subsize[pos]-tot]\u003e0))\n        {\n            if(subsize[pos]-(tot-subsize[pos])\u003c=tot-subsize[pos])\n            {\n                // cout\u003c\u003cpos\u003c\u003c\" 2\\n\";\n                ans=min(ans,(tot-subsize[pos])-(subsize[pos]-(tot-subsize[pos])));\n            }\n        }\n    }\n    if(mp1[subsize[pos]]\u003e=2)\n    {\n        if(tot-(2*subsize[pos])\u003c=subsize[pos])\n        {\n            // cout\u003c\u003cpos\u003c\u003c\" 3\\n\";\n            ans=min(ans,subsize[pos]-(tot-(2*subsize[pos])));\n        }\n    }\n    // cout\u003c\u003cpos\u003c\u003c\" \"\u003c\u003csubsize[pos]\u003c\u003c\" \"\u003c\u003cmp[p1][tot-2*subsize[pos]]\u003c\u003c\"\\n\";\n    if((tot-2*subsize[pos])\u003c=subsize[pos])\n    {\n        if(mp1[tot-2*subsize[pos]]-mp[p1][tot-2*subsize[pos]]\u003e0)\n        {\n            // cout\u003c\u003cpos\u003c\u003c\" 4\\n\";\n            // cout\u003c\u003csubsize[pos]\u003c\u003c\"\\n\";\n            ans=min(ans,subsize[pos]-(tot-2*subsize[pos]));\n        }\n    }\n}\nint main()\n{\n    int t;\n    sd(t);\n    while(t--)\n    {\n        int n;\n        sd(n);\n        ans=100000000000000000;\n        for(int i=1;i\u003c=n;i++)\n        {\n            sdl(a[i]);\n        }\n        for(int i=0;i\u003cn-1;i++)\n        {\n            int x,y;\n            sd(x);\n            sd(y);\n            g[x].pb(y);\n            g[y].pb(x);\n        }\n        for(int i=0;i\u003c=n;i++)\n        {\n            par[i]=i;\n        }\n        dfs(1,0);\n        tot=subsize[1];\n        for(int i=1;i\u003c=n;i++)\n        {\n            mp1[subsize[i]]++;\n        }\n        dfs1(1,0);\n        for(int i=1;i\u003c=n;i++)\n        {\n            g[i].clear();\n            mp[i].clear();\n        }\n        mp1.clear();\n        if(ans==100000000000000000)\n        {\n            printf(\"-1\\n\");\n            continue;\n        }\n        pdl(ans);\n    }\n}","score":1.0,"language":"cpp"},{"contest":"Co-Decode","challenge":"Jack and Jill 1","code":"#include \u003ccmath\u003e\n#include \u003ccstdio\u003e\n#include \u003cvector\u003e\n#include \u003ciostream\u003e\n#include \u003calgorithm\u003e\n#define ll long long\nusing namespace std;\n\n\nint main() {\n    ll t;\n    cin\u003e\u003et;\n    while(t--) {\n        ll n,count=0;\n        cin\u003e\u003en;\n        bool arr[n+1]={0};\n        arr[0]=1;arr[1]=1;\n        for(ll i=0;i\u003c=n;i++) {\n            if(!arr[i]) {\n                ++count;\n                for(ll j=2;i*j\u003cn;j++)\n                    arr[i*j]=1;\n            }\n        }\n        if(count%2)\n            cout\u003c\u003c\"Jack\"\u003c\u003cendl;\n        else\n            cout\u003c\u003c\"Jill\"\u003c\u003cendl;\n    }\n    return 0;\n}\n","score":0.0,"language":"cpp14"},{"contest":"Co-Decode","challenge":"Alternate Elements are fun","code":"#include\u003cbits/stdc++.h\u003e\nusing namespace std;\nint main()\n{\n    \n    long long a[3][3];\n    long long i,j;\n    for(i=0;i\u003c3;i++)\n    {\n        for(j=0;j\u003c3;j++)\n        {\n            cin\u003e\u003ea[i][j];\n            \n        }\n    }\n    cout\u003c\u003ca[0][0]+a[0][2]+a[1][1]+a[2][0]+a[2][2];\n    cout\u003c\u003c\"\\n\";\n        cout\u003c\u003ca[0][1]+a[1][0]+a[1][2]+a[2][1];\n    \n    \n    \n    \n    \n    return 0;\n}\n","score":1.0,"language":"cpp"},{"contest":"Co-Decode","challenge":"Jack and Jill 1","code":"#include \u003ccmath\u003e\n#include \u003ccstdio\u003e\n#include \u003cvector\u003e\n#include \u003ciostream\u003e\n#include \u003calgorithm\u003e\n#define ll long long\nusing namespace std;\n\n\nint main() {\n    ll t;\n    cin\u003e\u003et;\n    while(t--) {\n        ll n,count=0;\n        cin\u003e\u003en;\n        bool arr[n+1]={0};\n        arr[0]=1;arr[1]=1;\n        for(ll i=0;i\u003c=n;i++) {\n            if(!arr[i]) {\n                ++count;\n                for(ll j=2;i*j\u003c=n;j++)\n                    arr[i*j]=1;\n            }\n        }\n        if(count%2)\n            cout\u003c\u003c\"Jack\"\u003c\u003cendl;\n        else\n            cout\u003c\u003c\"Jill\"\u003c\u003cendl;\n    }\n    return 0;\n}\n","score":1.0,"language":"cpp14"},{"contest":"Co-Decode","challenge":"The Rearrangement Challange 1","code":"#include \u003cbits/stdc++.h\u003e\n#define ll long long\nusing namespace std;\n\n\nint main() {\n    /* Enter your code here. Read input from STDIN. Print output to STDOUT */\n    ll t;\n    cin\u003e\u003et;\n    while(t--) {\n        ll a[26]={0};\n        ll b[26]={0};\n        string x;\n        cin\u003e\u003ex;\n        if(x.length()%2)\n            cout\u003c\u003c-1\u003c\u003cendl;\n        else {\n            ll l=x.length()/2,count=0;\n            for(int i=0;i\u003cl;i++) {\n                ++a[x[i]-'a'];\n                ++b[x[i+l]-'a'];\n            }\n            for(int i=0;i\u003c26;i++)\n                count+=min(a[i],b[i]);\n            cout\u003c\u003cl-count\u003c\u003cendl;\n        }\n    }\n    return 0;\n}\n","score":1.0,"language":"cpp14"},{"contest":"Co-Decode","challenge":"Darkness To Sunshine","code":"#include\u003cbits/stdc++.h\u003e\nusing namespace std;\nint main()\n{\n    int n,i,j,sum=0;\n    cin\u003e\u003en;\n    int a[n];\n    for(i=0;i\u003cn;i++)\n    {\n        cin\u003e\u003ea[i];\n        sum=sum+a[i];\n    }\n    int x[n];\n    for(i=0;i\u003cn;i++)\n    {\n        cin\u003e\u003ex[i];\n    }\n    int m;\n    cin\u003e\u003em;\n    int y[m],r[m];\n    for(i=0;i\u003cm;i++)\n    {\n        cin\u003e\u003ey[i];\n    }\n    for(i=0;i\u003cm;i++)\n    {\n        cin\u003e\u003er[i];\n    }\n    cout\u003c\u003csum\u003c\u003cendl;\n    \n    \n    return 0;\n}","score":0.037037,"language":"cpp14"},{"contest":"Co-Decode","challenge":"Naughty Little Kids","code":"#include\u003cbits/stdc++.h\u003e\nusing namespace std;\nint main()\n{\n    int t,i,j,a,b;\n    cin\u003e\u003et;\n    while(t--)\n    {\n        int dist=0;\n    cin\u003e\u003ea\u003e\u003eb;\n    int x[b],y[b];\n    for(i=0;i\u003cb;i++)\n    {\n        cin\u003e\u003ex[i];\n        cin\u003e\u003ey[i];\n    }\n    int gobby=abs(y[b-1]-x[b-1]);\n    int chuk=abs(y[0]-x[0]);\n    for(i=1;i\u003cb-1;i++)\n    {\n        dist=dist+abs(x[i]-y[i-1]);\n        chuk=chuk+abs(x[i]-y[i]);\n    }\n    int total=chuk+gobby+dist;\n    cout\u003c\u003ctotal\u003c\u003cendl;\n        \n    }\n    return 0;\n}\n","score":0.0,"language":"cpp14"},{"contest":"Co-Decode","challenge":"The Guy With Explosives","code":"#include \u003ciostream\u003e\n#include \u003calgorithm\u003e\n#define ll long long\nusing namespace std;\n\n\nint main() {\n    ll r,c,n;\n    cin\u003e\u003er\u003e\u003ec\u003e\u003en;\n    char grid[r][c];\n    char grid2[r+1][c+1];\n    for(ll i=0;i\u003cr;i++)\n        for(ll j=0;j\u003cc;j++)\n            cin\u003e\u003egrid[i][j];\n    for(ll i=0;i\u003cr;i++)\n        for(ll j=0;j\u003cc;j++)\n            grid2[i][j]='O';\n    for(ll i=0;i\u003cr;i++) {\n        for(ll j=0;j\u003cc;j++) {\n            if(grid[i][j]=='O') {\n                grid2[i][j]='.';\n                grid2[i+1][j]='.';\n                grid2[i][j+1]='.';\n                if(i\u003e0)\n                    grid2[i-1][j]='.';\n                if(j\u003e0)\n                    grid2[i][j-1]='.';\n            }\n        }\n    }\n    if(n%2==0) {\n        for(ll i=0;i\u003cr;i++) {\n            for(ll j=0;j\u003cc;j++)\n                cout\u003c\u003c'O';\n            cout\u003c\u003cendl;\n        }\n    }\n    else if(n%4==1) {\n        for(ll i=0;i\u003cr;i++) {\n            for(ll j=0;j\u003cc;j++)\n                cout\u003c\u003cgrid[i][j];\n            cout\u003c\u003cendl;\n        }\n    }\n    else {\n        for(ll i=0;i\u003cr;i++) {\n            for(ll j=0;j\u003cc;j++)\n                cout\u003c\u003cgrid2[i][j];\n            cout\u003c\u003cendl;\n        }\n    }\n    return 0;\n}\n","score":0.64,"language":"cpp14"},{"contest":"Co-Decode","challenge":"The Guy With Explosives","code":"#include \u003ciostream\u003e\n#include \u003calgorithm\u003e\n#define ll long long\nusing namespace std;\n\n\nint main() {\n    ll r,c,n;\n    cin\u003e\u003er\u003e\u003ec\u003e\u003en;\n    char grid[r][c];\n    char grid2[r][c];\n    for(ll i=0;i\u003cr;i++)\n        for(ll j=0;j\u003cc;j++)\n            cin\u003e\u003egrid[i][j];\n    for(ll i=0;i\u003cr;i++)\n        for(ll j=0;j\u003cc;j++)\n            grid2[i][j]='O';\n    for(ll i=0;i\u003cr;i++) {\n        for(ll j=0;j\u003cc;j++) {\n            if(grid[i][j]=='O') {\n                grid2[i][j]='.';\n                if(i\u003cr-1)\n                    grid2[i+1][j]='.';\n                if(j\u003cc-1)\n                    grid2[i][j+1]='.';\n                if(i\u003e0)\n                    grid2[i-1][j]='.';\n                if(j\u003e0)\n                    grid2[i][j-1]='.';\n            }\n        }\n    }\n    if(n%2==0) {\n        for(ll i=0;i\u003cr;i++) {\n            for(ll j=0;j\u003cc;j++)\n                cout\u003c\u003c'O';\n            cout\u003c\u003cendl;\n        }\n    }\n    else if(n%4==1) {\n        for(ll i=0;i\u003cr;i++) {\n            for(ll j=0;j\u003cc;j++)\n                cout\u003c\u003cgrid[i][j];\n            cout\u003c\u003cendl;\n        }\n    }\n    else {\n        for(ll i=0;i\u003cr;i++) {\n            for(ll j=0;j\u003cc;j++)\n                cout\u003c\u003cgrid2[i][j];\n            cout\u003c\u003cendl;\n        }\n    }\n    return 0;\n}\n","score":0.64,"language":"cpp14"},{"contest":"Co-Decode","challenge":"The Guy With Explosives","code":"#include \u003ciostream\u003e\n#include \u003calgorithm\u003e\n#define ll long long\nusing namespace std;\n\n\nint main() {\n    ll r,c,n;\n    cin\u003e\u003er\u003e\u003ec\u003e\u003en;\n    if(n==0)\n        n=1;\n    char grid[r][c];\n    char grid2[r][c];\n    for(ll i=0;i\u003cr;i++)\n        for(ll j=0;j\u003cc;j++)\n            cin\u003e\u003egrid[i][j];\n    for(ll i=0;i\u003cr;i++)\n        for(ll j=0;j\u003cc;j++)\n            grid2[i][j]='O';\n    for(ll i=0;i\u003cr;i++) {\n        for(ll j=0;j\u003cc;j++) {\n            if(grid[i][j]=='O') {\n                grid2[i][j]='.';\n                if(i\u003cr-1)\n                    grid2[i+1][j]='.';\n                if(j\u003cc-1)\n                    grid2[i][j+1]='.';\n                if(i\u003e0)\n                    grid2[i-1][j]='.';\n                if(j\u003e0)\n                    grid2[i][j-1]='.';\n            }\n        }\n    }\n    if(n%2==0) {\n        for(ll i=0;i\u003cr;i++) {\n            for(ll j=0;j\u003cc;j++)\n                cout\u003c\u003c'O';\n            cout\u003c\u003cendl;\n        }\n    }\n    else if(n%4==1) {\n        for(ll i=0;i\u003cr;i++) {\n            for(ll j=0;j\u003cc;j++)\n                cout\u003c\u003cgrid[i][j];\n            cout\u003c\u003cendl;\n        }\n    }\n    else {\n        for(ll i=0;i\u003cr;i++) {\n            for(ll j=0;j\u003cc;j++)\n                cout\u003c\u003cgrid2[i][j];\n            cout\u003c\u003cendl;\n        }\n    }\n    return 0;\n}\n","score":0.64,"language":"cpp14"},{"contest":"Co-Decode","challenge":"Naughty Little Kids","code":"#include\u003cbits/stdc++.h\u003e\nusing namespace std;\nint main()\n{\n    int t,i,j,a,b;\n    cin\u003e\u003et;\n    while(t--)\n    {\n        int dist=0,dist1=0;\n    cin\u003e\u003ea\u003e\u003eb;\n    int x[b],y[b];\n    for(i=0;i\u003cb;i++)\n    {\n        cin\u003e\u003ex[i];\n        cin\u003e\u003ey[i];\n    }\n    int gobby=abs(y[(b/2)+1]-x[(b/2)+1]);\n    int chuk=abs(y[0]-x[0]);\n    for(i=1;i\u003c=(b/2);i++)\n    {\n        dist=dist+abs(x[i]-y[i-1]);\n        chuk=chuk+abs(x[i]-y[i]);\n    }\n    for(i=(b/2)+2;i\u003cb;i++)\n    {\n        dist1=dist1+abs(x[i]-y[i-1]);\n        gobby=gobby+abs(x[i]-y[i]);\n    }\n    int total=chuk+gobby+dist+dist1;\n    cout\u003c\u003ctotal\u003c\u003cendl;\n        \n    }\n    return 0;\n}","score":0.0,"language":"cpp14"},{"contest":"Co-Decode","challenge":"Naughty Little Kids","code":"#include\u003cbits/stdc++.h\u003e\nusing namespace std;\nint main()\n{\n    int t,i,j,a,b;\n    cin\u003e\u003et;\n    while(t--)\n    {\n        int dist=0,dist1=0;\n    cin\u003e\u003ea\u003e\u003eb;\n    int x[b],y[b];\n    for(i=0;i\u003cb;i++)\n    {\n        cin\u003e\u003ex[i];\n        cin\u003e\u003ey[i];\n    }\n    sort(x,x+b);\n    sort(y,y+b);\n    int gobby=abs(y[(b/2)+1]-x[(b/2)+1]);\n    int chuk=abs(y[0]-x[0]);\n    for(i=1;i\u003c=(b/2);i++)\n    {\n        dist=dist+abs(x[i]-y[i-1]);\n        chuk=chuk+abs(x[i]-y[i]);\n    }\n    for(i=(b/2)+2;i\u003cb;i++)\n    {\n        dist1=dist1+abs(x[i]-y[i-1]);\n        gobby=gobby+abs(x[i]-y[i]);\n    }\n    int total=chuk+gobby+dist+dist1;\n    cout\u003c\u003ctotal\u003c\u003cendl;\n        \n    }\n    return 0;\n}\n","score":0.0,"language":"cpp14"},{"contest":"Co-Decode","challenge":"The Guy With Explosives","code":"#include \u003ciostream\u003e\n#include \u003calgorithm\u003e\n#define ll long long\nusing namespace std;\n\n\nint main() {\n    ll r,c,n;\n    cin\u003e\u003er\u003e\u003ec\u003e\u003en;\n    char grid[r][c];\n    char grid2[r][c];\n    for(ll i=0;i\u003cr;i++)\n        for(ll j=0;j\u003cc;j++)\n            cin\u003e\u003egrid[i][j];\n    for(ll i=0;i\u003cr;i++)\n        for(ll j=0;j\u003cc;j++)\n            grid2[i][j]='O';\n    for(ll i=0;i\u003cr;i++) {\n        for(ll j=0;j\u003cc;j++) {\n            if(grid[i][j]=='O') {\n                grid2[i][j]='.';\n                if(i\u003cr-1)\n                    grid2[i+1][j]='.';\n                if(j\u003cc-1)\n                    grid2[i][j+1]='.';\n                if(i\u003e0)\n                    grid2[i-1][j]='.';\n                if(j\u003e0)\n                    grid2[i][j-1]='.';\n            }\n        }\n    }\n    if(n%3==2) {\n        for(ll i=0;i\u003cr;i++) {\n            for(ll j=0;j\u003cc;j++)\n                cout\u003c\u003c'O';\n            cout\u003c\u003cendl;\n        }\n    }\n    else if(n%6==0 || n%6==1) {\n        for(ll i=0;i\u003cr;i++) {\n            for(ll j=0;j\u003cc;j++)\n                cout\u003c\u003cgrid[i][j];\n            cout\u003c\u003cendl;\n        }\n    }\n    else {\n        for(ll i=0;i\u003cr;i++) {\n            for(ll j=0;j\u003cc;j++)\n                cout\u003c\u003cgrid2[i][j];\n            cout\u003c\u003cendl;\n        }\n    }\n    return 0;\n}\n","score":0.28,"language":"cpp14"},{"contest":"Co-Decode","challenge":"The Guy With Explosives","code":"#include \u003ciostream\u003e\n#include \u003calgorithm\u003e\n#define ll long long\nusing namespace std;\n\n\nint main() {\n    ll r,c,n;\n    cin\u003e\u003er\u003e\u003ec\u003e\u003en;\n    if(n==0)\n        n=1;\n    char grid[r][c];\n    char grid2[r][c];\n    for(ll i=0;i\u003cr;i++)\n        for(ll j=0;j\u003cc;j++)\n            cin\u003e\u003egrid[i][j];\n    for(ll i=0;i\u003cr;i++)\n        for(ll j=0;j\u003cc;j++)\n            grid2[i][j]='O';\n    for(ll i=0;i\u003cr;i++) {\n        for(ll j=0;j\u003cc;j++) {\n            if(grid[i][j]=='O') {\n                grid2[i][j]='.';\n                if(i\u003cr-1)\n                    grid2[i+1][j]='.';\n                if(j\u003cc-1)\n                    grid2[i][j+1]='.';\n                if(i\u003e0)\n                    grid2[i-1][j]='.';\n                if(j\u003e0)\n                    grid2[i][j-1]='.';\n            }\n        }\n    }\n    if(n%2==0) {\n        for(ll i=0;i\u003cr;i++) {\n            for(ll j=0;j\u003cc;j++)\n                cout\u003c\u003c'O';\n            cout\u003c\u003cendl;\n        }\n    }\n    else if(n%4==1) {\n        for(ll i=0;i\u003cr;i++) {\n            for(ll j=0;j\u003cc;j++)\n                cout\u003c\u003cgrid[i][j];\n            cout\u003c\u003cendl;\n        }\n    }\n    else {\n        for(ll i=0;i\u003cr;i++) {\n            for(ll j=0;j\u003cc;j++)\n                cout\u003c\u003cgrid2[i][j];\n            cout\u003c\u003cendl;\n        }\n    }\n    return 0;\n}\n","score":0.64,"language":"cpp14"},{"contest":"Co-Decode","challenge":"Naughty Little Kids","code":"#include\u003cbits/stdc++.h\u003e\nusing namespace std;\nint main()\n{\n    int t,i,j,a,b;\n    cin\u003e\u003et;\n    while(t--)\n    {\n        int dist=0,dist1=0;\n    cin\u003e\u003ea\u003e\u003eb;\n    int x[b],y[b];\n    for(i=0;i\u003cb;i++)\n    {\n        cin\u003e\u003ex[i];\n        cin\u003e\u003ey[i];\n    }\n    sort(x,x+b);\n    sort(y,y+b);\n    if(b%2!=0)\n    {\n    int gobby=abs(y[(b/2)+1]-x[(b/2)+1]);\n    int chuk=abs(y[0]-x[0]);\n    for(i=1;i\u003c=(b/2);i++)\n    {\n        dist=dist+abs(x[i]-y[i-1]);\n        chuk=chuk+abs(x[i]-y[i]);\n    }\n    for(i=(b/2)+2;i\u003cb;i++)\n    {\n        dist1=dist1+abs(x[i]-y[i-1]);\n        gobby=gobby+abs(x[i]-y[i]);\n    }\n    int total=chuk+gobby+dist+dist1;\n    cout\u003c\u003ctotal\u003c\u003cendl;\n    }\n    else\n    {\n    int gobby=abs(y[(b/2)]-x[(b/2)]);\n    int chuk=abs(y[0]-x[0]);\n    for(i=1;i\u003c(b/2);i++)\n    {\n        dist=dist+abs(x[i]-y[i-1]);\n        chuk=chuk+abs(x[i]-y[i]);\n    }\n    for(i=(b/2)+1;i\u003cb;i++)\n    {\n        dist1=dist1+abs(x[i]-y[i-1]);\n        gobby=gobby+abs(x[i]-y[i]);\n    }\n    int total=chuk+gobby+dist+dist1;\n    cout\u003c\u003ctotal\u003c\u003cendl;    \n    }    \n    }\n    return 0;\n}","score":0.0,"language":"cpp14"},{"contest":"Co-Decode","challenge":"Darkness To Sunshine","code":"#include\u003cbits/stdc++.h\u003e\n#define ll long long\nusing namespace std;\nint main()\n{\n    ll n,m,sum=0;\n    cin\u003e\u003en;\n    ll pop[n],pos[n];\n    for(ll i=0;i\u003cn;i++) {\n        cin\u003e\u003epop[i];\n        sum=sum+pop[i];\n    }\n    for(ll i=0;i\u003cn;i++)\n        cin\u003e\u003epos[i];\n    cin\u003e\u003em;\n    ll p[m],r[m];\n    for(ll i=0;i\u003cm;i++)\n        cin\u003e\u003ep[i];\n    for(ll i=0;i\u003cm;i++)\n        cin\u003e\u003er[i];\n    cout\u003c\u003csum\u003c\u003cendl;\n    return 0;\n}","score":0.0740741,"language":"cpp14"},{"contest":"Co-Decode","challenge":"Darkness To Sunshine","code":"#include \u003cbits/stdc++.h\u003e\n\n#define sd(x) scanf(\"%d\",\u0026x)\n#define sd2(x,y) scanf(\"%d%d\",\u0026x,\u0026y)\n#define sd3(x,y,z) scanf(\"%d%d%d\",\u0026x,\u0026y,\u0026z)\n\n#define fi first\n#define se second\n#define pb push_back\n#define mp make_pair\n#define foreach(it, v) for(auto it=(v).begin(); it != (v).end(); ++it)\n#define meta __FUNCTION__,__LINE__\n\n#define _ ios_base::sync_with_stdio(false);cin.tie(NULL);cout.tie(NULL);\n#define __ freopen(\"input.txt\",\"r\",stdin);freopen(\"output.txt\",\"w\",stdout);\n\nusing namespace std;\n\nconst long double PI = 3.1415926535897932384626433832795;\n\ntemplate\u003ctypename S, typename T\u003e \nostream\u0026 operator\u003c\u003c(ostream\u0026 out,pair\u003cS,T\u003e const\u0026 p){out\u003c\u003c'('\u003c\u003cp.fi\u003c\u003c\", \"\u003c\u003cp.se\u003c\u003c')';return out;}\n\ntemplate\u003ctypename T\u003e\nostream\u0026 operator\u003c\u003c(ostream\u0026 out,vector\u003cT\u003e const\u0026 v){\nint l=v.size();for(int i=0;i\u003cl-1;i++)out\u003c\u003cv[i]\u003c\u003c' ';if(l\u003e0)out\u003c\u003cv[l-1];return out;}\n\nvoid tr(){cout \u003c\u003c endl;}\ntemplate\u003ctypename S, typename ... Strings\u003e\nvoid tr(S x, const Strings\u0026... rest){cout\u003c\u003cx\u003c\u003c' ';tr(rest...);}\n\ntypedef long long ll;\ntypedef pair\u003cint,int\u003e pii;\n\nconst int N = 1001000;\n\nint n, m;\nint p[N], x[N];\nint y[N], r[N];\n\nvector\u003cpii\u003e cities;\nvector\u003cpair\u003cpii, int\u003e \u003e ranges;\nmap\u003cint, vector\u003cpii\u003e \u003e events;\n\nll bomber_pop[N];\n\nint main(){\n    sd(n);\n    assert(1 \u003c= n and n \u003c= 1000000);\n\n    for(int i = 1; i \u003c= n; i++){\n        sd(p[i]);\n        assert(1 \u003c= p[i] and p[i] \u003c= 1000000000);\n    }\n\n    for(int i = 1; i \u003c= n; i++){\n        sd(x[i]);\n        assert(1 \u003c= x[i] and x[i] \u003c= 1000000000);\n    }\n\n    for(int i = 1; i \u003c= n; i++){\n        events[x[i]].pb(mp(2, p[i]));\n    }\n\n    sd(m);\n    assert(1 \u003c= m and m \u003c= 1000000);\n\n    for(int i = 1; i \u003c= m; i++){\n        sd(y[i]);\n        assert(1 \u003c= y[i] and y[i] \u003c= 1000000000);\n    }\n\n    for(int i = 1; i \u003c= m; i++){\n        sd(r[i]);\n        assert(1 \u003c= r[i] and r[i] \u003c= 1000000000);\n    }\n\n    for(int i = 1; i \u003c= m; i++){\n        events[y[i]-r[i]].pb(mp(1, i));\n        events[y[i]+r[i]+1].pb(mp(-1, i));\n    }\n\n    ll not_under_attack = 0;\n\n    set\u003cint\u003e active;\n    foreach(vv, events){\n        int cord = vv-\u003efi;\n        vector\u003cpii\u003e \u0026v = vv-\u003ese;\n    \n        sort(v.begin(), v.end());\n    \n        foreach(it, v){\n            if(it-\u003efi == -1){\n                active.erase(it-\u003ese);\n            }\n            else if(it-\u003efi == 1){\n                active.insert(it-\u003ese);\n            }\n            else{\n                if(active.size() == 1){\n                    bomber_pop[*active.begin()] += it-\u003ese;  \n                }\n                else if(active.size() == 0){\n                    not_under_attack += it-\u003ese;\n                }\n            }\n        }\n    }\n\n    ll mx = 0;\n    for(int i = 1; i \u003c= m; i++){\n        mx = max(mx, bomber_pop[i]);\n    }\n\n    printf(\"%lld\\n\", not_under_attack + mx);\n\n    return ","score":0.0,"language":"bash"},{"contest":"Co-Decode","challenge":"Darkness To Sunshine","code":"#include \u003cbits/stdc++.h\u003e\n#define sd(x) scanf(\"%d\",\u0026x)\n#define sd2(x,y) scanf(\"%d%d\",\u0026x,\u0026y)\n#define sd3(x,y,z) scanf(\"%d%d%d\",\u0026x,\u0026y,\u0026z)\n#define fi first\n#define se second\n#define pb push_back\n#define mp make_pair\n#define foreach(it, v) for(auto it=(v).begin(); it != (v).end(); ++it)\n\nusing namespace std;\n\n\ntypedef long long ll;\ntypedef pair\u003cint,int\u003e pii;\n\nconst int N = 1001000;\n\nint n, m;\nint p[N], x[N];\nint y[N], r[N];\n\nvector\u003cpii\u003e cities;\nvector\u003cpair\u003cpii, int\u003e \u003e ranges;\nmap\u003cint, vector\u003cpii\u003e \u003e events;\n\nll bomber_pop[N];\n\nint main(){\n    sd(n);\n    for(int i = 1; i \u003c= n; i++)\n        sd(p[i]);\n    for(int i = 1; i \u003c= n; i++)\n        sd(x[i]);\n    for(int i = 1; i \u003c= n; i++)\n        events[x[i]].pb(mp(2, p[i]));\n    sd(m);\n    for(int i = 1; i \u003c= m; i++)\n        sd(y[i]);\n    for(int i = 1; i \u003c= m; i++)\n        sd(r[i]);\n    for(int i = 1; i \u003c= m; i++) {\n        events[y[i]-r[i]].pb(mp(1, i));\n        events[y[i]+r[i]+1].pb(mp(-1, i));\n    }\n    ll not_under_attack = 0;\n    set\u003cint\u003e active;\n    foreach(vv, events){\n        int cord = vv-\u003efi;\n        vector\u003cpii\u003e \u0026v = vv-\u003ese;\n        sort(v.begin(), v.end());\n        foreach(it, v){\n            if(it-\u003efi == -1)\n                active.erase(it-\u003ese);\n            else if(it-\u003efi == 1)\n                active.insert(it-\u003ese);\n            else{\n                if(active.size() == 1)\n                    bomber_pop[*active.begin()] += it-\u003ese;  \n                else if(active.size() == 0)\n                    not_under_attack += it-\u003ese;\n            }\n        }\n    }\n    ll mx = 0;\n    for(int i = 1; i \u003c= m; i++)\n        mx = max(mx, bomber_pop[i]);\n    printf(\"%lld\\n\", not_under_attack + mx);\n    return 0;\n    }","score":1.0,"language":"cpp14"},{"contest":"Co-Decode","challenge":"Naughty Little Kids","code":"#include\u003cbits/stdc++.h\u003e\n#define ll long long\nusing namespace std;\nint main()\n{\n    int t,i,j,a,b;\n    cin\u003e\u003et;\n    while(t--)\n    {\n        int dist=0,dist1=0;\n    cin\u003e\u003ea\u003e\u003eb;\n    int x[b],y[b];\n    for(i=0;i\u003cb;i++)\n    {\n        cin\u003e\u003ex[i];\n        cin\u003e\u003ey[i];\n    }\n    sort(x,x+b);\n    sort(y,y+b);\n    if(b%2!=0)\n    {\n    int gobby=abs(y[(b/2)+1]-x[(b/2)+1]);\n    int chuk=abs(y[0]-x[0]);\n    for(i=1;i\u003c=(b/2);i++)\n    {\n        dist=dist+abs(x[i]-y[i-1]);\n        chuk=chuk+abs(x[i]-y[i]);\n    }\n    for(i=(b/2)+2;i\u003cb;i++)\n    {\n        dist1=dist1+abs(x[i]-y[i-1]);\n        gobby=gobby+abs(x[i]-y[i]);\n    }\n    int total=chuk+gobby+dist+dist1;\n    cout\u003c\u003ctotal\u003c\u003cendl;\n    }\n    else\n    {\n    int gobby=abs(y[(b/2)]-x[(b/2)]);\n    int chuk=abs(y[0]-x[0]);\n    for(i=1;i\u003c(b/2);i++)\n    {\n        dist=dist+abs(x[i]-y[i-1]);\n        chuk=chuk+abs(x[i]-y[i]);\n    }\n    for(i=(b/2)+1;i\u003cb;i++)\n    {\n        dist1=dist1+abs(x[i]-y[i-1]);\n        gobby=gobby+abs(x[i]-y[i]);\n    }\n    int total=chuk+gobby+dist+dist1;\n    cout\u003c\u003ctotal\u003c\u003cendl;    \n    }    \n    }\n    return 0;\n}","score":0.0,"language":"cpp14"},{"contest":"Co-Decode","challenge":"Naughty Little Kids","code":"#include\u003cbits/stdc++.h\u003e\n#define ll long long\nusing namespace std;\nint main()\n{\n    ll t,i,j,a,b;\n    cin\u003e\u003et;\n    while(t--)\n    {\n        ll dist=0,dist1=0;\n    cin\u003e\u003ea\u003e\u003eb;\n    ll x[b],y[b];\n    for(i=0;i\u003cb;i++)\n    {\n        cin\u003e\u003ex[i];\n        cin\u003e\u003ey[i];\n    }\n    sort(x,x+b);\n    sort(y,y+b);\n    if(b%2!=0)\n    {\n    ll gobby=abs(y[(b/2)+1]-x[(b/2)+1]);\n    ll chuk=abs(y[0]-x[0]);\n    for(i=1;i\u003c=(b/2);i++)\n    {\n        dist=dist+abs(x[i]-y[i-1]);\n        chuk=chuk+abs(x[i]-y[i]);\n    }\n    for(i=(b/2)+2;i\u003cb;i++)\n    {\n        dist1=dist1+abs(x[i]-y[i-1]);\n        gobby=gobby+abs(x[i]-y[i]);\n    }\n    ll total=chuk+gobby+dist+dist1;\n    cout\u003c\u003ctotal\u003c\u003cendl;\n    }\n    else\n    {\n    ll gobby=abs(y[(b/2)]-x[(b/2)]);\n    ll chuk=abs(y[0]-x[0]);\n    for(i=1;i\u003c(b/2);i++)\n    {\n        dist=dist+abs(x[i]-y[i-1]);\n        chuk=chuk+abs(x[i]-y[i]);\n    }\n    for(i=(b/2)+1;i\u003cb;i++)\n    {\n        dist1=dist1+abs(x[i]-y[i-1]);\n        gobby=gobby+abs(x[i]-y[i]);\n    }\n    ll total=chuk+gobby+dist+dist1;\n    cout\u003c\u003ctotal\u003c\u003cendl;    \n    }    \n    }\n    return 0;\n}","score":0.0,"language":"cpp14"},{"contest":"code-marathon-sat18","challenge":"Caesar Cipher","code":"#include \u003cbits/stdc++.h\u003e\n\nusing namespace std;\n\n// Complete the caesarCipher function below.\nstring caesarCipher(string s, int k) {\n    k=k%26;\n    for(int i=0;i\u003cs.length();i++) {\n        if(s[i] \u003e= 'a' \u0026\u0026 s[i] \u003c= 'z') {\n            s[i]+=k;\n            if(s[i] \u003e= 'a' \u0026\u0026 s[i] \u003c= 'z');\n            else\n                s[i]-=26;\n        }\n        else if(s[i] \u003e= 'A' \u0026\u0026 s[i] \u003c= 'Z') {\n            s[i]+=k;\n            if(s[i] \u003e= 'A' \u0026\u0026 s[i] \u003c= 'Z');\n            else\n                s[i]-=26;\n        }\n    }\n    return s;\n}\n\nint main()\n{\n    ofstream fout(getenv(\"OUTPUT_PATH\"));\n\n    int n;\n    cin \u003e\u003e n;\n    cin.ignore(numeric_limits\u003cstreamsize\u003e::max(), '\\n');\n\n    string s;\n    getline(cin, s);\n\n    int k;\n    cin \u003e\u003e k;\n    cin.ignore(numeric_limits\u003cstreamsize\u003e::max(), '\\n');\n\n    string result = caesarCipher(s, k);\n\n    fout \u003c\u003c result \u003c\u003c \"\\n\";\n\n    fout.close();\n\n    return 0;\n}\n","score":1.0,"language":"cpp14"},{"contest":"code-marathon-sat18","challenge":"Lily's Homework","code":"#include \u003cbits/stdc++.h\u003e\n\nusing namespace std;\n\nvector\u003cstring\u003e split_string(string);\n\n// Complete the lilysHomework function below.\nint lilysHomework(vector\u003cint\u003e arr) {\n    int count=0;\n    vector\u003cint\u003e a(arr);\n    sort(a.begin(),a.end());\n    for(int i=0;i\u003carr.size();i++) {\n        if(arr[i] != a[i])\n            ++count;\n    }\n    return count/2;\n}\n\nint main()\n{\n    ofstream fout(getenv(\"OUTPUT_PATH\"));\n\n    int n;\n    cin \u003e\u003e n;\n    cin.ignore(numeric_limits\u003cstreamsize\u003e::max(), '\\n');\n\n    string arr_temp_temp;\n    getline(cin, arr_temp_temp);\n\n    vector\u003cstring\u003e arr_temp = split_string(arr_temp_temp);\n\n    vector\u003cint\u003e arr(n);\n\n    for (int i = 0; i \u003c n; i++) {\n        int arr_item = stoi(arr_temp[i]);\n\n        arr[i] = arr_item;\n    }\n\n    int result = lilysHomework(arr);\n\n    fout \u003c\u003c result \u003c\u003c \"\\n\";\n\n    fout.close();\n\n    return 0;\n}\n\nvector\u003cstring\u003e split_string(string input_string) {\n    string::iterator new_end = unique(input_string.begin(), input_string.end(), [] (const char \u0026x, const char \u0026y) {\n        return x == y and x == ' ';\n    });\n\n    input_string.erase(new_end, input_string.end());\n\n    while (input_string[input_string.length() - 1] == ' ') {\n        input_string.pop_back();\n    }\n\n    vector\u003cstring\u003e splits;\n    char delimiter = ' ';\n\n    size_t i = 0;\n    size_t pos = input_string.find(delimiter);\n\n    while (pos != string::npos) {\n        splits.push_back(input_string.substr(i, pos - i));\n\n        i = pos + 1;\n        pos = input_string.find(delimiter, i);\n    }\n\n    splits.push_back(input_string.substr(i, min(pos, input_string.length()) - i + 1));\n\n    return splits;\n}\n","score":0.2,"language":"cpp14"},{"contest":"code-marathon-sat18","challenge":"Lily's Homework","code":"#include \u003cbits/stdc++.h\u003e\n\nusing namespace std;\n\nvector\u003cstring\u003e split_string(string);\n\n// Complete the lilysHomework function below.\nint lilysHomework(vector\u003cint\u003e arr) {\n    int count=0;\n    vector\u003cint\u003e a(arr);\n    sort(a.begin(),a.end());\n    for(int i=0;i\u003carr.size();i++) {\n        if(arr[i] != a[i])\n            ++count;\n    }\n    return (count+1)/2;\n}\n\nint main()\n{\n    ofstream fout(getenv(\"OUTPUT_PATH\"));\n\n    int n;\n    cin \u003e\u003e n;\n    cin.ignore(numeric_limits\u003cstreamsize\u003e::max(), '\\n');\n\n    string arr_temp_temp;\n    getline(cin, arr_temp_temp);\n\n    vector\u003cstring\u003e arr_temp = split_string(arr_temp_temp);\n\n    vector\u003cint\u003e arr(n);\n\n    for (int i = 0; i \u003c n; i++) {\n        int arr_item = stoi(arr_temp[i]);\n\n        arr[i] = arr_item;\n    }\n\n    int result = lilysHomework(arr);\n\n    fout \u003c\u003c result \u003c\u003c \"\\n\";\n\n    fout.close();\n\n    return 0;\n}\n\nvector\u003cstring\u003e split_string(string input_string) {\n    string::iterator new_end = unique(input_string.begin(), input_string.end(), [] (const char \u0026x, const char \u0026y) {\n        return x == y and x == ' ';\n    });\n\n    input_string.erase(new_end, input_string.end());\n\n    while (input_string[input_string.length() - 1] == ' ') {\n        input_string.pop_back();\n    }\n\n    vector\u003cstring\u003e splits;\n    char delimiter = ' ';\n\n    size_t i = 0;\n    size_t pos = input_string.find(delimiter);\n\n    while (pos != string::npos) {\n        splits.push_back(input_string.substr(i, pos - i));\n\n        i = pos + 1;\n        pos = input_string.find(delimiter, i);\n    }\n\n    splits.push_back(input_string.substr(i, min(pos, input_string.length()) - i + 1));\n\n    return splits;\n}\n","score":0.1,"language":"cpp14"},{"contest":"code-marathon-sat18","challenge":"Lily's Homework","code":"#include \u003cbits/stdc++.h\u003e\n\nusing namespace std;\n\nvector\u003cstring\u003e split_string(string);\n\n// Complete the lilysHomework function below.\nint lilysHomework(vector\u003cint\u003e arr) {\n    int count1=0,count2=0;\n    vector\u003cint\u003e a(arr);\n    sort(a.begin(),a.end());\n    for(int i=0;i\u003carr.size();i++)\n        if(arr[i] != a[i])\n            ++count1;\n    sort(a.rbegin(),a.rend());\n    for(int i=0;i\u003carr.size();i++)\n        if(arr[i] != a[i])\n            ++count2;\n    return min((count1+1)/2,(count2+1)/2);\n}\n\nint main()\n{\n    ofstream fout(getenv(\"OUTPUT_PATH\"));\n\n    int n;\n    cin \u003e\u003e n;\n    cin.ignore(numeric_limits\u003cstreamsize\u003e::max(), '\\n');\n\n    string arr_temp_temp;\n    getline(cin, arr_temp_temp);\n\n    vector\u003cstring\u003e arr_temp = split_string(arr_temp_temp);\n\n    vector\u003cint\u003e arr(n);\n\n    for (int i = 0; i \u003c n; i++) {\n        int arr_item = stoi(arr_temp[i]);\n\n        arr[i] = arr_item;\n    }\n\n    int result = lilysHomework(arr);\n\n    fout \u003c\u003c result \u003c\u003c \"\\n\";\n\n    fout.close();\n\n    return 0;\n}\n\nvector\u003cstring\u003e split_string(string input_string) {\n    string::iterator new_end = unique(input_string.begin(), input_string.end(), [] (const char \u0026x, const char \u0026y) {\n        return x == y and x == ' ';\n    });\n\n    input_string.erase(new_end, input_string.end());\n\n    while (input_string[input_string.length() - 1] == ' ') {\n        input_string.pop_back();\n    }\n\n    vector\u003cstring\u003e splits;\n    char delimiter = ' ';\n\n    size_t i = 0;\n    size_t pos = input_string.find(delimiter);\n\n    while (pos != string::npos) {\n        splits.push_back(input_string.substr(i, pos - i));\n\n        i = pos + 1;\n        pos = input_string.find(delimiter, i);\n    }\n\n    splits.push_back(input_string.substr(i, min(pos, input_string.length()) - i + 1));\n\n    return splits;\n}\n","score":0.6,"language":"cpp14"},{"contest":"code-marathon-sat18","challenge":"Password Cracker","code":"#include \u003ccmath\u003e\n#include \u003ccstdio\u003e\n#include \u003cvector\u003e\n#include \u003ciostream\u003e\n#include \u003calgorithm\u003e\n#include\u003cstring\u003e\nusing namespace std;\n\n\nint main() {\n    /* Enter your code here. Read input from STDIN. Print output to STDOUT */   \n    int t;\n    cin\u003e\u003et;\n    while(t--) {\n        int n;\n        cin\u003e\u003en;\n        int spaces[2000]={0};\n        vector\u003cstring\u003e a(n);\n        string loginA;\n        for(int i=0;i\u003cn;i++)\n            cin\u003e\u003ea[i];\n        cin\u003e\u003eloginA;\n        string chk=loginA;\n        int i=0,j=0;\n        while(i\u003cn) {\n            int x=chk.find(a[i]);\n            if(x\u003cchk.length() \u0026\u0026 x\u003e=0) {\n                spaces[j]=x;\n                ++j;\n                for(int k=0;k\u003ca[i].length();k++)\n                    chk[k+x]='1';\n            }\n            else\n                ++i;\n        }\n        int size=j;\n        bool flag=true;\n        sort(spaces,spaces+size);\n        for(int i=0;i\u003cchk.length();i++)\n            if(chk[i]!='1')\n                flag=false;\n        if(flag) {\n            j=1;\n            for(int i=0;i\u003cloginA.length();i++) {\n                if(i==spaces[j] \u0026\u0026 j\u003csize) {\n                    ++j;\n                    cout\u003c\u003c\" \";\n                }\n                cout\u003c\u003cloginA[i];\n            }\n            cout\u003c\u003cendl;\n        }\n        else\n            cout\u003c\u003c\"WRONG PASSWORD\"\u003c\u003cendl;\n    }\n    return 0;\n}\n","score":0.5,"language":"cpp14"},{"contest":"code-marathon-sat18","challenge":"Password Cracker","code":"#include \u003ccmath\u003e\n#include \u003ccstdio\u003e\n#include \u003cvector\u003e\n#include \u003ciostream\u003e\n#include \u003calgorithm\u003e\n#include\u003cstring\u003e\nusing namespace std;\n\nbool comprator (string a ,string b, string c) {\n    return (a.length() \u003e b.length());\n}\n\nint main() {\n    /* Enter your code here. Read input from STDIN. Print output to STDOUT */   \n    int t;\n    cin\u003e\u003et;\n    while(t--) {\n        int n;\n        cin\u003e\u003en;\n        int spaces[2010]={0};\n        vector\u003cpair\u003cint,string\u003e \u003e a(n);\n        string loginA;\n        for(int i=0;i\u003cn;i++) {\n            cin\u003e\u003ea[i].second;\n            a[i].first=a[i].second.length();\n        }\n        cin\u003e\u003eloginA;\n        sort(a.rbegin(),a.rend());\n        string chk=loginA;\n        int i=0,j=0;\n        while(i\u003cn) {\n            int x=chk.find(a[i].second);\n            if(x\u003cchk.length() \u0026\u0026 x\u003e=0) {\n                spaces[j]=x;\n                ++j;\n                for(int k=0;k\u003ca[i].second.length();k++)\n                    chk[k+x]='1';\n            }\n            else\n                ++i;\n        }\n        int size=j;\n        bool flag=true;\n        sort(spaces,spaces+size);\n        for(int i=0;i\u003cchk.length();i++)\n            if(chk[i]!='1')\n                flag=false;\n        if(flag) {\n            j=1;\n            for(int i=0;i\u003cloginA.length();i++) {\n                if(i==spaces[j] \u0026\u0026 j\u003csize) {\n                    ++j;\n                    cout\u003c\u003c\" \";\n                }\n                cout\u003c\u003cloginA[i];\n            }\n            cout\u003c\u003cendl;\n        }\n        else\n            cout\u003c\u003c\"WRONG PASSWORD\"\u003c\u003cendl;\n    }\n    return 0;\n}\n","score":0.5,"language":"cpp14"},{"contest":"code-marathon-sat18","challenge":"Mandragora Forest","code":"#include \u003cbits/stdc++.h\u003e\n#define ll long long\n\nusing namespace std;\n\nvector\u003cstring\u003e split_string(string);\n\n// Complete the mandragora function below.\nlong mandragora(vector\u003cll\u003e h) {\n    ll n=h.size();\n    sort(h.rbegin(),h.rend());\n    ll e,max=h[0]*n;\n    for(ll i=1;i\u003cn;i++) {\n        h[i]+=h[i-1];\n        e=h[i]*(n-i);\n        if(e\u003emax)\n            max=e;\n    }\n    return max;\n}\n\nint main()\n{\n    ofstream fout(getenv(\"OUTPUT_PATH\"));\n\n    int t;\n    cin \u003e\u003e t;\n    cin.ignore(numeric_limits\u003cstreamsize\u003e::max(), '\\n');\n\n    for (int t_itr = 0; t_itr \u003c t; t_itr++) {\n        int n;\n        cin \u003e\u003e n;\n        cin.ignore(numeric_limits\u003cstreamsize\u003e::max(), '\\n');\n\n        string H_temp_temp;\n        getline(cin, H_temp_temp);\n\n        vector\u003cstring\u003e H_temp = split_string(H_temp_temp);\n\n        vector\u003cll\u003e H(n);\n\n        for (int i = 0; i \u003c n; i++) {\n            int H_item = stoi(H_temp[i]);\n\n            H[i] = H_item;\n        }\n\n        long result = mandragora(H);\n\n        fout \u003c\u003c result \u003c\u003c \"\\n\";\n    }\n\n    fout.close();\n\n    return 0;\n}\n\nvector\u003cstring\u003e split_string(string input_string) {\n    string::iterator new_end = unique(input_string.begin(), input_string.end(), [] (const char \u0026x, const char \u0026y) {\n        return x == y and x == ' ';\n    });\n\n    input_string.erase(new_end, input_string.end());\n\n    while (input_string[input_string.length() - 1] == ' ') {\n        input_string.pop_back();\n    }\n\n    vector\u003cstring\u003e splits;\n    char delimiter = ' ';\n\n    size_t i = 0;\n    size_t pos = input_string.find(delimiter);\n\n    while (pos != string::npos) {\n        splits.push_back(input_string.substr(i, pos - i));\n\n        i = pos + 1;\n        pos = input_string.find(delimiter, i);\n    }\n\n    splits.push_back(input_string.substr(i, min(pos, input_string.length()) - i + 1));\n\n    return splits;\n}\n","score":1.0,"language":"cpp14"},{"contest":"code-marathon-sat18","challenge":"The Prime Game ","code":"#include \u003cbits/stdc++.h\u003e\n\nusing namespace std;\n\nvector\u003cstring\u003e split_string(string);\n\n// Complete the winner function below.\nstring winner(vector\u003cint\u003e A) {\n    // Return the name of the winner of the game\n    return \"Manasa\";\n}\n\nint main()\n{\n    ofstream fout(getenv(\"OUTPUT_PATH\"));\n\n    int t;\n    cin \u003e\u003e t;\n    cin.ignore(numeric_limits\u003cstreamsize\u003e::max(), '\\n');\n\n    for (int t_itr = 0; t_itr \u003c t; t_itr++) {\n        int n;\n        cin \u003e\u003e n;\n        cin.ignore(numeric_limits\u003cstreamsize\u003e::max(), '\\n');\n\n        string A_temp_temp;\n        getline(cin, A_temp_temp);\n\n        vector\u003cstring\u003e A_temp = split_string(A_temp_temp);\n\n        vector\u003cint\u003e A(n);\n\n        for (int i = 0; i \u003c n; i++) {\n            int A_item = stoi(A_temp[i]);\n\n            A[i] = A_item;\n        }\n\n        string result = winner(A);\n\n        fout \u003c\u003c result \u003c\u003c \"\\n\";\n    }\n\n    fout.close();\n\n    return 0;\n}\n\nvector\u003cstring\u003e split_string(string input_string) {\n    string::iterator new_end = unique(input_string.begin(), input_string.end(), [] (const char \u0026x, const char \u0026y) {\n        return x == y and x == ' ';\n    });\n\n    input_string.erase(new_end, input_string.end());\n\n    while (input_string[input_string.length() - 1] == ' ') {\n        input_string.pop_back();\n    }\n\n    vector\u003cstring\u003e splits;\n    char delimiter = ' ';\n\n    size_t i = 0;\n    size_t pos = input_string.find(delimiter);\n\n    while (pos != string::npos) {\n        splits.push_back(input_string.substr(i, pos - i));\n\n        i = pos + 1;\n        pos = input_string.find(delimiter, i);\n    }\n\n    splits.push_back(input_string.substr(i, min(pos, input_string.length()) - i + 1));\n\n    return splits;\n}\n","score":0.0833333,"language":"cpp14"},{"contest":"code-marathon-sat18","challenge":"The Prime Game ","code":"#include \u003cbits/stdc++.h\u003e\n\nusing namespace std;\n\nvector\u003cstring\u003e split_string(string);\n\n// Complete the winner function below.\nstring winner(vector\u003cint\u003e A) {\n    // Return the name of the winner of the game\n    if(A.size()%2)\n        return \"Manasa\";\n    else\n        return \"Sandy\";\n}\n\nint main()\n{\n    ofstream fout(getenv(\"OUTPUT_PATH\"));\n\n    int t;\n    cin \u003e\u003e t;\n    cin.ignore(numeric_limits\u003cstreamsize\u003e::max(), '\\n');\n\n    for (int t_itr = 0; t_itr \u003c t; t_itr++) {\n        int n;\n        cin \u003e\u003e n;\n        cin.ignore(numeric_limits\u003cstreamsize\u003e::max(), '\\n');\n\n        string A_temp_temp;\n        getline(cin, A_temp_temp);\n\n        vector\u003cstring\u003e A_temp = split_string(A_temp_temp);\n\n        vector\u003cint\u003e A(n);\n\n        for (int i = 0; i \u003c n; i++) {\n            int A_item = stoi(A_temp[i]);\n\n            A[i] = A_item;\n        }\n\n        string result = winner(A);\n\n        fout \u003c\u003c result \u003c\u003c \"\\n\";\n    }\n\n    fout.close();\n\n    return 0;\n}\n\nvector\u003cstring\u003e split_string(string input_string) {\n    string::iterator new_end = unique(input_string.begin(), input_string.end(), [] (const char \u0026x, const char \u0026y) {\n        return x == y and x == ' ';\n    });\n\n    input_string.erase(new_end, input_string.end());\n\n    while (input_string[input_string.length() - 1] == ' ') {\n        input_string.pop_back();\n    }\n\n    vector\u003cstring\u003e splits;\n    char delimiter = ' ';\n\n    size_t i = 0;\n    size_t pos = input_string.find(delimiter);\n\n    while (pos != string::npos) {\n        splits.push_back(input_string.substr(i, pos - i));\n\n        i = pos + 1;\n        pos = input_string.find(delimiter, i);\n    }\n\n    splits.push_back(input_string.substr(i, min(pos, input_string.length()) - i + 1));\n\n    return splits;\n}\n","score":0.0,"language":"cpp14"},{"contest":"code-marathon-sat18","challenge":"The Prime Game ","code":"#include \u003cbits/stdc++.h\u003e\n\nusing namespace std;\n\nvector\u003cstring\u003e split_string(string);\n\n// Complete the winner function below.\nstring winner(vector\u003cint\u003e A) {\n    // Return the name of the winner of the game\n    int x=A.size();\n    if(x%2)\n        return \"Manasa\";\n    else\n        return \"Sandy\";\n}\nint main()\n{\n    ofstream fout(getenv(\"OUTPUT_PATH\"));\n\n    int t;\n    cin \u003e\u003e t;\n    cin.ignore(numeric_limits\u003cstreamsize\u003e::max(), '\\n');\n\n    for (int t_itr = 0; t_itr \u003c t; t_itr++) {\n        int n;\n        cin \u003e\u003e n;\n        cin.ignore(numeric_limits\u003cstreamsize\u003e::max(), '\\n');\n\n        string A_temp_temp;\n        getline(cin, A_temp_temp);\n\n        vector\u003cstring\u003e A_temp = split_string(A_temp_temp);\n\n        vector\u003cint\u003e A(n);\n\n        for (int i = 0; i \u003c n; i++) {\n            int A_item = stoi(A_temp[i]);\n\n            A[i] = A_item;\n        }\n\n        string result = winner(A);\n\n        fout \u003c\u003c result \u003c\u003c \"\\n\";\n    }\n\n    fout.close();\n\n    return 0;\n}\n\nvector\u003cstring\u003e split_string(string input_string) {\n    string::iterator new_end = unique(input_string.begin(), input_string.end(), [] (const char \u0026x, const char \u0026y) {\n        return x == y and x == ' ';\n    });\n\n    input_string.erase(new_end, input_string.end());\n\n    while (input_string[input_string.length() - 1] == ' ') {\n        input_string.pop_back();\n    }\n\n    vector\u003cstring\u003e splits;\n    char delimiter = ' ';\n\n    size_t i = 0;\n    size_t pos = input_string.find(delimiter);\n\n    while (pos != string::npos) {\n        splits.push_back(input_string.substr(i, pos - i));\n\n        i = pos + 1;\n        pos = input_string.find(delimiter, i);\n    }\n\n    splits.push_back(input_string.substr(i, min(pos, input_string.length()) - i + 1));\n\n    return splits;\n}\n","score":0.0,"language":"cpp14"},{"contest":"code-marathon-sat18","challenge":"The Prime Game ","code":"#include \u003cbits/stdc++.h\u003e\n\nusing namespace std;\n\nvector\u003cstring\u003e split_string(string);\n\n// Complete the winner function below.\nstring winner(vector\u003cint\u003e A) {\n    // Return the name of the winner of the game\n    return \"Sandy\";\n}\n\nint main()\n{\n    ofstream fout(getenv(\"OUTPUT_PATH\"));\n\n    int t;\n    cin \u003e\u003e t;\n    cin.ignore(numeric_limits\u003cstreamsize\u003e::max(), '\\n');\n\n    for (int t_itr = 0; t_itr \u003c t; t_itr++) {\n        int n;\n        cin \u003e\u003e n;\n        cin.ignore(numeric_limits\u003cstreamsize\u003e::max(), '\\n');\n\n        string A_temp_temp;\n        getline(cin, A_temp_temp);\n\n        vector\u003cstring\u003e A_temp = split_string(A_temp_temp);\n\n        vector\u003cint\u003e A(n);\n\n        for (int i = 0; i \u003c n; i++) {\n            int A_item = stoi(A_temp[i]);\n\n            A[i] = A_item;\n        }\n\n        string result = winner(A);\n\n        fout \u003c\u003c result \u003c\u003c \"\\n\";\n    }\n\n    fout.close();\n\n    return 0;\n}\n\nvector\u003cstring\u003e split_string(string input_string) {\n    string::iterator new_end = unique(input_string.begin(), input_string.end(), [] (const char \u0026x, const char \u0026y) {\n        return x == y and x == ' ';\n    });\n\n    input_string.erase(new_end, input_string.end());\n\n    while (input_string[input_string.length() - 1] == ' ') {\n        input_string.pop_back();\n    }\n\n    vector\u003cstring\u003e splits;\n    char delimiter = ' ';\n\n    size_t i = 0;\n    size_t pos = input_string.find(delimiter);\n\n    while (pos != string::npos) {\n        splits.push_back(input_string.substr(i, pos - i));\n\n        i = pos + 1;\n        pos = input_string.find(delimiter, i);\n    }\n\n    splits.push_back(input_string.substr(i, min(pos, input_string.length()) - i + 1));\n\n    return splits;\n}\n","score":0.0,"language":"cpp14"},{"contest":"code-marathon-sat18","challenge":"The Prime Game ","code":"#include \u003cbits/stdc++.h\u003e\n\nusing namespace std;\n\nvector\u003cstring\u003e split_string(string);\n\n// Complete the winner function below.\nstring manasa=\"Manasa\";\nstring sandy=\"Sandy\";\nstring winner(vector\u003cint\u003e A) {\n    // Return the name of the winner of the game\n    int x=A.size();\n    if(x%2)\n        return manasa;\n    else\n        return sandy;\n}\nint main()\n{\n    ofstream fout(getenv(\"OUTPUT_PATH\"));\n\n    int t;\n    cin \u003e\u003e t;\n    cin.ignore(numeric_limits\u003cstreamsize\u003e::max(), '\\n');\n\n    for (int t_itr = 0; t_itr \u003c t; t_itr++) {\n        int n;\n        cin \u003e\u003e n;\n        cin.ignore(numeric_limits\u003cstreamsize\u003e::max(), '\\n');\n\n        string A_temp_temp;\n        getline(cin, A_temp_temp);\n\n        vector\u003cstring\u003e A_temp = split_string(A_temp_temp);\n\n        vector\u003cint\u003e A(n);\n\n        for (int i = 0; i \u003c n; i++) {\n            int A_item = stoi(A_temp[i]);\n\n            A[i] = A_item;\n        }\n\n        string result = winner(A);\n\n        fout \u003c\u003c result \u003c\u003c \"\\n\";\n    }\n\n    fout.close();\n\n    return 0;\n}\n\nvector\u003cstring\u003e split_string(string input_string) {\n    string::iterator new_end = unique(input_string.begin(), input_string.end(), [] (const char \u0026x, const char \u0026y) {\n        return x == y and x == ' ';\n    });\n\n    input_string.erase(new_end, input_string.end());\n\n    while (input_string[input_string.length() - 1] == ' ') {\n        input_string.pop_back();\n    }\n\n    vector\u003cstring\u003e splits;\n    char delimiter = ' ';\n\n    size_t i = 0;\n    size_t pos = input_string.find(delimiter);\n\n    while (pos != string::npos) {\n        splits.push_back(input_string.substr(i, pos - i));\n\n        i = pos + 1;\n        pos = input_string.find(delimiter, i);\n    }\n\n    splits.push_back(input_string.substr(i, min(pos, input_string.length()) - i + 1));\n\n    return splits;\n}\n","score":0.0,"language":"cpp14"},{"contest":"code-marathon-sat18","challenge":"The Prime Game ","code":"#include \u003cbits/stdc++.h\u003e\n\nusing namespace std;\n\nvector\u003cstring\u003e split_string(string);\n\n// Complete the winner function below.\nstring manasa=\"Manasa\";\nstring sandy=\"Sandy\";\nstring winner(vector\u003cint\u003e A) {\n        return manasa;\n}\nint main()\n{\n    ofstream fout(getenv(\"OUTPUT_PATH\"));\n\n    int t;\n    cin \u003e\u003e t;\n    cin.ignore(numeric_limits\u003cstreamsize\u003e::max(), '\\n');\n\n    for (int t_itr = 0; t_itr \u003c t; t_itr++) {\n        int n;\n        cin \u003e\u003e n;\n        cin.ignore(numeric_limits\u003cstreamsize\u003e::max(), '\\n');\n\n        string A_temp_temp;\n        getline(cin, A_temp_temp);\n\n        vector\u003cstring\u003e A_temp = split_string(A_temp_temp);\n\n        vector\u003cint\u003e A(n);\n\n        for (int i = 0; i \u003c n; i++) {\n            int A_item = stoi(A_temp[i]);\n\n            A[i] = A_item;\n        }\n\n        string result = winner(A);\n\n        fout \u003c\u003c result \u003c\u003c \"\\n\";\n    }\n\n    fout.close();\n\n    return 0;\n}\n\nvector\u003cstring\u003e split_string(string input_string) {\n    string::iterator new_end = unique(input_string.begin(), input_string.end(), [] (const char \u0026x, const char \u0026y) {\n        return x == y and x == ' ';\n    });\n\n    input_string.erase(new_end, input_string.end());\n\n    while (input_string[input_string.length() - 1] == ' ') {\n        input_string.pop_back();\n    }\n\n    vector\u003cstring\u003e splits;\n    char delimiter = ' ';\n\n    size_t i = 0;\n    size_t pos = input_string.find(delimiter);\n\n    while (pos != string::npos) {\n        splits.push_back(input_string.substr(i, pos - i));\n\n        i = pos + 1;\n        pos = input_string.find(delimiter, i);\n    }\n\n    splits.push_back(input_string.substr(i, min(pos, input_string.length()) - i + 1));\n\n    return splits;\n}\n","score":0.0833333,"language":"cpp14"},{"contest":"code-marathon-sat18","challenge":"Repair Roads","code":"#include \u003cbits/stdc++.h\u003e\n\nusing namespace std;\n\n/*\n * Complete the repairRoads function below.\n */\nint repairRoads(int n, vector\u003cvector\u003cint\u003e\u003e roads) {\n    /*\n     * Write your code here.\n     */\n    return 1;\n}\n\nint main()\n{\n    ofstream fout(getenv(\"OUTPUT_PATH\"));\n\n    int t;\n    cin \u003e\u003e t;\n    cin.ignore(numeric_limits\u003cstreamsize\u003e::max(), '\\n');\n\n    for (int t_itr = 0; t_itr \u003c t; t_itr++) {\n        int n;\n        cin \u003e\u003e n;\n        cin.ignore(numeric_limits\u003cstreamsize\u003e::max(), '\\n');\n\n        vector\u003cvector\u003cint\u003e\u003e roads(n-1);\n        for (int roads_row_itr = 0; roads_row_itr \u003c n-1; roads_row_itr++) {\n            roads[roads_row_itr].resize(2);\n\n            for (int roads_column_itr = 0; roads_column_itr \u003c 2; roads_column_itr++) {\n                cin \u003e\u003e roads[roads_row_itr][roads_column_itr];\n            }\n\n            cin.ignore(numeric_limits\u003cstreamsize\u003e::max(), '\\n');\n        }\n\n        int result = repairRoads(n, roads);\n\n        fout \u003c\u003c result \u003c\u003c \"\\n\";\n    }\n\n    fout.close();\n\n    return 0;\n}\n","score":0.0,"language":"cpp14"},{"contest":"code-marathon-sat18","challenge":"Lily's Homework","code":"#include \u003cbits/stdc++.h\u003e\n\nusing namespace std;\n\nvector\u003cstring\u003e split_string(string);\n\n// Complete the lilysHomework function below.\nint lilysHomework(vector\u003cint\u003e arr) {\n    int count1=0,count2=0;\n    long long sum1=0,sum2=0;\n    vector\u003cint\u003e a(arr);\n    sort(a.begin(),a.end());\n    for(int i=1;i\u003ca.size();i++)\n        sum1+=abs(a[i]-a[i-1]);\n    for(int i=0;i\u003carr.size();i++)\n        if(arr[i] != a[i])\n            ++count1;\n    sort(a.rbegin(),a.rend());\n    for(int i=1;i\u003ca.size();i++)\n        sum2+=abs(a[i]-a[i-1]);\n    for(int i=0;i\u003carr.size();i++)\n        if(arr[i] != a[i])\n            ++count2;\n    if(sum1\u003csum2)\n        return (count1+1)/2;\n    else if(sum2\u003esum1)\n        return (count2+1)/2;\n    else\n        return min((count1+1)/2,(count2+1)/2);\n}\n\nint main()\n{\n    ofstream fout(getenv(\"OUTPUT_PATH\"));\n\n    int n;\n    cin \u003e\u003e n;\n    cin.ignore(numeric_limits\u003cstreamsize\u003e::max(), '\\n');\n\n    string arr_temp_temp;\n    getline(cin, arr_temp_temp);\n\n    vector\u003cstring\u003e arr_temp = split_string(arr_temp_temp);\n\n    vector\u003cint\u003e arr(n);\n\n    for (int i = 0; i \u003c n; i++) {\n        int arr_item = stoi(arr_temp[i]);\n\n        arr[i] = arr_item;\n    }\n\n    int result = lilysHomework(arr);\n\n    fout \u003c\u003c result \u003c\u003c \"\\n\";\n\n    fout.close();\n\n    return 0;\n}\n\nvector\u003cstring\u003e split_string(string input_string) {\n    string::iterator new_end = unique(input_string.begin(), input_string.end(), [] (const char \u0026x, const char \u0026y) {\n        return x == y and x == ' ';\n    });\n\n    input_string.erase(new_end, input_string.end());\n\n    while (input_string[input_string.length() - 1] == ' ') {\n        input_string.pop_back();\n    }\n\n    vector\u003cstring\u003e splits;\n    char delimiter = ' ';\n\n    size_t i = 0;\n    size_t pos = input_string.find(delimiter);\n\n    while (pos != string::npos) {\n        splits.push_back(input_string.substr(i, pos - i));\n\n        i = pos + 1;\n        pos = input_string.find(delimiter, i);\n    }\n\n    splits.push_back(input_string.substr(i, min(pos, input_string.length()) - i + 1));\n\n    return splits;\n}\n","score":0.6,"language":"cpp14"},{"contest":"preview dummy contest","challenge":"R3V3R5E C0D1NG 1","code":"#include \u003ciostream\u003e\n#define ll long long\nusing namespace std;\n\nint main() {\n    int t; cin\u003e\u003et;\n    while(t--) {\n        int r,c,f;\n        scanf(\"%1d %1d %1d\",\u0026r,\u0026c,\u0026f);\n        f=f*r*c;\n        for(int i=0;i\u003cr;i++) {\n            for(int j=0;j\u003cc;j++)\n                cout\u003c\u003cf\u003c\u003c\" \";\n            cout\u003c\u003cendl;\n        }\n    }\n}","score":1.0,"language":"cpp"},{"contest":"preview dummy contest","challenge":"R3V3R5E C0D1NG 1","code":"#include \u003ciostream\u003e\n#define ll long long\nusing namespace std;\n\nint main() {\n    int t; cin\u003e\u003et;\n    while(t--) {\n        int r,c,f;\n        scanf(\"%1d %1d %1d\",\u0026r,\u0026c,\u0026f);\n        f=f*r*c;\n        for(int i=0;i\u003cr;i++) {\n            for(int j=0;j\u003cc;j++)\n                cout\u003c\u003cf\u003c\u003c\" \";\n            // cout\u003c\u003cendl;\n        }\n    }\n}","score":0.0,"language":"cpp"},{"contest":"preview dummy contest","challenge":"R3V3R5E C0D1NG 1","code":"#include \u003ciostream\u003e\n#define ll long long\nusing namespace std;\n\nint main() {\n    int t; cin\u003e\u003et;\n    while(t--) {\n        int r,c,f;\n        scanf(\"%1d %1d %1d\",\u0026r,\u0026c,\u0026f);\n        f=f*r*c;\n        for(int i=0;i\u003cr;i++) {\n            for(int j=0;j\u003cc;j++)\n                cout\u003c\u003ci\u003c\u003c\" \";\n            cout\u003c\u003cendl;\n        }\n    }\n}","score":0.0,"language":"cpp"},{"contest":"preview dummy contest","challenge":"R3V3R5E C0D1NG 1","code":"#include \u003ciostream\u003e\n#define ll long long\nusing namespace std;\n\nint main() {\n    int t; cin\u003e\u003et;\n    while(t--) {\n        int r,c,f;\n        scanf(\"%1d %1d %1d\",\u0026r,\u0026c,\u0026f);\n        f=f*r*c;\n        for(int i=0;i\u003cr;i++) {\n            for(int j=0;j\u003cc;j++)\n                cout\u003c\u003cf\u003c\u003c\" \";\n            cout\u003c\u003cendl;\n        }\n    }\n}","score":1.0,"language":"cpp"},{"contest":"preview dummy contest","challenge":"R3V3R5E C0D1NG 2","code":"#include \u003ciostream\u003e\n#define ll long long\nusing namespace std;\n\nint main() {\n    ll t; cin\u003e\u003et;\n    while(t--) {\n        ll n; cin\u003e\u003en;\n        ll a=0,b=1,c;\n        for(ll i=0;i\u003c=n;i++) {\n            cout\u003c\u003ca\u003c\u003c\" \";\n            c=a+b;\n            a=b;\n            b=c;\n        } cout\u003c\u003cendl;\n    }\n}","score":1.0,"language":"cpp"},{"contest":"preview dummy contest","challenge":"R3V3R5E C0D1NG 2","code":"#include \u003ciostream\u003e\n#define ll long long\nusing namespace std;\n\nint main() {\n    ll t; cin\u003e\u003et;\n    while(t--) {\n        ll n; cin\u003e\u003en;\n        ll a=0,b=1,c;\n        for(ll i=0;i\u003c=n;i++) {\n            cout\u003c\u003cb\u003c\u003c\" \";\n            c=a+b;\n            a=b;\n            b=c;\n        } cout\u003c\u003cendl;\n    }\n}","score":0.0,"language":"cpp"},{"contest":"preview dummy contest","challenge":"R3V3R5E C0D1NG 2","code":"#include \u003ciostream\u003e\n#define ll long long\nusing namespace std;\n\nint main() {\n    ll t; cin\u003e\u003et;\n    while(t--) {\n        ll n; cin\u003e\u003en;\n        ll a=0,b=1,c;\n        for(ll i=0;i\u003c=n;i++) {\n            cout\u003c\u003ca\u003c\u003c\" \";\n            c=a+b;\n            a=b;\n            b=c;\n        } cout\u003c\u003cendl;\n    }\n}","score":1.0,"language":"cpp"},{"contest":"preview dummy contest","challenge":"R3V3R5E C0D1NG 3","code":"#include \u003cbits/stdc++.h\u003e\n#define ll long long\nusing namespace std;\n\nint main() {\n    ll t; cin\u003e\u003et;\n    while(t--) {\n        string n; cin\u003e\u003en;\n        for(ll i=0;i\u003cn.length();i++)\n            for(char j='1';j\u003c=n[i];j++)\n                cout\u003c\u003c(n[i]-'0')*(n[i]-'0');\n        cout\u003c\u003cendl;\n    }\n}","score":1.0,"language":"cpp"},{"contest":"preview dummy contest","challenge":"R3V3R5E C0D1NG 5","code":"#include \u003cbits/stdc++.h\u003e\n#define ll long long\nusing namespace std;\n\nint main() {\n\tll t; cin\u003e\u003et;\n\twhile(t--) {\n\t\tstring n; cin\u003e\u003en;\n\t\tfor(ll i=0;i\u003cn.length();i++) {\n\t\t\tfor(char j='1';j\u003c=n[i];j++)\n\t\t\t\tcout\u003c\u003c'*';\n\t\t\tcout\u003c\u003cendl;\n\t\t}\n\t}\n}\n","score":0.0,"language":"cpp"},{"contest":"preview dummy contest","challenge":"R3V3R5E C0D1NG 5","code":"#include \u003cbits/stdc++.h\u003e\n#define ll long long\nusing namespace std;\n\nint main() {\n    ios_base::sync_with_stdio(false);\n    cin.tie(NULL);\n\tll t; cin\u003e\u003et;\n\twhile(t--) {\n\t\tstring n; cin\u003e\u003en;\n\t\tfor(ll i=0;i\u003cn.length();i++) {\n\t\t\tfor(char j='1';j\u003c=n[i];j++)\n\t\t\t\tcout\u003c\u003c'*';\n\t\t\tcout\u003c\u003cendl;\n\t\t}\n\t}\n}\n","score":1.0,"language":"cpp"},{"contest":"preview dummy contest","challenge":"R3V3R5E C0D1NG 4","code":"#include \u003cbits/stdc++.h\u003e\n#define ll long long\nusing namespace std;\n\nstring rev(int x) {\n    string rN(\"\");\n    while(x != 0) {\n        rN+=char('0'+(x%10));\n        x/=10;\n    } return rN;\n}\n\nint main() {\n    ll t; cin\u003e\u003et;\n    while(t--) {\n        string s; cin\u003e\u003es;\n        for(ll i=0;i\u003cs.length();i++)\n            cout\u003c\u003cint(s[i])-32\u003c\u003crev(s[i]-32);\n        cout\u003c\u003cendl;\n    }\n}","score":1.0,"language":"cpp"},{"contest":"R3V3R5E C0D1NG","challenge":"R3V3R5E C0D1NG 1","code":"#include \u003ciostream\u003e\n#define ll long long\nusing namespace std;\n\nint main() {\n    int t; cin\u003e\u003et;\n    while(t--) {\n        int r,c,f;\n        scanf(\"%1d %1d %1d\",\u0026r,\u0026c,\u0026f);\n        f=f*r*c;\n        for(int i=0;i\u003cr;i++) {\n            for(int j=0;j\u003cc;j++)\n                cout\u003c\u003cf\u003c\u003c\" \";\n            cout\u003c\u003cendl;\n        }\n    }\n}","score":1.0,"language":"cpp14"},{"contest":"R3V3R5E C0D1NG","challenge":"R3V3R5E C0D1NG 2","code":"#include \u003ciostream\u003e\n#define ll long long\nusing namespace std;\n\nint main() {\n    ll t; cin\u003e\u003et;\n    while(t--) {\n        ll n; cin\u003e\u003en;\n        ll a=0,b=1,c;\n        for(ll i=0;i\u003c=n;i++) {\n            cout\u003c\u003ca\u003c\u003c\" \";\n            c=a+b;\n            a=b;\n            b=c;\n        } cout\u003c\u003cendl;\n    }\n}","score":1.0,"language":"cpp14"},{"contest":"R3V3R5E C0D1NG","challenge":"R3V3R5E C0D1NG 3","code":"#include \u003cbits/stdc++.h\u003e\n#define ll long long\nusing namespace std;\n\nint main() {\n\tll t; cin\u003e\u003et;\n\twhile(t--) {\n\t\tstring n; cin\u003e\u003en;\n\t\tfor(ll i=0;i\u003cn.length();i++)\n\t\t\tfor(char j='1';j\u003c=n[i];j++)\n\t\t\t\tcout\u003c\u003c(n[i]-'0')*(n[i]-'0');\n\t\tcout\u003c\u003cendl;\n\t}\n}\n","score":1.0,"language":"cpp14"},{"contest":"R3V3R5E C0D1NG","challenge":"R3V3R5E C0D1NG 4","code":"#include \u003cbits/stdc++.h\u003e\n#define ll long long\nusing namespace std;\n\nstring rev(int x) {\n\tstring rN(\"\");\n\twhile(x != 0) {\n        rN+=char('0'+(x%10));\n        x/=10;\n    } return rN;\n}\n\nint main() {\n\tll t; cin\u003e\u003et;\n\twhile(t--) {\n\t\tstring s; cin\u003e\u003es;\n\t\tfor(ll i=0;i\u003cs.length();i++)\n\t\t\tcout\u003c\u003cint(s[i])-32\u003c\u003crev(s[i]-32);\n\t\tcout\u003c\u003cendl;\n\t}\n}\n","score":1.0,"language":"cpp14"},{"contest":"R3V3R5E C0D1NG","challenge":"R3V3R5E C0D1NG 5","code":"#include \u003cbits/stdc++.h\u003e\n#define ll long long\nusing namespace std;\n\nint main() {\n\tll t; cin\u003e\u003et;\n\twhile(t--) {\n\t\tstring n; cin\u003e\u003en;\n\t\tfor(ll i=0;i\u003cn.length();i++) {\n\t\t\tfor(char j='1';j\u003c=n[i];j++)\n\t\t\t\tcout\u003c\u003c'*';\n\t\t\tcout\u003c\u003cendl;\n\t\t}\n\t}\n}\n","score":1.0,"language":"cpp14"},{"contest":"preview dummy contest","challenge":"R3V3R5E C0D1NG 2","code":"#include \u003ciostream\u003e\n#define ll long long\nusing namespace std;\n\nint main() {\n    ll t; cin\u003e\u003et;\n    while(t--) {\n        ll n; cin\u003e\u003en;\n        ll a[n+1];\n        a[0]=0; a[1]=1;\n        for(ll i=2;i\u003c=n;i++) \n            a[i]=a[i-1]+a[i-2];\n        for(ll i=n;i\u003e=0;i--) \n            cout\u003c\u003ca[i]\u003c\u003c\" \";\n        cout\u003c\u003cendl;\n    }\n}","score":1.0,"language":"cpp"},{"contest":"preview dummy contest","challenge":"Just make a triangle!","code":"#include \u003cbits/stdc++.h\u003e\n\nusing namespace std;\n\nint main() {\n    int a,b,c; cin\u003e\u003ea\u003e\u003eb\u003e\u003ec;\n    cout\u003c\u003c(((max({a,b,c})+1-(a+b+c-max({a,b,c})))\u003e0)?(max({a,b,c})+1-(a+b+c-max({a,b,c}))):0)\u003c\u003cendl;\n}","score":0.0,"language":"cpp"},{"contest":"preview dummy contest","challenge":"Just make a triangle!","code":"#include\u003cbits/stdc++.h\u003e\n#define ll long long\nusing namespace std;\n\nint main() {\n    int t; cin\u003e\u003et;\n    while(t--) {\n        ll a,b,c; cin\u003e\u003ea\u003e\u003eb\u003e\u003ec;\n        cout\u003c\u003c(((max({a,b,c})+1-(a+b+c-max({a,b,c})))\u003e0)?(max({a,b,c})+1-(a+b+c-max({a,b,c}))):0)\u003c\u003cendl;\n    }\n}","score":1.0,"language":"cpp"},{"contest":"R3V3R5E C0D1NG","challenge":"R3V3R5E C0D1NG 5","code":"#include \u003ccmath\u003e\n#include \u003ccstdio\u003e\n#include \u003cvector\u003e\n#include \u003ciostream\u003e\n#include \u003calgorithm\u003e\nusing namespace std;\n\n\nint main() {\n    int t;\n    cin\u003e\u003et;\n    for(int i=0;i\u003ct;i++)\n    {\n        string c;\n        cin\u003e\u003ec;\n        for(int i=0;i\u003cc.size();i++)\n        {\n            int p=c[i]-'0';\n            for(int i=0;i\u003cp;i++)\n                cout\u003c\u003c'*';\n            cout\u003c\u003cendl;\n        }\n        cout\u003c\u003cendl;\n    }\n    /* Enter your code here. Read input from STDIN. Print output to STDOUT */   \n    return 0;\n}","score":0.0,"language":"cpp"},{"contest":"R3V3R5E C0D1NG","challenge":"R3V3R5E C0D1NG 5","code":"#include \u003cbits/stdc++.h\u003e\nusing namespace std;\n\n\nint main() {\n     ios_base::sync_with_stdio(false);\n    cin.tie(NULL);\n    int t;\n    cin\u003e\u003et;\n    for(int i=0;i\u003ct;i++)\n    {\n        string c;\n        cin\u003e\u003ec;\n        for(int i=0;i\u003cc.size();i++)\n        {\n            int p=c[i]-'0';\n            for(int i=0;i\u003cp;i++)\n                cout\u003c\u003c'*';\n            cout\u003c\u003cendl;\n        }\n        cout\u003c\u003cendl;\n    }\n    /* Enter your code here. Read input from STDIN. Print output to STDOUT */   \n    return 0;\n}","score":0.0,"language":"cpp"},{"contest":"R3V3R5E C0D1NG","challenge":"R3V3R5E C0D1NG 5","code":"#include \u003cbits/stdc++.h\u003e\nusing namespace std;\n\n\nint main() {\n    ios_base::sync_with_stdio(false);\n    cin.tie(NULL);\n    int t;\n    cin\u003e\u003et;\n    for(int i=0;i\u003ct;i++) {\n        string c;\n        cin\u003e\u003ec;\n        for(int j=0;j\u003cc.size();j++) {\n            int p=c[i]-'0';\n            for(int k=0;k\u003cp;k++)\n                cout\u003c\u003c'*';\n            cout\u003c\u003cendl;\n        }\n    }\n    /* Enter your code here. Read input from STDIN. Print output to STDOUT */   \n    return 0;\n}","score":0.0,"language":"cpp"},{"contest":"R3V3R5E C0D1NG","challenge":"R3V3R5E C0D1NG 5","code":"#include \u003cbits/stdc++.h\u003e\nusing namespace std;\n\n\nint main() {\n    ios_base::sync_with_stdio(false);\n    cin.tie(NULL);\n    int t;\n    cin\u003e\u003et;\n    for(int i=0;i\u003ct;i++) {\n        string c;\n        cin\u003e\u003ec;\n        for(int j=0;j\u003cc.size();j++) {\n            int p=c[j]-'0';\n            for(int k=0;k\u003cp;k++)\n                cout\u003c\u003c'*';\n            cout\u003c\u003cendl;\n        }\n    }\n    /* Enter your code here. Read input from STDIN. Print output to STDOUT */   \n    return 0;\n}","score":1.0,"language":"cpp"},{"contest":"R3V3R5E C0D1NG","challenge":"R3V3R5E C0D1NG 5","code":"#include \u003cbits/stdc++.h\u003e\nusing namespace std;\n\n\nint main() {\n    int t;\n    cin\u003e\u003et;\n    for(int i=0;i\u003ct;i++) {\n        string c;\n        cin\u003e\u003ec;\n        for(int j=0;j\u003cc.size();j++) {\n            int p=c[j]-'0';\n            for(int k=0;k\u003cp;k++)\n                cout\u003c\u003c'*';\n            cout\u003c\u003cendl;\n        }\n    }\n    /* Enter your code here. Read input from STDIN. Print output to STDOUT */   \n    return 0;\n}","score":1.0,"language":"cpp"},{"contest":"preview dummy contest","challenge":"Minimum Integer","code":"#include \u003ccmath\u003e\n#include \u003ccstdio\u003e\n#include \u003cvector\u003e\n#include \u003ciostream\u003e\n#include \u003calgorithm\u003e\nusing namespace std;\n\n\nint main() {\n    long q,l,r,d; cin\u003e\u003eq;\n    while(q--) {\n        cin\u003e\u003el\u003e\u003er\u003e\u003ed;\n        if(double(l)/d\u003e1)\n            cout\u003c\u003cd\u003c\u003cendl;\n        else\n            cout\u003c\u003cceil(double(r+1)/d)*d\u003c\u003cendl;\n    }\n    return 0;\n}\n","score":1.0,"language":"cpp14"},{"contest":"T1M30UT","challenge":"The Full Counting Sort","code":"#include \u003cbits/stdc++.h\u003e\n#define pb push_back\nusing namespace std;\n\nint main() {\n    string s;\n    int n,x,N;\n    cin\u003e\u003en;\n    N=n/2;\n    vector\u003cvector\u003cstring\u003e \u003e v(101);\n    while(n--){\n        cin\u003e\u003ex\u003e\u003es;\n        v[x].pb(n\u003e=N?\"-\":s);\n    }\n    for(int i=0;i\u003cv.size();i++)\n        for(int j=0;j\u003cv[i].size();j++)\n            cout\u003c\u003cv[i][j]\u003c\u003c\" \";\n}","score":1.0,"language":"cpp14"},{"contest":"preview dummy contest","challenge":"Minimum Integer","code":"#include\u003cbits/stdc++.h\u003e\n#define ll long long\nusing namespace std;\n\nint main() {\n    ll q,l,r,d; cin\u003e\u003eq;\n    while(q--) {\n        cin\u003e\u003el\u003e\u003er\u003e\u003ed;\n        if(double(l)/d\u003e1)\n            cout\u003c\u003cd\u003c\u003cendl;\n        else\n            cout\u003c\u003c(ll)ceil(double(r+1)/d)*d\u003c\u003cendl;\n    }\n    return 0;\n}","score":0.1,"language":"cpp14"},{"contest":"preview dummy contest","challenge":"Minimum Integer","code":"#include\u003cbits/stdc++.h\u003e\n#define ll long long\nusing namespace std;\n\nint main() {\n    ios_base::sync_with_stdio(false);\n    cin.tie(NULL);\n    ll q,l,r,d; cin\u003e\u003eq;\n    while(q--) {\n        cin\u003e\u003el\u003e\u003er\u003e\u003ed;\n        if(double(l)/d\u003e1)\n            cout\u003c\u003cd\u003c\u003cendl;\n        else\n            cout\u003c\u003c(ll)ceil(double(r+1)/d)*d\u003c\u003cendl;\n    }\n    return 0;\n}","score":0.55,"language":"cpp14"},{"contest":"preview dummy contest","challenge":"Minimum Integer","code":"#include\u003cbits/stdc++.h\u003e\n#define ll long long\nusing namespace std;\n\nint main() {\n    ll q,l,r,d; cin\u003e\u003eq;\n    while(q--) {\n        cin\u003e\u003el\u003e\u003er\u003e\u003ed;\n        if(double(l)/d\u003e1)\n            cout\u003c\u003cd\u003c\u003cendl;\n        else\n            cout\u003c\u003c(ll)ceil(double(r+1)/d)*d\u003c\u003cendl;\n    }\n    return 0;\n}","score":1.0,"language":"cpp14"},{"contest":"preview dummy contest","challenge":"Minimum Integer","code":"#include\u003cbits/stdc++.h\u003e\n#define ll long long\nusing namespace std;\n\nint main() {\n    ll q,l,r,d; cin\u003e\u003eq;\n    while(q--) {\n        cin\u003e\u003el\u003e\u003er\u003e\u003ed;\n        if(double(l)/d\u003e1)\n            cout\u003c\u003cd\u003c\u003cendl;\n        else\n            cout\u003c\u003c(ll)ceil(double(r+1)/d)*d\u003c\u003cendl;\n    }\n    return 0;\n}","score":1.0,"language":"cpp14"},{"contest":"T1M30UT","challenge":"Minimum Integer","code":"#include\u003cbits/stdc++.h\u003e\n#define ll long long\nusing namespace std;\n\nint main() {\n    ll q,l,r,d; cin\u003e\u003eq;\n    while(q--) {\n        cin\u003e\u003el\u003e\u003er\u003e\u003ed;\n        if(double(l)/d\u003e1)\n            cout\u003c\u003cd\u003c\u003cendl;\n        else\n            cout\u003c\u003c(ll)ceil(double(r+1)/d)*d\u003c\u003cendl;\n    }\n    return 0;\n}","score":1.0,"language":"cpp14"},{"contest":"T1M30UT","challenge":"Petya and Origami","code":"# include \u003ciostream\u003e\nusing namespace std;\n\nint main() {\n    int t; cin\u003e\u003et;\n    while(t--){\n    int n,k;\n    int res,cur;\n    cin\u003e\u003en\u003e\u003ek;\n    res=0;\n    cur=n*2;\n    res+=(cur+k-1)/k;\n    cur=n*5;\n    res+=(cur+k-1)/k;\n    cur=n*8;\n    res+=(cur+k-1)/k;\n    cout\u003c\u003cres\u003c\u003cendl;\n    } //from codeforces tutorial\n}","score":0.0,"language":"cpp14"},{"contest":"T1M30UT","challenge":"Pair of Toys","code":"#include \u003ciostream\u003e\nusing namespace std;\n\nint main() {\n    int t; cin\u003e\u003et;\n    while(t--) {\n    long long n,k;\n    cin\u003e\u003en\u003e\u003ek;\n    if(k\u003c=n)\n        cout\u003c\u003c(k-1)/2\u003c\u003cendl;\n    else\n        cout\u003c\u003cmax(0LL,((k+1)/2)-(k-n))\u003c\u003cendl;\n    }\n}","score":0.0,"language":"cpp14"},{"contest":"T1M30UT","challenge":"Pair of Toys","code":"#include \u003ciostream\u003e\nusing namespace std;\n\nint main() {\n    int t; cin\u003e\u003et;\n    while(t--) {\n        long long n,k;\n        cin\u003e\u003en\u003e\u003ek;\n        cout\u003c\u003cmax(0LL,(k-1)/2-max(0,k-n-1))\u003c\u003cendl;\n    }\n}","score":0.0,"language":"cpp14"},{"contest":"T1M30UT","challenge":"Pair of Toys","code":"#include \u003ciostream\u003e\nusing namespace std;\n\nint main() {\n    int t; cin\u003e\u003et;\n    while(t--) {\n        long long n,k;\n        cin\u003e\u003en\u003e\u003ek;\n        cout\u003c\u003cmax(0LL,(k-1)/2-max(0LL,k-n-1))\u003c\u003cendl;\n    }\n}","score":0.0,"language":"cpp14"},{"contest":"preview dummy contest","challenge":"Pair of Toys","code":"#include \u003ciostream\u003e\nusing namespace std;\n\nint main() {\n    int t; cin\u003e\u003et;\n    while(t--) {\n        long long n,k;\n        cin\u003e\u003en\u003e\u003ek;\n        cout\u003c\u003cmax(0LL,(k-1)/2-max(0LL,k-n-1))\u003c\u003cendl;\n    }\n}","score":1.0,"language":"cpp14"},{"contest":"preview dummy contest","challenge":"Pair of Toys","code":"#include \u003ciostream\u003e\nusing namespace std;\n\nint main() {\n    int t; cin\u003e\u003et;\n    while(t--) {\n        long long n,k;\n        if(k\u003c=n)\n            cout\u003c\u003c(k-1)/2\u003c\u003cendl;\n        else\n            cout\u003c\u003cmax(0LL,((k-1)/2)-(k-n-1))\u003c\u003cendl;\n    }\n}","score":0.0,"language":"cpp14"},{"contest":"preview dummy contest","challenge":"Pair of Toys","code":"#include \u003ciostream\u003e\nusing namespace std;\n\nint main() {\n    int t; cin\u003e\u003et;\n    while(t--) {\n        long long n,k;\n        cin\u003e\u003en\u003e\u003ek;\n        if(k\u003c=n)\n            cout\u003c\u003c(k-1)/2\u003c\u003cendl;\n        else\n            cout\u003c\u003cmax(0LL,((k-1)/2)-(k-n-1))\u003c\u003cendl;\n    }\n}","score":1.0,"language":"cpp14"},{"contest":"preview dummy contest","challenge":"Pair of Toys","code":"#include \u003ciostream\u003e\nusing namespace std;\n\nint main() {\n    int t; cin\u003e\u003et;\n    while(t--) {\n        long long n,k;\n        cin\u003e\u003en\u003e\u003ek;\n        if(k\u003c=n)\n            cout\u003c\u003c(k-1)/2\u003c\u003cendl;\n        else\n            cout\u003c\u003cmax(0LL,((k+1)/2)-(k-n))\u003c\u003cendl;\n    }\n}","score":1.0,"language":"cpp14"},{"contest":"T1M30UT","challenge":"Pair of Toys","code":"#include \u003ciostream\u003e\nusing namespace std;\n\nint main() {\n    int t; cin\u003e\u003et;\n    while(t--) {\n        long long n,k;\n        cin\u003e\u003en\u003e\u003ek;\n        cout\u003c\u003cmax(0LL,(k-1)/2-max(0LL,k-n-1))\u003c\u003cendl;\n    }\n}","score":1.0,"language":"cpp14"},{"contest":"preview dummy contest","challenge":"Petya and Origami","code":"#include \u003cbits/stdc++.h\u003e\nusing namespace std;\n\nint main() {\n    int t; cin\u003e\u003et;\n    while(t--) {\n        double n,k;\n        cin\u003e\u003en\u003e\u003ek;\n        long long red=n*2,green=n*5,blue=n*8;\n        cout\u003c\u003c(long long)(ceil(red/k)+ceil(green/k)+ceil(blue/k))\u003c\u003cendl;\n    }\n}","score":0.0,"language":"cpp14"},{"contest":"preview dummy contest","challenge":"Petya and Origami","code":"#include \u003cbits/stdc++.h\u003e\nusing namespace std;\n\nint main() {\n    int t; cin\u003e\u003et;\n    while(t--) {\n        double n,k;\n        cin\u003e\u003en\u003e\u003ek;\n        long long red=n*2,green=n*5,blue=n*8;\n        cout\u003c\u003c(long long)(ceil(red/k)+ceil(green/k)+ceil(blue/k))\u003c\u003cendl;\n    }\n}","score":1.0,"language":"cpp14"},{"contest":"T1M30UT","challenge":"Petya and Origami","code":"#include \u003cbits/stdc++.h\u003e\nusing namespace std;\n\nint main() {\n    int t; cin\u003e\u003et;\n    while(t--) {\n        double n,k;\n        cin\u003e\u003en\u003e\u003ek;\n        long long red=n*2,green=n*5,blue=n*8;\n        cout\u003c\u003c(long long)(ceil(red/k)+ceil(green/k)+ceil(blue/k))\u003c\u003cendl;\n    }\n}","score":1.0,"language":"cpp14"},{"contest":"T1M30UT","challenge":"Petya and Origami","code":"# include \u003ciostream\u003e\nusing namespace std;\n\nint main() {\n    int t; cin\u003e\u003et;\n    while(t--){\n    int n,k;\n    int res,cur;\n    cin\u003e\u003en\u003e\u003ek;\n    res=0;\n    cur=n*2;\n    res+=(cur+k-1)/k;\n    cur=n*5;\n    res+=(cur+k-1)/k;\n    cur=n*8;\n    res+=(cur+k-1)/k;\n    cout\u003c\u003cres\u003c\u003cendl;\n    } //from codeforces tutorial\n}","score":0.0,"language":"cpp14"},{"contest":"T1M30UT","challenge":"Petya and Origami","code":"# include \u003ciostream\u003e\nusing namespace std;\n\nint main() {\n    int t; cin\u003e\u003et;\n    while(t--){\n    long long n,k;\n    long long res,cur;\n    cin\u003e\u003en\u003e\u003ek;\n    res=0;\n    cur=n*2;\n    res+=(cur+k-1)/k;\n    cur=n*5;\n    res+=(cur+k-1)/k;\n    cur=n*8;\n    res+=(cur+k-1)/k;\n    cout\u003c\u003cres\u003c\u003cendl;\n    } //from codeforces tutorial\n}","score":1.0,"language":"cpp14"},{"contest":"preview dummy contest","challenge":"R3V3R5E C0D1NG 5","code":"#include \u003cbits/stdc++.h\u003e\n#define ll long long\nusing namespace std;\n\nint main() {\n    ios_base::sync_with_stdio(false);\n    cin.tie(NULL);\n\tll t; cin\u003e\u003et;\n\twhile(t--) {\n\t\tstring n; cin\u003e\u003en;\n\t\tfor(ll i=0;i\u003cn.length();i++) {\n\t\t\tfor(char j='1';j\u003c=n[i];j++)\n\t\t\t\tcout\u003c\u003c'*';\n\t\t\tcout\u003c\u003cendl;\n\t\t}\n\t}\n}\n","score":1.0,"language":"cpp"},{"contest":"preview dummy contest","challenge":"R3V3R5E C0D1NG 5","code":"#include \u003cbits/stdc++.h\u003e\n#define ll long long\nusing namespace std;\n\nint main() {\n    ll t; cin\u003e\u003et;\n    while(t--) {\n        string n; cin\u003e\u003en;\n        for(ll i=0;i\u003cn.length();i++) {\n            for(char j='1';j\u003c=n[i];j++)\n                cout\u003c\u003c'*';\n            cout\u003c\u003cendl;\n        }\n    }\n}\n","score":1.0,"language":"cpp"},{"contest":"preview dummy contest","challenge":"R3V3R5E C0D1NG 5","code":"#include \u003cbits/stdc++.h\u003e\n#define ll long long\nusing namespace std;\n\nint main() {\n    ios_base::sync_with_stdio(false);\n    cin.tie(NULL);\n\tll t; cin\u003e\u003et;\n\twhile(t--) {\n\t\tstring n; cin\u003e\u003en;\n\t\tfor(ll i=0;i\u003cn.length();i++) {\n\t\t\tfor(char j='1';j\u003c=n[i];j++)\n\t\t\t\tcout\u003c\u003c'*';\n\t\t\tcout\u003c\u003cendl;\n\t\t}\n\t}\n}\n","score":1.0,"language":"cpp"},{"contest":"preview dummy contest","challenge":"R3V3R5E C0D1NG 5","code":"#include \u003cbits/stdc++.h\u003e\n#define ll long long\nusing namespace std;\n\nint main() {\n    ll t; cin\u003e\u003et;\n    while(t--) {\n        string n; cin\u003e\u003en;\n        for(ll i=0;i\u003cn.length();i++) {\n            for(char j='1';j\u003c=n[i];j++)\n                cout\u003c\u003c'*';\n            cout\u003c\u003cendl;\n        }\n    }\n}","score":1.0,"language":"cpp"},{"contest":"R3V3R5E C0D1NG","challenge":"R3V3R5E C0D1NG 5","code":"#include \u003cbits/stdc++.h\u003e\nusing namespace std;\n\n\nint main() {\n    int t;\n    cin\u003e\u003et;\n    for(int i=0;i\u003ct;i++)\n    {\n        string c;\n        cin\u003e\u003ec;\n        for(int i=0;i\u003cc.size();i++)\n        {\n            int p=int(c[i])-'0';\n            for(int i=0;i\u003cp;i++)\n                cout\u003c\u003c'*';\n            cout\u003c\u003cendl;\n        }\n    }  \n    return 0;\n}","score":1.0,"language":"cpp"},{"contest":"R3V3R5E C0D1NG","challenge":"R3V3R5E C0D1NG 5","code":"#include \u003cbits/stdc++.h\u003e\nusing namespace std;\n\n\nint main() {\n    int t;\n    cin\u003e\u003et;\n    for(int i=0;i\u003ct;i++)\n    {\n        string c;\n        cin\u003e\u003ec;\n        for(int i=0;i\u003cc.size();i++)\n        {\n            int p=int(c[i])-'0';\n            for(int i=0;i\u003cp;i++)\n                cout\u003c\u003c'*';\n            cout\u003c\u003cendl;\n        }\n        cout\u003c\u003cendl;\n    }  \n    return 0;\n}","score":0.0,"language":"cpp"},{"contest":"T1M30UT","challenge":"Petya and Origami","code":"#include \u003cbits/stdc++.h\u003e\nusing namespace std;\n\nint main() {\n    int t; cin\u003e\u003et;\n    while(t--) {\n        double n,k;\n        cin\u003e\u003en\u003e\u003ek;\n        long long red=n*2,green=n*5,blue=n*8;\n        cout\u003c\u003c(long long)(ceil(red/k)+ceil(green/k)+ceil(blue/k))\u003c\u003cendl;\n    }\n}","score":1.0,"language":"cpp14"},{"contest":"T1M30UT","challenge":"Just make a triangle!","code":"#include\u003cbits/stdc++.h\u003e\n#define ll long long\nusing namespace std;\n\nint main() {\n    int t; cin\u003e\u003et;\n    while(t--) {\n        ll a,b,c; cin\u003e\u003ea\u003e\u003eb\u003e\u003ec;\n        cout\u003c\u003c(((max({a,b,c})+1-(a+b+c-max({a,b,c})))\u003e0)?(max({a,b,c})+1-(a+b+c-max({a,b,c}))):0)\u003c\u003cendl;\n    }\n}","score":1.0,"language":"cpp14"},{"contest":"T1M30UT","challenge":"Modified Kaprekar Numbers","code":"#include \u003cbits/stdc++.h\u003e\n\nusing namespace std;\n\nvector \u003cint\u003e kaprekarNumbers(int p, int q) {\n    vector \u003cint\u003e modifiedkaprekarnumbers;\n    long square,d;\n    for(int i=p;i\u003c=q;i++) {\n        square=pow(i,2);\n        d=log10(square)+1;\n        if(i==((square/(int)pow(10,(d+1)/2))+(square%(int)pow(10,(d+1)/2))))\n            modifiedkaprekarnumbers.push_back(i);\n    }\n    if(modifiedkaprekarnumbers.size()==0)\n        cout\u003c\u003c\"INVALID RANGE\";\n    return modifiedkaprekarnumbers;\n}\n\nint main() {\n    int p,q; cin\u003e\u003ep\u003e\u003eq;\n    vector\u003cint\u003e result=kaprekarNumbers(p,q);\n    for (int i=0;i\u003cresult.size();i++)\n        cout\u003c\u003cresult[i]\u003c\u003c\" \";\n    cout \u003c\u003c endl;\n    return 0;\n}","score":1.0,"language":"cpp14"},{"contest":"T1M30UT","challenge":"Fruits","code":"#include \u003cbits/stdc++.h\u003e\nusing namespace std;\n\n\nint main() {\n    int n,k,c=0,s=0;\n    cin\u003e\u003en\u003e\u003ek;\n    vector\u003cint\u003e v(n);\n    while(n--) cin\u003e\u003ev[n];\n    sort(v.begin(),v.end());\n    for(int i=0;i\u003cv.size() \u0026\u0026 s\u003c=k;i++) {\n        s+=v[i];\n        c++;\n    }\n    cout\u003c\u003cc-1\u003c\u003cendl;\n    return 0;\n}\n","score":1.0,"language":"cpp14"},{"contest":"T1M30UT","challenge":"Balanced Brackets","code":"#include \u003cbits/stdc++.h\u003e\n\nusing namespace std;\n\n// Complete the isBalanced function below.\nstring isBalanced(string s) {\n    stack\u003cchar\u003e c;\n    for(int i=0;i\u003cs.length();i++) {\n        if(s[i]=='{' || s[i]=='(' || s[i]=='[')\n            c.push(s[i]);\n        else if(!c.empty() \u0026\u0026 s[i]-c.top()\u003c3)\n            c.pop();\n        else\n            return \"NO\";\n    }\n    return \"YES\";\n}\n\nint main()\n{\n    ofstream fout(getenv(\"OUTPUT_PATH\"));\n\n    int t;\n    cin \u003e\u003e t;\n    cin.ignore(numeric_limits\u003cstreamsize\u003e::max(), '\\n');\n\n    for (int t_itr = 0; t_itr \u003c t; t_itr++) {\n        string s;\n        getline(cin, s);\n\n        string result = isBalanced(s);\n\n        fout \u003c\u003c result \u003c\u003c \"\\n\";\n    }\n\n    fout.close();\n\n    return 0;\n}\n","score":0.0,"language":"cpp14"},{"contest":"T1M30UT","challenge":"Balanced Brackets","code":"#include \u003cbits/stdc++.h\u003e\n\nusing namespace std;\n\n// Complete the isBalanced function below.\nstring isBalanced(string s) {\n    stack\u003cchar\u003e c;\n    for(int i=0;i\u003cs.length();i++) {\n        if(s[i]=='{' || s[i]=='(' || s[i]=='[')\n            c.push(s[i]);\n        else if(!c.empty() \u0026\u0026 s[i]-c.top()\u003c3)\n            c.pop();\n        else\n            return \"NO\";\n    }\n    if(c.empty())\n        return \"YES\";\n    else\n        return \"NO\";\n}\n\nint main()\n{\n    ofstream fout(getenv(\"OUTPUT_PATH\"));\n\n    int t;\n    cin \u003e\u003e t;\n    cin.ignore(numeric_limits\u003cstreamsize\u003e::max(), '\\n');\n\n    for (int t_itr = 0; t_itr \u003c t; t_itr++) {\n        string s;\n        getline(cin, s);\n\n        string result = isBalanced(s);\n\n        fout \u003c\u003c result \u003c\u003c \"\\n\";\n    }\n\n    fout.close();\n\n    return 0;\n}\n","score":1.0,"language":"cpp14"},{"contest":"T1M30UT","challenge":"Two Strings","code":"#include \u003cbits/stdc++.h\u003e\n\nusing namespace std;\n\n// Complete the twoStrings function below.\nstring twoStrings(string s1, string s2) {\n    bool alpha_s1[26]={0};\n    for(int i=0;i\u003cs1.length();i++)\n        alpha_s1[s1[i]-'a']=true;\n    for(int i=0;i\u003cs2.length();i++)\n        if(alpha_s1[s2[i]-'a'])\n            return \"YES\";\n    return \"NO\";\n}\n\nint main()\n{\n    ofstream fout(getenv(\"OUTPUT_PATH\"));\n\n    int q;\n    cin \u003e\u003e q;\n    cin.ignore(numeric_limits\u003cstreamsize\u003e::max(), '\\n');\n\n    for (int q_itr = 0; q_itr \u003c q; q_itr++) {\n        string s1;\n        getline(cin, s1);\n\n        string s2;\n        getline(cin, s2);\n\n        string result = twoStrings(s1, s2);\n\n        fout \u003c\u003c result \u003c\u003c \"\\n\";\n    }\n\n    fout.close();\n\n    return 0;\n}\n","score":1.0,"language":"cpp14"},{"contest":"T1M30UT","challenge":"The Power Sum","code":"#include \u003cbits/stdc++.h\u003e\n\nusing namespace std;\n\n// Complete the powerSum function below.\nint powerSum(int x, int n, int i=1) {\n    if(x==0 || pow(i,n)\u003ex) return x==0;\n    return powerSum(x-pow(i,n),n,i+1) + powerSum(x,n,i+1);\n}\n\nint main()\n{\n    ofstream fout(getenv(\"OUTPUT_PATH\"));\n\n    int X;\n    cin \u003e\u003e X;\n    cin.ignore(numeric_limits\u003cstreamsize\u003e::max(), '\\n');\n\n    int N;\n    cin \u003e\u003e N;\n    cin.ignore(numeric_limits\u003cstreamsize\u003e::max(), '\\n');\n\n    int result = powerSum(X, N);\n\n    fout \u003c\u003c result \u003c\u003c \"\\n\";\n\n    fout.close();\n\n    return 0;\n}\n","score":1.0,"language":"cpp14"},{"contest":"T1M30UT","challenge":"Equalize the Array","code":"#include \u003cbits/stdc++.h\u003e\n#define max(x) *max_element(x,x+101)\nusing namespace std;\n\nint main() {\n    int n,x; cin\u003e\u003en;\n    int N=n,dp[101]={0};\n    while(n--) {\n        cin\u003e\u003ex;\n        ++dp[x];\n    } cout\u003c\u003cN-max(dp)\u003c\u003cendl;\n}\n","score":1.0,"language":"cpp14"},{"contest":"T1M30UT","challenge":"Akhil and GF","code":"#include \u003cbits/stdc++.h\u003e\nusing namespace std;\n\nvector\u003cstring\u003e split_string(string);\n\n// Complete the solve function below.\nint solve(long n, int m) {\n    int num=1; vector\u003cint\u003e initial,loop;\n    for(int i=0;i\u003c=log10(m);i++) {\n        initial.push_back(num); \n        cout\u003c\u003c\"i\"\u003c\u003cnum\u003c\u003c\" \";\n        num=(num*10+1)%m;\n    } loop.push_back(num);\n    cout\u003c\u003c\"l\"\u003c\u003cnum\u003c\u003c\" \";\n    num=(num*10+1)%m;\n    while(num!=loop[0]) {\n        loop.push_back(num);\n        cout\u003c\u003c\"l\"\u003c\u003cnum\u003c\u003c\" \";\n        num=(num*10+1)%m;\n    }\n    cout\u003c\u003cendl;\n    if(n\u003c=initial.size())\n        return initial[n-1];\n    else\n        return loop[(n-initial.size()-1)%loop.size()];\n}\n\nint main()\n{\n    ofstream fout(getenv(\"OUTPUT_PATH\"));\n\n    int t;\n    cin \u003e\u003e t;\n    cin.ignore(numeric_limits\u003cstreamsize\u003e::max(), '\\n');\n\n    for (int t_itr = 0; t_itr \u003c t; t_itr++) {\n        string nm_temp;\n        getline(cin, nm_temp);\n\n        vector\u003cstring\u003e nm = split_string(nm_temp);\n\n        long n = stol(nm[0]);\n\n        int m = stoi(nm[1]);\n\n        int result = solve(n, m);\n\n        fout \u003c\u003c result \u003c\u003c \"\\n\";\n    }\n\n    fout.close();\n\n    return 0;\n}\n\nvector\u003cstring\u003e split_string(string input_string) {\n    string::iterator new_end = unique(input_string.begin(), input_string.end(), [] (const char \u0026x, const char \u0026y) {\n        return x == y and x == ' ';\n    });\n\n    input_string.erase(new_end, input_string.end());\n\n    while (input_string[input_string.length() - 1] == ' ') {\n        input_string.pop_back();\n    }\n\n    vector\u003cstring\u003e splits;\n    char delimiter = ' ';\n\n    size_t i = 0;\n    size_t pos = input_string.find(delimiter);\n\n    while (pos != string::npos) {\n        splits.push_back(input_string.substr(i, pos - i));\n\n        i = pos + 1;\n        pos = input_string.find(delimiter, i);\n    }\n\n    splits.push_back(input_string.substr(i, min(pos, input_string.length()) - i + 1));\n\n    return splits;\n}\n","score":0.0,"language":"cpp14"},{"contest":"T1M30UT","challenge":"Akhil and GF","code":"#include \u003cbits/stdc++.h\u003e\n\nusing namespace std;\n\nvector\u003cstring\u003e split_string(string);\n\n// Complete the solve function below.\nint solve(long n, int m) {\n    int num = 1;\n    vector\u003cint\u003e initial, loop;\n    for (int i = 0; i \u003c= log10(m); i++) {\n        initial.push_back(num);\n        // cout \u003c\u003c \"i\" \u003c\u003c num \u003c\u003c \" \";\n        num = (num * 10 + 1) % m;\n    }\n    loop.push_back(num);\n    // cout \u003c\u003c \"l\" \u003c\u003c num \u003c\u003c \" \";\n    num = (num * 10 + 1) % m;\n    while (num != loop[0]) {\n        loop.push_back(num);\n        // cout \u003c\u003c \"l\" \u003c\u003c num \u003c\u003c \" \";\n        num = (num * 10 + 1) % m;\n    }\n    // cout \u003c\u003c endl;\n    if (n \u003c= initial.size())\n        return initial[n - 1];\n    else\n        return loop[(n - initial.size() - 1) % loop.size()];\n}\n\nint main()\n{\n    ofstream fout(getenv(\"OUTPUT_PATH\"));\n\n    int t;\n    cin \u003e\u003e t;\n    cin.ignore(numeric_limits\u003cstreamsize\u003e::max(), '\\n');\n\n    for (int t_itr = 0; t_itr \u003c t; t_itr++) {\n        string nm_temp;\n        getline(cin, nm_temp);\n\n        vector\u003cstring\u003e nm = split_string(nm_temp);\n\n        long n = stol(nm[0]);\n\n        int m = stoi(nm[1]);\n\n        int result = solve(n, m);\n\n        fout \u003c\u003c result \u003c\u003c \"\\n\";\n    }\n\n    fout.close();\n\n    return 0;\n}\n\nvector\u003cstring\u003e split_string(string input_string) {\n    string::iterator new_end = unique(input_string.begin(), input_string.end(), [] (const char \u0026x, const char \u0026y) {\n        return x == y and x == ' ';\n    });\n\n    input_string.erase(new_end, input_string.end());\n\n    while (input_string[input_string.length() - 1] == ' ') {\n        input_string.pop_back();\n    }\n\n    vector\u003cstring\u003e splits;\n    char delimiter = ' ';\n\n    size_t i = 0;\n    size_t pos = input_string.find(delimiter);\n\n    while (pos != string::npos) {\n        splits.push_back(input_string.substr(i, pos - i));\n\n        i = pos + 1;\n        pos = input_string.find(delimiter, i);\n    }\n\n    splits.push_back(input_string.substr(i, min(pos, input_string.length()) - i + 1));\n\n    return splits;\n}\n","score":0.0,"language":"cpp14"},{"contest":"R3V3R5E C0D1NG","challenge":"R3V3R5E C0D1NG 5","code":"#include \u003cbits/stdc++.h\u003e\n#define ll long long\nusing namespace std;\n\nint main() {\n    ll t; cin\u003e\u003et;\n    while(t--) {\n        string n; cin\u003e\u003en;\n        for(ll i=0;i\u003cn.length();i++) {\n            for(char j='1';j\u003c=n[i];j++)\n                cout\u003c\u003c'*';\n            cout\u003c\u003cendl;\n        }\n    }\n}","score":1.0,"language":"cpp14"},{"contest":"preview dummy contest","challenge":"Maira's birthday challange","code":"#include \u003cbits/stdc++.h\u003e\n#define MAX 100000\nusing namespace std;\n\nint main() {\n    int t,n,x; cin \u003e\u003e t;\n    while(t--){\n        int freq[MAX+1]={0};\n        cin \u003e\u003e n;\n        while(n--){\n            cin \u003e\u003e x;\n            ++freq[x];\n        }\n        for(int i=0;i\u003c=MAX;i++)\n            while(freq[i]--)\n                cout\u003c\u003ci\u003c\u003c\" \";\n        cout\u003c\u003cendl;\n    }\n}","score":1.0,"language":"cpp14"},{"contest":"preview dummy contest","challenge":"Maira's birthday challange","code":"#include \u003cbits/stdc++.h\u003e\n#define MAX 100000\nusing namespace std;\n\nint main() {\n    int t,n,x; cin \u003e\u003e t;\n    while(t--){\n        vector\u003cint\u003e arr;\n        cin \u003e\u003e n;\n        while(n--) {\n            cin \u003e\u003e x;\n            arr.push_back(x);\n        }\n        sort(arr.begin(),arr.end());\n        for(int i=0;i\u003carr.size();i++)\n            cout\u003c\u003carr[i]\u003c\u003c\" \";\n        cout\u003c\u003cendl;\n    }\n}","score":1.0,"language":"cpp14"},{"contest":"preview dummy contest","challenge":"Buying Chocolates 1","code":"#include \u003ciostream\u003e\nusing namespace std;\n\nint main() {\n    int t; cin\u003e\u003et;\n    while(t--) {\n        long long n,k;\n        cin\u003e\u003en\u003e\u003ek;\n        cout\u003c\u003cmax(0LL,(k-1)/2-max(0LL,k-n-1))\u003c\u003cendl;\n    }\n}","score":1.0,"language":"cpp14"},{"contest":"preview dummy contest","challenge":"The High Triangle","code":"#include\u003cbits/stdc++.h\u003e\n#define ll long long\nusing namespace std;\n\nint main() {\n    int t; cin\u003e\u003et;\n    while(t--) {\n        ll a,b,c; cin\u003e\u003ea\u003e\u003eb\u003e\u003ec;\n        cout\u003c\u003c(((max({a,b,c})+1-(a+b+c-max({a,b,c})))\u003e0)?(max({a,b,c})+1-(a+b+c-max({a,b,c}))):0)\u003c\u003cendl;\n    }\n}","score":1.0,"language":"cpp14"},{"contest":"preview dummy contest","challenge":"Save Abhinav from detention","code":"#include\u003cbits/stdc++.h\u003e\nusing namespace std;\ntypedef long long ll;\n#define rep(a) for(int i=0;i\u003ca;i++)\n#define loop(i,a,b) for(int i=a;i\u003cb;i++)\n#define rloop(i,b,a) for(int i=b;i\u003ea;i--)\n#define pans(a) cout\u003c\u003ca\u003c\u003cendl\n#define fr() freopen(\"input.txt\", \"r\", stdin)\n#define fr2() freopen(\"ouput.txt\", \"w\", stdout)\n#define pb push_back\n#define mp make_pair\n#define fi first\n#define se second\nconst int mod=1e9+7;\n// inline int sc() { int ip = getchar_unlocked(), ret = 0, flag = 1;\n// for (;ip\u003c'0' || ip\u003e'9';ip = getchar_unlocked())\n// if (ip == '-')\n// { flag = -1;ip = getchar_unlocked();break; }\n// for (;ip \u003e= '0'\u0026\u0026ip \u003c= '9';ip = getchar_unlocked())ret = ret * 10 + ip - '0';\n// return flag*ret; }\n \n \nint main() {\n    int test; cin\u003e\u003etest; while(test--) {\n        int n; cin\u003e\u003en;\n        int a; int zeroCnt=0,oneCnt=0,minusOne=0,others=0;\n        rep(n) {\n            cin\u003e\u003ea;\n            if(a==0) zeroCnt++;\n            else if(a==1) oneCnt++;\n            else if(a==-1) minusOne++;\n            else others++;\n        }\n        if(others\u003e1) printf(\"not awesome\\n\");\n        else if(minusOne \u0026\u0026 others) printf(\"not awesome\\n\");\n        else if(minusOne\u003e1 \u0026\u0026 !oneCnt) printf(\"not awesome\\n\");\n        else printf(\"awesome\\n\");\n    }\nreturn 0;\n}","score":0.0,"language":"cpp14"},{"contest":"preview dummy contest","challenge":"Save Abhinav from detention","code":"#include\u003cbits/stdc++.h\u003e\nusing namespace std;\ntypedef long long ll;\n#define rep(a) for(int i=0;i\u003ca;i++)\n#define loop(i,a,b) for(int i=a;i\u003cb;i++)\n#define rloop(i,b,a) for(int i=b;i\u003ea;i--)\n#define pans(a) cout\u003c\u003ca\u003c\u003cendl\n#define fr() freopen(\"input.txt\", \"r\", stdin)\n#define fr2() freopen(\"ouput.txt\", \"w\", stdout)\n#define pb push_back\n#define mp make_pair\n#define fi first\n#define se second\nconst int mod=1e9+7;\n// inline int sc() { int ip = getchar_unlocked(), ret = 0, flag = 1;\n// for (;ip\u003c'0' || ip\u003e'9';ip = getchar_unlocked())\n// if (ip == '-')\n// { flag = -1;ip = getchar_unlocked();break; }\n// for (;ip \u003e= '0'\u0026\u0026ip \u003c= '9';ip = getchar_unlocked())ret = ret * 10 + ip - '0';\n// return flag*ret; }\n \n \nint main() {\n    ios_base::sync_with_stdio(false);\n    cin.tie(NULL);\n    int test; cin\u003e\u003etest; while(test--) {\n        int n; cin\u003e\u003en;\n        int a; int zeroCnt=0,oneCnt=0,minusOne=0,others=0;\n        rep(n) {\n            cin\u003e\u003ea;\n            if(a==0) zeroCnt++;\n            else if(a==1) oneCnt++;\n            else if(a==-1) minusOne++;\n            else others++;\n        }\n        if(others\u003e1) printf(\"not awesome\\n\");\n        else if(minusOne \u0026\u0026 others) printf(\"not awesome\\n\");\n        else if(minusOne\u003e1 \u0026\u0026 !oneCnt) printf(\"not awesome\\n\");\n        else printf(\"awesome\\n\");\n    }\nreturn 0;\n}","score":0.0,"language":"cpp14"},{"contest":"preview dummy contest","challenge":"Save Abhinav from detention","code":"#include\u003cbits/stdc++.h\u003e\nusing namespace std;\ntypedef long long ll;\n#define rep(a) for(int i=0;i\u003ca;i++)\n#define loop(i,a,b) for(int i=a;i\u003cb;i++)\n#define rloop(i,b,a) for(int i=b;i\u003ea;i--)\n#define pans(a) cout\u003c\u003ca\u003c\u003cendl\n#define fr() freopen(\"input.txt\", \"r\", stdin)\n#define fr2() freopen(\"ouput.txt\", \"w\", stdout)\n#define pb push_back\n#define mp make_pair\n#define fi first\n#define se second\nconst int mod=1e9+7;\n// inline int sc() { int ip = getchar_unlocked(), ret = 0, flag = 1;\n// for (;ip\u003c'0' || ip\u003e'9';ip = getchar_unlocked())\n// if (ip == '-')\n// { flag = -1;ip = getchar_unlocked();break; }\n// for (;ip \u003e= '0'\u0026\u0026ip \u003c= '9';ip = getchar_unlocked())ret = ret * 10 + ip - '0';\n// return flag*ret; }\n \n \nint main() {\n    int test; cin\u003e\u003etest; while(test--) {\n        int n; cin\u003e\u003en;\n        int a; int zeroCnt=0,oneCnt=0,minusOne=0,others=0;\n        rep(n) {\n            cin\u003e\u003ea;\n            if(a==0) zeroCnt++;\n            else if(a==1) oneCnt++;\n            else if(a==-1) minusOne++;\n            else others++;\n        }\n        if(others\u003e1) printf(\"not awesome\\n\");\n        else if(minusOne \u0026\u0026 others) printf(\"not awesome\\n\");\n        else if(minusOne\u003e1 \u0026\u0026 !oneCnt) printf(\"not awesome\\n\");\n        else printf(\"awesome\\n\");\n    }\nreturn 0;\n}","score":1.0,"language":"cpp14"},{"contest":"Master","challenge":"Day 0: Hello, World.","code":"int main() {\n    // Declare a variable named 'input_string' to hold our input.\n    char input_string[105]; \n    \n    // Read a full line of input from stdin and save it to our variable, input_string.\n    scanf(\"%[^\\n]\", input_string); \n    \n    // Print a string literal saying \"Hello, World.\" to stdout using printf.\n    printf(\"Hello, World.\\n\");\n    \n    // TODO: Write a line of code here that prints the contents of input_string to stdout.\n    printf(\"%s\",input_string);\n    \n    return 0;\n}","score":1.0,"language":"c"},{"contest":"Master","challenge":"Day 0: Hello, World.","code":"int main() {\n    // Declare a variable named 'input_string' to hold our input.\n    char input_string[105]; \n    \n    // Read a full line of input from stdin and save it to our variable, input_string.\n    scanf(\"%[^\\n]\", input_string); \n    \n    // Print a string literal saying \"Hello, World.\" to stdout using printf.\n    printf(\"Hello, World.\\n\");\n    \n    // TODO: Write a line of code here that prints the contents of input_string to stdout.\n    printf(\"%s\",input_string);\n    \n    return 0;\n}","score":1.0,"language":"c"},{"contest":"Master","challenge":"Day 1: Data Types","code":"    \n    // Declare second integer, double, and String variables.\n    int a;double b;char c[10000];\n    \n    // Read and save an integer, double, and String to your variables.\n    scanf(\"%d %lf %[^\\n]s\",\u0026a,\u0026b,c);\n    \n    // Print the sum of both integer variables on a new line.\n    printf(\"%d\\n%.1lf\\n%s%s\",i+a,d+b,s,c);\n    \n    // Print the sum of the double variables on a new line.\n    \n    // Concatenate and print the String variables on a new line\n    // The 's' variable above should be printed first.\n    \n\n","score":1.0,"language":"c"},{"contest":"Master","challenge":"Day 2: Operators","code":"#include \u003cmath.h\u003e\n#include \u003cstdio.h\u003e\n#include \u003cstring.h\u003e\n#include \u003cstdlib.h\u003e\n#include \u003cassert.h\u003e\n#include \u003climits.h\u003e\n#include \u003cstdbool.h\u003e\n\nint main() {\n    double meal_cost; \n    scanf(\"%lf\", \u0026meal_cost);\n    int tip_percent; \n    scanf(\"%i\", \u0026tip_percent);\n    int tax_percent; \n    scanf(\"%i\", \u0026tax_percent);\n    double total_cost=meal_cost+(tip_percent/100*meal_cost)+(tax_percent/100*meal_cost);\n    printf(\"The total meal cost is %d dollars.\",(int)total_cost);\n    return 0;\n}","score":0.0,"language":"c"},{"contest":"Master","challenge":"Day 2: Operators","code":"#include \u003cmath.h\u003e\n#include \u003cstdio.h\u003e\n#include \u003cstring.h\u003e\n#include \u003cstdlib.h\u003e\n#include \u003cassert.h\u003e\n#include \u003climits.h\u003e\n#include \u003cstdbool.h\u003e\n\nint main() {\n    double meal_cost; \n    scanf(\"%lf\", \u0026meal_cost);\n    int tip_percent; \n    scanf(\"%i\", \u0026tip_percent);\n    int tax_percent; \n    scanf(\"%i\", \u0026tax_percent);\n    double total_cost=meal_cost+((double)tip_percent/100*meal_cost)+((double)tax_percent/100*meal_cost);\n    printf(\"The total meal cost is %d dollars.\",(int)total_cost);\n    return 0;\n}","score":0.5,"language":"c"},{"contest":"Master","challenge":"Day 2: Operators","code":"#include \u003cmath.h\u003e\n#include \u003cstdio.h\u003e\n#include \u003cstring.h\u003e\n#include \u003cstdlib.h\u003e\n#include \u003cassert.h\u003e\n#include \u003climits.h\u003e\n#include \u003cstdbool.h\u003e\n\nint main() {\n    double meal_cost; \n    scanf(\"%lf\", \u0026meal_cost);\n    int tip_percent; \n    scanf(\"%i\", \u0026tip_percent);\n    int tax_percent; \n    scanf(\"%i\", \u0026tax_percent);\n    double total_cost=meal_cost+(((double)tip_percent+(double)tax_percent)/100*meal_cost);\n    if(!(total_cost-(int)total_cost\u003c0.5))\n        total_cost=total_cost+1;\n    printf(\"The total meal cost is %d dollars.\",(int)total_cost);\n    return 0;\n}","score":1.0,"language":"c"},{"contest":"Master","challenge":"Day 3: Intro to Conditional Statements","code":"#include \u003cmath.h\u003e\n#include \u003cstdio.h\u003e\n#include \u003cstring.h\u003e\n#include \u003cstdlib.h\u003e\n#include \u003cassert.h\u003e\n#include \u003climits.h\u003e\n#include \u003cstdbool.h\u003e\n\nint main(){\n    int N; \n    scanf(\"%d\",\u0026N);\n    if(N%2==0)\n    {\n        if(N\u003e=6 \u0026\u0026 N\u003c=20)\n            printf(\"Weird\");\n        else\n            printf(\"Not Weird\");\n    }\n    else\n        printf(\"Weird\");\n    return 0;\n}\n","score":1.0,"language":"c"},{"contest":"Master","challenge":"Day 25: Running Time and Complexity","code":"#include \u003ccmath\u003e\n#include \u003ccstdio\u003e\n#include \u003cvector\u003e\n#include \u003ciostream\u003e\n#include \u003calgorithm\u003e\nusing namespace std;\n\nint chkprime(int p)\n{\n\tint i=0,j;\n\tfor(j=2;j\u003cp;j++)\n\tif(p%j==0 \u0026\u0026 ++i)\n\tbreak;\n\treturn (i==0?1:0);\n}\n\nint main() {\n    /* Enter your code here. Read input from STDIN. Print output to STDOUT */   \n    int t,n;\n    scanf(\"%d\",\u0026t);\n    while(t--)\n    {\n        scanf(\"%d\",\u0026n);\n        if(chkprime(n))\n            printf(\"Prime\\n\");\n        else\n            printf(\"Not prime\\n\");\n    }\n    return 0;\n}\n","score":0.134615384615,"language":"cpp"},{"contest":"Master","challenge":"Day 25: Running Time and Complexity","code":"#include \u003ccmath\u003e\n#include \u003ccstdio\u003e\n#include \u003cvector\u003e\n#include \u003ciostream\u003e\n#include \u003calgorithm\u003e\nusing namespace std;\n\nint chkprime(int p)\n{\n\tint i=0,j;\n\tfor(j=2;j\u003c=p/2;j++)\n\tif(p%j==0 \u0026\u0026 ++i)\n\tbreak;\n\treturn (i==0?1:0);\n}\n\nint main() {\n    /* Enter your code here. Read input from STDIN. Print output to STDOUT */   \n    int t,n;\n    scanf(\"%d\",\u0026t);\n    while(t--)\n    {\n        scanf(\"%d\",\u0026n);\n        if(chkprime(n))\n            printf(\"Prime\\n\");\n        else\n            printf(\"Not prime\\n\");\n    }\n    return 0;\n}\n","score":0.375,"language":"cpp"},{"contest":"Master","challenge":"Day 25: Running Time and Complexity","code":"#include \u003ccmath\u003e\n#include \u003ccstdio\u003e\n#include \u003cvector\u003e\n#include \u003ciostream\u003e\n#include \u003calgorithm\u003e\nusing namespace std;\n\nint chkprime(int p)\n{\n\tint i=0,j;\n\tfor(j=2;j\u003c=p/2;j++)\n\tif(p%j==0 \u0026\u0026 ++i)\n\tbreak;\n\treturn (i==0?(p==1?0:1):0);\n}\n\nint main() {\n    /* Enter your code here. Read input from STDIN. Print output to STDOUT */   \n    int t,n;\n    scanf(\"%d\",\u0026t);\n    while(t--)\n    {\n        scanf(\"%d\",\u0026n);\n        if(chkprime(n))\n            printf(\"Prime\\n\");\n        else\n            printf(\"Not prime\\n\");\n    }\n    return 0;\n}\n","score":0.519230769231,"language":"cpp"},{"contest":"Master","challenge":"Day 25: Running Time and Complexity","code":"#include \u003ccmath\u003e\n#include \u003ccstdio\u003e\n#include \u003cvector\u003e\n#include \u003ciostream\u003e\n#include \u003calgorithm\u003e\nusing namespace std;\n\nint chkprime(int p)\n{\n\tint i=0,j;\n\tfor(j=3;j\u003c=sqrt(p);j+=2)\n\tif(p%j==0 \u0026\u0026 ++i)\n\tbreak;\n\treturn (i==0?((p==1 || p==2)?0:1):0);\n}\n\nint main() {\n    /* Enter your code here. Read input from STDIN. Print output to STDOUT */   \n    int t,n;\n    scanf(\"%d\",\u0026t);\n    while(t--)\n    {\n        scanf(\"%d\",\u0026n);\n        if(chkprime(n))\n            printf(\"Prime\\n\");\n        else\n            printf(\"Not prime\\n\");\n    }\n    return 0;\n}\n","score":0.317307692308,"language":"cpp"},{"contest":"Master","challenge":"Day 25: Running Time and Complexity","code":"#include \u003ccmath\u003e\n#include \u003ccstdio\u003e\n#include \u003cvector\u003e\n#include \u003ciostream\u003e\n#include \u003calgorithm\u003e\nusing namespace std;\n\nint chkprime(int p)\n{\n\tint i=0,j;\n\tfor(j=3;j\u003c=sqrt(p);j=j+2)\n\tif(p%j==0 \u0026\u0026 ++i)\n\tbreak;\n\treturn (i==0?((p==0 || p==1 || p==2)?0:1):0);\n}\n\nint main() {\n    /* Enter your code here. Read input from STDIN. Print output to STDOUT */   \n    int t,n;\n    scanf(\"%d\",\u0026t);\n    while(t--)\n    {\n        scanf(\"%d\",\u0026n);\n        if(chkprime(n))\n            printf(\"Prime\\n\");\n        else\n            printf(\"Not prime\\n\");\n    }\n    return 0;\n}\n","score":0.317307692308,"language":"cpp"},{"contest":"Master","challenge":"Day 25: Running Time and Complexity","code":"#include \u003ccmath\u003e\n#include \u003ccstdio\u003e\n#include \u003cvector\u003e\n#include \u003ciostream\u003e\n#include \u003calgorithm\u003e\nusing namespace std;\n\nint chkprime(int p)\n{\n\tint i=0,j;\n\tfor(j=2;j\u003c=p/2;j++)\n\tif(p%j==0 \u0026\u0026 ++i)\n\tbreak;\n\treturn (i==0?(p==1?0:1):0);\n}\n\nint main() {\n    /* Enter your code here. Read input from STDIN. Print output to STDOUT */   \n    int t,n;\n    scanf(\"%d\",\u0026t);\n    while(t--)\n    {\n        scanf(\"%d\",\u0026n);\n        if(chkprime(n))\n            printf(\"Prime\\n\");\n        else\n            printf(\"Not prime\\n\");\n    }\n    return 0;\n}\n","score":0.519230769231,"language":"cpp"},{"contest":"Master","challenge":"Day 25: Running Time and Complexity","code":"#include \u003ccmath\u003e\n#include \u003ccstdio\u003e\n#include \u003cvector\u003e\n#include \u003ciostream\u003e\n#include \u003calgorithm\u003e\nusing namespace std;\n\nint chkprime(int p)\n{\n\tint i=0,j;\n    if(p\u003e2 \u0026\u0026 p%2==0)\n        return 0;\n\tfor(j=3;j\u003c=p/2;j+=2)\n\tif(p%j==0 \u0026\u0026 ++i)\n\tbreak;\n\treturn (i==0?(p\u003c3?0:1):0);\n}\n\nint main() {\n    /* Enter your code here. Read input from STDIN. Print output to STDOUT */   \n    int t,n;\n    scanf(\"%d\",\u0026t);\n    while(t--)\n    {\n        scanf(\"%d\",\u0026n);\n        if(chkprime(n))\n            printf(\"Prime\\n\");\n        else\n            printf(\"Not prime\\n\");\n    }\n    return 0;\n}\n","score":0.951923076923,"language":"cpp"},{"contest":"Master","challenge":"Day 25: Running Time and Complexity","code":"#include \u003ccmath\u003e\n#include \u003ccstdio\u003e\n#include \u003cvector\u003e\n#include \u003ciostream\u003e\n#include \u003calgorithm\u003e\nusing namespace std;\n\nint chkprime(int p)\n{\n\tint i=0,j;\n    if(p\u003e2 \u0026\u0026 p%2==0)\n        return 0;\n\tfor(j=3;j\u003cp/2;j+=2)\n\tif(p%j==0 \u0026\u0026 ++i)\n\tbreak;\n\treturn (i==0?(p\u003c3?0:1):0);\n}\n\nint main() {\n    /* Enter your code here. Read input from STDIN. Print output to STDOUT */   \n    int t,n;\n    scanf(\"%d\",\u0026t);\n    while(t--)\n    {\n        scanf(\"%d\",\u0026n);\n        if(chkprime(n))\n            printf(\"Prime\\n\");\n        else\n            printf(\"Not prime\\n\");\n    }\n    return 0;\n}\n","score":0.951923076923,"language":"cpp"},{"contest":"Master","challenge":"Day 25: Running Time and Complexity","code":"#include \u003ccmath\u003e\n#include \u003ccstdio\u003e\n#include \u003cvector\u003e\n#include \u003ciostream\u003e\n#include \u003calgorithm\u003e\nusing namespace std;\n\nint chkprime(int p)\n{\n\tint i=0,j;\n    if(p%2==0 \u0026\u0026 p\u003e2)\n        return 0;\n\tfor(j=3;j\u003c=p/2;j+=2)\n\tif(p%j==0 \u0026\u0026 ++i)\n\tbreak;\n\treturn (i==0?(p==1?0:1):0);\n}\n\nint main() {\n    /* Enter your code here. Read input from STDIN. Print output to STDOUT */   \n    int t,n;\n    scanf(\"%d\",\u0026t);\n    while(t--)\n    {\n        scanf(\"%d\",\u0026n);\n        if(chkprime(n))\n            printf(\"Prime\\n\");\n        else\n            printf(\"Not prime\\n\");\n    }\n    return 0;\n}\n","score":1.0,"language":"cpp"},{"contest":"Master","challenge":"Day 25: Running Time and Complexity","code":"#include \u003ccmath\u003e\n#include \u003ccstdio\u003e\n#include \u003cvector\u003e\n#include \u003ciostream\u003e\n#include \u003calgorithm\u003e\nusing namespace std;\n\nint chkprime(int p)\n{\n\tint i=0,j;\n    if(p%2==0 \u0026\u0026 p\u003e2)\n        return 0;\n\tfor(j=3;j\u003c=sqrt(p);j+=2)\n\tif(p%j==0 \u0026\u0026 ++i)\n\tbreak;\n\treturn (i==0?(p==1?0:1):0);\n}\n\nint main() {\n    /* Enter your code here. Read input from STDIN. Print output to STDOUT */   \n    int t,n;\n    scanf(\"%d\",\u0026t);\n    while(t--)\n    {\n        scanf(\"%d\",\u0026n);\n        if(chkprime(n))\n            printf(\"Prime\\n\");\n        else\n            printf(\"Not prime\\n\");\n    }\n    return 0;\n}\n","score":1.0,"language":"cpp"},{"contest":"Master","challenge":"Day 5: Loops","code":"#include \u003cmap\u003e\n#include \u003cset\u003e\n#include \u003clist\u003e\n#include \u003ccmath\u003e\n#include \u003cctime\u003e\n#include \u003cdeque\u003e\n#include \u003cqueue\u003e\n#include \u003cstack\u003e\n#include \u003cstring\u003e\n#include \u003cbitset\u003e\n#include \u003ccstdio\u003e\n#include \u003climits\u003e\n#include \u003cvector\u003e\n#include \u003cclimits\u003e\n#include \u003ccstring\u003e\n#include \u003ccstdlib\u003e\n#include \u003cfstream\u003e\n#include \u003cnumeric\u003e\n#include \u003csstream\u003e\n#include \u003ciostream\u003e\n#include \u003calgorithm\u003e\n#include \u003cunordered_map\u003e\n\nusing namespace std;\n\n\nint main(){\n    int n;\n    cin \u003e\u003e n;\n    for(int i=1;i\u003c11;i++)\n        cout\u003c\u003cn\u003c\u003c\" x \"\u003c\u003ci\u003c\u003c\" = \"\u003c\u003cn*i\u003c\u003c\"\\n\";\n    return 0;\n}\n","score":1.0,"language":"cpp"},{"contest":"Master","challenge":"Day 6: Let's Review","code":"#include \u003ccmath\u003e\n#include \u003ccstdio\u003e\n#include \u003cvector\u003e\n#include \u003ciostream\u003e\n#include \u003calgorithm\u003e\nusing namespace std;\n\n\nint main() {\n    /* Enter your code here. Read input from STDIN. Print output to STDOUT */   \n    int i,t;\n    cin \u003e\u003e t;\n    while(t--)\n    {\n        string str;\n        cin \u003e\u003e str;\n        for(i=0;i\u003cstr.length();i+=2)\n            cout \u003c\u003c str[i];\n        cout \u003c\u003c \" \";\n        for(i=1;i\u003cstr.length();i+=2)\n            cout \u003c\u003c str[i];\n        cout \u003c\u003c \"\\n\";\n    }\n    return 0;\n}\n","score":1.0,"language":"cpp14"},{"contest":"Master","challenge":"Day 7: Arrays","code":"#include \u003cmap\u003e\n#include \u003cset\u003e\n#include \u003clist\u003e\n#include \u003ccmath\u003e\n#include \u003cctime\u003e\n#include \u003cdeque\u003e\n#include \u003cqueue\u003e\n#include \u003cstack\u003e\n#include \u003cstring\u003e\n#include \u003cbitset\u003e\n#include \u003ccstdio\u003e\n#include \u003climits\u003e\n#include \u003cvector\u003e\n#include \u003cclimits\u003e\n#include \u003ccstring\u003e\n#include \u003ccstdlib\u003e\n#include \u003cfstream\u003e\n#include \u003cnumeric\u003e\n#include \u003csstream\u003e\n#include \u003ciostream\u003e\n#include \u003calgorithm\u003e\n#include \u003cunordered_map\u003e\n\nusing namespace std;\n\n\nint main(){\n    int n;\n    cin \u003e\u003e n;\n    vector\u003cint\u003e arr(n);\n    for(int arr_i = 0;arr_i \u003c n;arr_i++){\n       cin \u003e\u003e arr[arr_i];\n    }\n    for(int arr_i = n-1;arr_i \u003e= 0;arr_i--){\n       cout \u003c\u003c arr[arr_i] \u003c\u003c \" \";\n    }\n    return 0;\n}\n","score":1.0,"language":"cpp14"},{"contest":"Master","challenge":"Day 4: Class vs. Instance","code":"class Person{\n    public:\n        int age;\n        Person(int initialAge);\n        void amIOld();\n        void yearPasses();\n    };\n\n    Person::Person(int initialAge){\n        // Add some more code to run some checks on initialAge\n\n    }\n\n    void Person::amIOld(){\n        // Do some computations in here and print out the correct statement to the console \n\n    }\n\n    void Person::yearPasses(){\n        // Increment the age of the person in here\n\n    }","score":0.0,"language":"cpp14"},{"contest":"Master","challenge":"Day 9: Recursion 3  ","code":"#include \u003ccmath\u003e\n#include \u003ccstdio\u003e\n#include \u003cvector\u003e\n#include \u003ciostream\u003e\n#include \u003calgorithm\u003e\nusing namespace std;\n\nint factorial(int n)\n{\n    if(n \u003e 1)\n        return n * factorial(n - 1);\n    else\n        return 1;\n}\n\nint main() {\n    /* Enter your code here. Read input from STDIN. Print output to STDOUT */   \n    int n;\n    cin \u003e\u003e n;\n    cout \u003c\u003c factorial(n);\n    return 0;\n}\n","score":1.0,"language":"cpp14"},{"contest":"Master","challenge":"Day 27: Testing","code":"#include \u003cstdio.h\u003e\nint main()\n{\n    printf(\"5\\n\");\n    printf(\"4 3\\n\");\n    printf(\"-1 -3 4 2\\n\");\n    printf(\"5 2\\n\");\n    printf(\"0 -1 2 1 4\\n\");\n    printf(\"4 3\\n\");\n    printf(\"-1 -3 4 2\\n\");\n    printf(\"5 2\\n\");\n    printf(\"0 -1 2 1 4\\n\");\n    printf(\"4 3\\n\");\n    printf(\"-1 -3 4 2\\n\");\n}","score":0.20000000298,"language":"c"},{"contest":"Master","challenge":"Day 27: Testing","code":"#include \u003cstdio.h\u003e\nint main()\n{\n    printf(\"5\\n\");\n    printf(\"4 3\\n\");\n    printf(\"-1 -3 4 2\\n\");\n    printf(\"5 2\\n\");\n    printf(\"0 -1 2 1 4\\n\");\n    printf(\"4 3\\n\");\n    printf(\"-1 -3 4 2\\n\");\n    printf(\"5 2\\n\");\n    printf(\"0 -1 2 1 4\\n\");\n    printf(\"4 3\\n\");\n    printf(\"-1 -3 4 2\\n\");\n}","score":0.20000000298,"language":"c"},{"contest":"Master","challenge":"Day 27: Testing","code":"#include \u003cstdio.h\u003e\nint main()\n{\n    printf(\"5\\n\");\n    printf(\"4 3\\n\");\n    printf(\"-1 -3 4 2\\n\");\n    printf(\"5 2\\n\");\n    printf(\"0 -1 2 1 4\\n\");\n    printf(\"4 3\\n\");\n    printf(\"-1 -3 4 2\\n\");\n    printf(\"5 2\\n\");\n    printf(\"0 -1 2 1 4\\n\");\n    printf(\"4 3\\n\");\n    printf(\"-1 -3 4 2\\n\");\n}","score":0.20000000298,"language":"c"},{"contest":"Master","challenge":"Day 27: Testing","code":"#include \u003ccmath\u003e\n#include \u003ccstdio\u003e\n#include \u003cvector\u003e\n#include \u003ciostream\u003e\n#include \u003calgorithm\u003e\nusing namespace std;\n\nint main(){\n    \n    cout\u003c\u003c\"5\"\u003c\u003cendl;    \n    cout\u003c\u003c\"4 3\"\u003c\u003cendl;  \n    cout\u003c\u003c\"-1 0 4 2\"\u003c\u003cendl; \n    cout\u003c\u003c\"5 3\"\u003c\u003cendl;\n    cout\u003c\u003c\"0 1 -2 -6 9\"\u003c\u003cendl; \n    cout\u003c\u003c\"6 4\"\u003c\u003cendl;\n    cout\u003c\u003c\"1 0 -3 4 5 7\"\u003c\u003cendl;\n    cout\u003c\u003c\"7 5\"\u003c\u003cendl;\n    cout\u003c\u003c\"0 -3 -2 -1 6 -8 9\"\u003c\u003cendl;\n    cout\u003c\u003c\"8 6\"\u003c\u003cendl;\n    cout\u003c\u003c\"2 -4 5 1 3 7 6 0\"\u003c\u003cendl;\n    \n    int t;\n     cin \u003e\u003e t;\n    \n    \n\n    \n    while(t--){\n    long int nos,pw;\n    int students[10000];\n      \n         int arrived=0,notarrived=0;\n        \n   \n        cin\u003e\u003enos\u003e\u003epw;\n        \n        for(int i=0;i\u003cnos;i++)\n        {\n            cin\u003e\u003estudents[i];\n        }\n        \n        for(int j=0;j\u003cnos;j++)\n        {\n            if(students[j]\u003c=0){\n                arrived++;\n            }else{\n                notarrived++;\n            }\n        }\n         \n        if(arrived\u003e=pw){\n        \n            cout\u003c\u003c\"NO\"\u003c\u003cendl; // Class not cancelled\n        }else{\n            \n            cout\u003c\u003c\"YES\"\u003c\u003cendl; // Class Cancelled\n        }\n        \n        \n        \n    }\n    \n    \n    return 0;\n}","score":1.0,"language":"cpp"},{"contest":"Master","challenge":"Day 27: Testing","code":"#include \u003ccmath\u003e\n#include \u003ccstdio\u003e\n#include \u003cvector\u003e\n#include \u003ciostream\u003e\n#include \u003calgorithm\u003e\nusing namespace std;\n\nint main(){\n    \n    cout\u003c\u003c\"5\"\u003c\u003cendl;    \n    cout\u003c\u003c\"4 3\"\u003c\u003cendl;  \n    cout\u003c\u003c\"-1 0 4 2\"\u003c\u003cendl; \n    cout\u003c\u003c\"5 3\"\u003c\u003cendl;\n    cout\u003c\u003c\"0 1 -2 -6 9\"\u003c\u003cendl; \n    cout\u003c\u003c\"6 4\"\u003c\u003cendl;\n    cout\u003c\u003c\"1 0 -3 4 5 7\"\u003c\u003cendl;\n    cout\u003c\u003c\"7 5\"\u003c\u003cendl;\n    cout\u003c\u003c\"0 -3 -2 -1 6 -8 9\"\u003c\u003cendl;\n    cout\u003c\u003c\"8 6\"\u003c\u003cendl;\n    cout\u003c\u003c\"2 -4 5 1 3 7 6 0\"\u003c\u003cendl;\n}","score":1.0,"language":"cpp"},{"contest":"Master","challenge":"Luck Balance","code":"#include \u003cbits/stdc++.h\u003e\n\nusing namespace std;\nvoid mergesort(vector \u003c vector\u003cint\u003e \u003e mat) {\n    \n}\n\nint luckBalance(int n, int k, vector\u003cint\u003e contests1, vector\u003cint\u003e contests0) {\n    // Complete this function\n    int i,sum=0;\n    sort(contests1.begin(), contests1.begin() + contests1.size()-1);\n    for(i=0;i\u003ccontests0.size();i++)\n        sum=sum+contests0[i];\n    i=contests1.size()-1;\n    while(k-- \u0026\u0026 i--)\n        sum=sum+contests1[i];\n    while(i--)\n        sum=sum-contests1[i];\n    return sum;\n    }\n\nint main() {\n    int n,k,temp0,temp1;\n    cin \u003e\u003e n \u003e\u003e k;\n    vector\u003cint\u003e contests1(n);\n    vector\u003cint\u003e contests0(n);\n    for(int i = 0;i \u003c n;i++) {\n        cin \u003e\u003e temp0;\n        cin \u003e\u003e temp1;\n        if(temp1==1)\n            contests1[i]=temp0;\n        else\n            contests0[i]=temp0;\n    }\n    int result = luckBalance(n, k, contests1, contests0);\n    cout \u003c\u003c result \u003c\u003c endl;\n    return 0;\n}\n","score":0.181818181818,"language":"cpp"},{"contest":"Master","challenge":"Luck Balance","code":"#include \u003cbits/stdc++.h\u003e\n\nusing namespace std;\nvoid mergesort(vector \u003c vector\u003cint\u003e \u003e mat) {\n    \n}\n\nint luckBalance(int n, int k, vector\u003cint\u003e contests1, vector\u003cint\u003e contests0) {\n    // Complete this function\n    int i,sum=0;\n    sort(contests1.begin(), contests1.begin() + contests1.size()-1);\n    for(i=0;i\u003ccontests0.size();i++)\n        sum=sum+contests0[i];\n    i=contests1.size()-1;\n    while(k-- \u0026\u0026 --i)\n        sum=sum+contests1[i];\n    while(i--)\n        sum=sum-contests1[i];\n    return sum;\n    }\n\nint main() {\n    int n,k,temp0,temp1;\n    cin \u003e\u003e n \u003e\u003e k;\n    vector\u003cint\u003e contests1(n);\n    vector\u003cint\u003e contests0(n);\n    for(int i = 0;i \u003c n;i++) {\n        cin \u003e\u003e temp0;\n        cin \u003e\u003e temp1;\n        if(temp1==1)\n            contests1[i]=temp0;\n        else\n            contests0[i]=temp0;\n    }\n    int result = luckBalance(n, k, contests1, contests0);\n    cout \u003c\u003c result \u003c\u003c endl;\n    return 0;\n}\n","score":0.363636363636,"language":"cpp"},{"contest":"Master","challenge":"Luck Balance","code":"#include \u003cbits/stdc++.h\u003e\n\nusing namespace std;\nvoid mergesort(vector \u003c vector\u003cint\u003e \u003e mat) {\n    \n}\n\nint luckBalance(int n, int k, vector\u003cint\u003e contests1, vector\u003cint\u003e contests0) {\n    // Complete this function\n    int i,sum=0;\n    sort(contests1.begin(), contests1.begin() + contests1.size()-1);\n    for(i=0;i\u003ccontests0.size();i++)\n        sum=sum+contests0[i];\n    i=contests1.size()-1;\n    while(k-- \u0026\u0026 --i)\n        sum=sum+contests1[i];\n    while(--i)\n        sum=sum-contests1[i];\n    return sum;\n    }\n\nint main() {\n    int n,k,temp0,temp1;\n    cin \u003e\u003e n \u003e\u003e k;\n    vector\u003cint\u003e contests1(n);\n    vector\u003cint\u003e contests0(n);\n    for(int i = 0;i \u003c n;i++) {\n        cin \u003e\u003e temp0;\n        cin \u003e\u003e temp1;\n        if(temp1==1)\n            contests1[i]=temp0;\n        else\n            contests0[i]=temp0;\n    }\n    int result = luckBalance(n, k, contests1, contests0);\n    cout \u003c\u003c result \u003c\u003c endl;\n    return 0;\n}\n","score":0.181818181818,"language":"cpp"},{"contest":"Master","challenge":"Luck Balance","code":"#include \u003cbits/stdc++.h\u003e\n\nusing namespace std;\nvoid mergesort(vector \u003c vector\u003cint\u003e \u003e mat) {\n    \n}\n\nint luckBalance(int n, int k, vector\u003cint\u003e contests1, vector\u003cint\u003e contests0) {\n    // Complete this function\n    int i,sum=0;\n    sort(contests1.begin()+1, contests1.begin() + contests1.size()-1);\n    for(i=1;i\u003ccontests0.size();i++)\n        sum=sum+contests0[i];\n    i=contests1.size()-1;\n    while(k-- \u0026\u0026 i--)\n        sum=sum+contests1[i];\n    while(i--)\n        sum=sum-contests1[i];\n    return sum;\n    }\n\nint main() {\n    int n,k,temp0,temp1,a=0,b=0;\n    cin \u003e\u003e n \u003e\u003e k;\n    vector\u003cint\u003e contests1(n);\n    vector\u003cint\u003e contests0(n);\n    for(int i = 0;i \u003c n;i++) {\n        cin \u003e\u003e temp0;\n        cin \u003e\u003e temp1;\n        if(temp1==1 \u0026\u0026 ++a)\n            contests1[a]=temp0;\n        else if(++b)\n            contests0[b]=temp0;\n    }\n    int result = luckBalance(n, k, contests1, contests0);\n    cout \u003c\u003c result \u003c\u003c endl;\n    return 0;\n}\n","score":0.272727272727,"language":"cpp"},{"contest":"Master","challenge":"Luck Balance","code":"#include \u003cbits/stdc++.h\u003e\n\nusing namespace std;\nvoid mergesort(vector \u003c vector\u003cint\u003e \u003e mat) {\n    \n}\n\nint luckBalance(int n, int k, vector\u003cint\u003e contests1, vector\u003cint\u003e contests0) {\n    // Complete this function\n    int i,sum=0;\n    sort(contests1.begin(), contests1.begin() + contests1.size());\n    for(i=1;i\u003ccontests0.size();i++)\n        sum=sum+contests0[i];\n    i=contests1.size()-1;\n    while(k-- \u0026\u0026 i--)\n        sum=sum+contests1[i];\n    while(i--)\n        sum=sum-contests1[i];\n    return sum;\n    }\n\nint main() {\n    int n,k,temp0,temp1;\n    cin \u003e\u003e n \u003e\u003e k;\n    vector\u003cint\u003e contests1(n);\n    vector\u003cint\u003e contests0(n);\n    for(int i = 0;i \u003c n;i++) {\n        cin \u003e\u003e temp0;\n        cin \u003e\u003e temp1;\n        if(temp1==1)\n            contests1[i]=temp0;\n        else\n            contests0[i]=temp0;\n    }\n    int result = luckBalance(n, k, contests1, contests0);\n    cout \u003c\u003c result \u003c\u003c endl;\n    return 0;\n}\n","score":0.0,"language":"cpp"},{"contest":"Master","challenge":"Luck Balance","code":"#include \u003cbits/stdc++.h\u003e\n\nusing namespace std;\nvoid mergesort(vector \u003c vector\u003cint\u003e \u003e mat) {\n    \n}\n\nint luckBalance(int n, int k, vector\u003cint\u003e contests1, vector\u003cint\u003e contests0) {\n    // Complete this function\n    int i,sum=0;\n    for(i=1;i\u003ccontests0.size();i++)\n        sum=sum+contests0[i];\n    sort(contests1.begin(), contests1.begin() + contests1.size()-1);\n    i=contests1.size()-1;\n    while(k-- \u0026\u0026 i--)\n        sum=sum+contests1[i];\n    while(i--)\n        sum=sum-contests1[i];\n    return sum;\n    }\n\nint main() {\n    int n,k,temp0,temp1;\n    cin \u003e\u003e n \u003e\u003e k;\n    vector\u003cint\u003e contests1(n);\n    vector\u003cint\u003e contests0(n);\n    for(int i = 0;i \u003c n;i++) {\n        cin \u003e\u003e temp0;\n        cin \u003e\u003e temp1;\n        if(temp1==1)\n            contests1[i]=temp0;\n        else\n            contests0[i]=temp0;\n    }\n    int result = luckBalance(n, k, contests1, contests0);\n    cout \u003c\u003c result \u003c\u003c endl;\n    return 0;\n}\n","score":0.0,"language":"cpp"},{"contest":"Master","challenge":"Solve Me First","code":"#include \u003ccmath\u003e\n#include \u003ccstdio\u003e\n#include \u003cvector\u003e\n#include \u003ciostream\u003e\n#include \u003calgorithm\u003e\nusing namespace std;\n\n\nint solveMeFirst(int a, int b) {\n // Hint: Type return a+b; below:\n  return a+b;\n}\nint main() {\n  int num1, num2;\n  int sum;\n  cin\u003e\u003enum1\u003e\u003enum2;\n  sum = solveMeFirst(num1,num2);\n  cout\u003c\u003csum;\n  return 0;\n}\n","score":1.0,"language":"cpp"},{"contest":"Master","challenge":"Simple Array Sum","code":"#include \u003cbits/stdc++.h\u003e\n\nusing namespace std;\n\nint simpleArraySum(int n, vector \u003cint\u003e ar) {\n    // Complete this function\n    int sum=0;\n    while(n--)\n        sum=sum+ar[n];\n    return sum;\n}\n\nint main() {\n    int n;\n    cin \u003e\u003e n;\n    vector\u003cint\u003e ar(n);\n    for(int ar_i = 0; ar_i \u003c n; ar_i++){\n       cin \u003e\u003e ar[ar_i];\n    }\n    int result = simpleArraySum(n, ar);\n    cout \u003c\u003c result \u003c\u003c endl;\n    return 0;\n}\n","score":1.0,"language":"cpp"},{"contest":"Master","challenge":"Compare the Triplets","code":"#include \u003cbits/stdc++.h\u003e\n\nusing namespace std;\n\nvector \u003c int \u003e solve(int a0, int a1, int a2, int b0, int b1, int b2){\n    // Complete this function\n    vector \u003cint\u003e result(2);\n    if(a0\u003eb0)\n        result[0]+=1;\n    else if(b0\u003ea0)\n        result[1]+=1;\n    if(a1\u003eb1)\n        result[0]+=1;\n    else if(b1\u003ea1)\n        result[1]+=1;\n    if(a2\u003eb2)\n        result[0]+=1;\n    else if(b2\u003ea2)\n        result[1]+=1;\n    return result;\n}\n\nint main() {\n    int a0;\n    int a1;\n    int a2;\n    cin \u003e\u003e a0 \u003e\u003e a1 \u003e\u003e a2;\n    int b0;\n    int b1;\n    int b2;\n    cin \u003e\u003e b0 \u003e\u003e b1 \u003e\u003e b2;\n    vector \u003c int \u003e result = solve(a0, a1, a2, b0, b1, b2);\n    for (ssize_t i = 0; i \u003c result.size(); i++) {\n        cout \u003c\u003c result[i] \u003c\u003c (i != result.size() - 1 ? \" \" : \"\");\n    }\n    cout \u003c\u003c endl;\n    \n\n    return 0;\n}\n","score":1.0,"language":"cpp"},{"contest":"Master","challenge":"A Very Big Sum","code":"#include \u003cbits/stdc++.h\u003e\n\nusing namespace std;\n\nlong aVeryBigSum(int n, vector \u003clong\u003e ar) {\n    // Complete this function\n    long sum=0;\n    for(int i=0;i\u003cn;i++)\n        sum=ar[i]+sum;\n    return sum;\n}\n\nint main() {\n    int n;\n    cin \u003e\u003e n;\n    vector\u003clong\u003e ar(n);\n    for(int ar_i = 0; ar_i \u003c n; ar_i++){\n       cin \u003e\u003e ar[ar_i];\n    }\n    long result = aVeryBigSum(n, ar);\n    cout \u003c\u003c result \u003c\u003c endl;\n    return 0;\n}\n","score":1.0,"language":"cpp"},{"contest":"Master","challenge":"Diagonal Difference","code":"#include \u003cbits/stdc++.h\u003e\n\nusing namespace std;\n\nint diagonalDifference(vector \u003c vector\u003cint\u003e \u003e a) {\n    // Complete this function\n    int diff=0;\n    for(int i=0;i\u003ca.size();i++)\n        diff=diff+(a[i][i]-a[a.size()-1-i][i]);\n                   return abs(diff);\n}\n\nint main() {\n    int n;\n    cin \u003e\u003e n;\n    vector\u003c vector\u003cint\u003e \u003e a(n,vector\u003cint\u003e(n));\n    for(int a_i = 0;a_i \u003c n;a_i++){\n       for(int a_j = 0;a_j \u003c n;a_j++){\n          cin \u003e\u003e a[a_i][a_j];\n       }\n    }\n    int result = diagonalDifference(a);\n    cout \u003c\u003c result \u003c\u003c endl;\n    return 0;\n}\n","score":1.0,"language":"cpp"},{"contest":"Master","challenge":"Plus Minus","code":"#include \u003cbits/stdc++.h\u003e\n\nusing namespace std;\n\nvoid plusMinus(vector \u003cint\u003e arr) {\n    // Complete this function\n    int p[3]={0,0,0};\n    for(int i=0 ;i\u003carr.size();i++)\n    {\n        if(arr[i]\u003e0)\n            ++p[0];\n        else if(arr[i]\u003c0)\n            ++p[1];\n        else\n            ++p[2];\n    }\n    for(int i=0;i\u003c3;i++)\n    {\n        float f=float(p[i])/float(arr.size());\n        cout \u003c\u003c f \u003c\u003c'\\n';\n    }\n}\n\nint main() {\n    int n;\n    cin \u003e\u003e n;\n    vector\u003cint\u003e arr(n);\n    for(int arr_i = 0; arr_i \u003c n; arr_i++){\n       cin \u003e\u003e arr[arr_i];\n    }\n    plusMinus(arr);\n    return 0;\n}\n","score":1.0,"language":"cpp"},{"contest":"Master","challenge":"Staircase","code":"#include \u003cbits/stdc++.h\u003e\n\nusing namespace std;\n\nvoid staircase(int n) {\n    // Complete this function\n    for(int i=0;i\u003cn;i++)\n    {\n        for(int s=1;s\u003cn-i;s++)\n            cout\u003c\u003c' ';\n        for(int j=0;j\u003c=i;j++)\n            cout\u003c\u003c'#';\n        cout\u003c\u003c'\\n';\n    }\n}\n\nint main() {\n    int n;\n    cin \u003e\u003e n;\n    staircase(n);\n    return 0;\n}\n","score":1.0,"language":"cpp"},{"contest":"Master","challenge":"Mini-Max Sum","code":"#include \u003cbits/stdc++.h\u003e\n\nusing namespace std;\n\nvoid miniMaxSum(vector \u003cint\u003e arr) {\n    // Complete this function\n    int sum=0,min=arr[0],max=arr[0];\n    for(int i=0;i\u003carr.size();i++)\n    {\n        if(arr[i]\u003emax)\n            max=arr[i];\n        if(arr[i]\u003cmin)\n            min=arr[i];\n        sum=sum+arr[i];\n    }\n    cout\u003c\u003csum-max\u003c\u003c' '\u003c\u003csum-min;\n}\n\nint main() {\n    vector\u003cint\u003e arr(5);\n    for(int arr_i = 0; arr_i \u003c 5; arr_i++){\n       cin \u003e\u003e arr[arr_i];\n    }\n    miniMaxSum(arr);\n    return 0;\n}\n","score":0.230769230769,"language":"cpp"},{"contest":"Master","challenge":"Mini-Max Sum","code":"#include \u003cbits/stdc++.h\u003e\n\nusing namespace std;\n\nvoid miniMaxSum(vector \u003clong long\u003e arr) {\n    // Complete this function\n    long long sum=0,min=arr[0],max=arr[0];\n    for(long long i=0;i\u003carr.size();i++)\n    {\n        if(arr[i]\u003emax)\n            max=arr[i];\n        if(arr[i]\u003cmin)\n            min=arr[i];\n        sum=sum+arr[i];\n    }\n    cout\u003c\u003csum-max\u003c\u003c' '\u003c\u003csum-min;\n}\n\nint main() {\n    vector\u003clong long\u003e arr(5);\n    for(long long arr_i = 0; arr_i \u003c 5; arr_i++){\n       cin \u003e\u003e arr[arr_i];\n    }\n    miniMaxSum(arr);\n    return 0;\n}\n","score":1.0,"language":"cpp"},{"contest":"Master","challenge":"Birthday Cake Candles","code":"#include \u003cbits/stdc++.h\u003e\n\nusing namespace std;\n\nint birthdayCakeCandles(int n, vector \u003cint\u003e ar) {\n    // Complete this function\n    int max=ar[0],count=0;\n    for(int i=0;i\u003cn;i++)\n    {\n        if(ar[i]\u003emax)\n        {\n            max=ar[i];\n            count=0;\n        }\n        if(ar[i]==max)\n            count+=1;\n    }\n    return count;\n}\n\nint main() {\n    int n;\n    cin \u003e\u003e n;\n    vector\u003cint\u003e ar(n);\n    for(int ar_i = 0; ar_i \u003c n; ar_i++){\n       cin \u003e\u003e ar[ar_i];\n    }\n    int result = birthdayCakeCandles(n, ar);\n    cout \u003c\u003c result \u003c\u003c endl;\n    return 0;\n}\n","score":1.0,"language":"cpp"},{"contest":"Master","challenge":"Time Conversion","code":"#include \u003cbits/stdc++.h\u003e\n\nusing namespace std;\n\nvoid timeConversion(int h, int m, int s, char ss[2]) {\n    // Complete this function\n    if(ss[0]=='A' \u0026\u0026 h==12)\n    printf(\"%02d:%02d:%02d\",0,m,s);\n    else if(ss[0]=='A')\n    printf(\"%02d:%02d:%02d\",h,m,s);\n    else if(ss[0]=='P' \u0026\u0026 h==12)\n    printf(\"%02d:%02d:%02d\",h,m,s);\n    else if(ss[0]=='P')\n    printf(\"%02d:%02d:%02d\",h+12,m,s);\n}\n\nint main() {\n    int h,m,s;char ss[2];\n    scanf(\"%2d:%2d:%2d%2s\",\u0026h,\u0026m,\u0026s,ss);\n    timeConversion(h,m,s,ss);\n    return 0;\n}\n","score":1.0,"language":"cpp"},{"contest":"Master","challenge":"Time Conversion","code":"#include \u003cbits/stdc++.h\u003e\n\nusing namespace std;\n\nvoid timeConversion(int h, int m, int s, char ss[2]) {\n    // Complete this function\n    if(ss[0]=='A' \u0026\u0026 h==12)\n    printf(\"%02d:%02d:%02d\",0,m,s);\n    else if(ss[0]=='A')\n    printf(\"%02d:%02d:%02d\",h,m,s);\n    else if(ss[0]=='P' \u0026\u0026 h==12)\n    printf(\"%02d:%02d:%02d\",h,m,s);\n    else if(ss[0]=='P')\n    printf(\"%02d:%02d:%02d\",h+12,m,s);\n}\n\nint main() {\n    int h,m,s;char ss[2];\n    scanf(\"%2d:%2d:%2d%2s\",\u0026h,\u0026m,\u0026s,ss);\n    timeConversion(h,m,s,ss);\n    return 0;\n}\n","score":1.0,"language":"cpp"},{"contest":"Master","challenge":"Time Conversion","code":"#include \u003cbits/stdc++.h\u003e\n\nusing namespace std;\n\nvoid timeConversion(int h, int m, int s, char ss[2]) {\n    // Complete this function\n    if(ss[0]=='A' \u0026\u0026 h==12)\n    printf(\"%02d:%02d:%02d\",0,m,s);\n    else if(ss[0]=='A')\n    printf(\"%02d:%02d:%02d\",h,m,s);\n    else if(ss[0]=='P' \u0026\u0026 h==12)\n    printf(\"%02d:%02d:%02d\",h,m,s);\n    else if(ss[0]=='P')\n    printf(\"%02d:%02d:%02d\",h+12,m,s);\n}\n\nint main() {\n    int h,m,s;char ss[2];\n    scanf(\"%2d:%2d:%2d%2s\",\u0026h,\u0026m,\u0026s,ss);\n    timeConversion(h,m,s,ss);\n    return 0;\n}\n","score":1.0,"language":"cpp"},{"contest":"Master","challenge":"Make It Anagram","code":"\n#include \u003ccmath\u003e\n#include \u003ccstring\u003e\n#include \u003cvector\u003e\n#include \u003ciostream\u003e\n#include \u003calgorithm\u003e\nusing namespace std;\n\nint main() {\n    char s1[10010], s2[10010];\n    cin \u003e\u003e s1 \u003e\u003e s2;\n    int a[26] = {0};\n    for(int i = 0; i \u003c strlen(s1); i++) {\n        a[s1[i] - 'a']++;   \n    }\n    for(int i = 0; i \u003c strlen(s2); i++) {\n        a[s2[i] - 'a']--;\n    }\n    long long int ans = 0;\n    for(int i = 0; i \u003c 26; i++)\n        ans += (a[i]==0)?0:1;\n    cout \u003c\u003c ans \u003c\u003c endl;\n    return 0;\n}\n","score":0.066666670144,"language":"cpp"},{"contest":"Master","challenge":"Make It Anagram","code":"\n#include \u003ccmath\u003e\n#include \u003ccstring\u003e\n#include \u003cvector\u003e\n#include \u003ciostream\u003e\n#include \u003calgorithm\u003e\nusing namespace std;\n\nint main() {\n    char s1[10010], s2[10010];\n    cin \u003e\u003e s1 \u003e\u003e s2;\n    int a[26] = {0};\n    for(int i = 0; i \u003c strlen(s1); i++) {\n        a[s1[i] - 'a']++;   \n    }\n    for(int i = 0; i \u003c strlen(s2); i++) {\n        a[s2[i] - 'a']--;\n    }\n    long long int ans = 0;\n    for(int i = 0; i \u003c 26; i++)\n        ans += (a[i]==0)?0:abs(a[i]);\n    cout \u003c\u003c ans \u003c\u003c endl;\n    return 0;\n}\n","score":1.0,"language":"cpp"},{"contest":"Master","challenge":"Happy Ladybugs","code":"#include \u003cbits/stdc++.h\u003e\n\nusing namespace std;\n\n/*\n * Complete the happyLadybugs function below.\n */\nstring happyLadybugs(string b) {\n    /*\n     * Write your code here.\n     */\n    int frequency[26]={0};\n    for(int i=0;i\u003cb.length();i++)\n        ++frequency[b[i]-'A'];\n    \n\n}\n\nint main()\n{\n    ofstream fout(getenv(\"OUTPUT_PATH\"));\n\n    int g;\n    cin \u003e\u003e g;\n    cin.ignore(numeric_limits\u003cstreamsize\u003e::max(), '\\n');\n\n    for (int g_itr = 0; g_itr \u003c g; g_itr++) {\n        int n;\n        cin \u003e\u003e n;\n        cin.ignore(numeric_limits\u003cstreamsize\u003e::max(), '\\n');\n\n        string b;\n        getline(cin, b);\n\n        string result = happyLadybugs(b);\n\n        fout \u003c\u003c result \u003c\u003c \"\\n\";\n    }\n\n    fout.close();\n\n    return 0;\n}\n","score":0.0,"language":"cpp"},{"contest":"Master","challenge":"Happy Ladybugs","code":"#include \u003cbits/stdc++.h\u003e\n\nusing namespace std;\n\n/*\n * Complete the happyLadybugs function below.\n */\nstring happyLadybugs(string b) {\n    /*\n     * Write your code here.\n     */\n    int l=b.length(),frequency[26]={0};\n    bool us=false;\n    for(int i=0;i\u003cl;i++)\n        if(b[i]!='_')\n            ++frequency[b[i]-'A'];\n        else\n            us=true;\n    for(int i=0;i\u003c26;i++)\n        if(frequency[i]==1)\n            return \"NO\";\n    if(us)\n        return \"YES\";\n    else\n    {\n        for(int i=1;i\u003cl-1;i++)\n            if(!(b[i-1]==b[i] || b[i]==b[i+1]))\n                return \"NO\";\n        if(b[0]==b[1] \u0026\u0026 b[l-2]==b[l-1])\n            return \"YES\";\n        else\n            return \"NO\";\n    }\n\n}\n\nint main()\n{\n    ofstream fout(getenv(\"OUTPUT_PATH\"));\n\n    int g;\n    cin \u003e\u003e g;\n    cin.ignore(numeric_limits\u003cstreamsize\u003e::max(), '\\n');\n\n    for (int g_itr = 0; g_itr \u003c g; g_itr++) {\n        int n;\n        cin \u003e\u003e n;\n        cin.ignore(numeric_limits\u003cstreamsize\u003e::max(), '\\n');\n\n        string b;\n        getline(cin, b);\n\n        string result = happyLadybugs(b);\n\n        fout \u003c\u003c result \u003c\u003c \"\\n\";\n    }\n\n    fout.close();\n\n    return 0;\n}\n","score":1.0,"language":"cpp"},{"contest":"Master","challenge":"3D Surface Area","code":"#include \u003cbits/stdc++.h\u003e\n\nusing namespace std;\nint f(int x)\n{\n    if(x\u003e0)\n        return x;\n    else\n        return 0;\n}\nint main() {\n    int H,W;\n    cin \u003e\u003e H \u003e\u003e W;\n    int area=2*H*W;\n    int a[H+2][W+2];\n    for(int i=0;i\u003cH+2;i++)\n        for(int j=0;j\u003cW+2;j++)\n            a[i][j]=0;\n    for(int i=1;i\u003c=H;i++)\n        for(int j=1;j\u003c=W;j++)\n            cin\u003e\u003ea[i][j];\n    for(int i=1;i\u003c=H;i++)\n        for(int j=1;j\u003c=W;j++)\n            area=area + f(a[i][j]-a[i-1][j]) + f(a[i][j]-a[i][j-1]) + f(a[i][j]-a[i+1][j]) + f(a[i][j]-a[i][j+1]);\n    cout \u003c\u003c area \u003c\u003c endl;\n    return 0;\n}\n","score":1.0,"language":"cpp"},{"contest":"Master","challenge":"Grading Students","code":"#include \u003cbits/stdc++.h\u003e\n\nusing namespace std;\n\n/*\n * Complete the gradingStudents function below.\n */\nvector\u003cint\u003e gradingStudents(vector\u003cint\u003e grades) {\n    /*\n     * Write your code here.\n     */\n    for(int i=0;i\u003cgrades.size();i++)\n    {\n        if(grades[i]\u003c38)\n            continue;\n        else if(5*(grades[i]/5+1)-grades[i]\u003c3)\n            grades[i]=5*(grades[i]/5+1);\n        else\n            continue;\n    }\n    return grades;\n}\n\nint main()\n{\n    ofstream fout(getenv(\"OUTPUT_PATH\"));\n\n    int n;\n    cin \u003e\u003e n;\n    cin.ignore(numeric_limits\u003cstreamsize\u003e::max(), '\\n');\n\n    vector\u003cint\u003e grades(n);\n\n    for (int grades_itr = 0; grades_itr \u003c n; grades_itr++) {\n        int grades_item;\n        cin \u003e\u003e grades_item;\n        cin.ignore(numeric_limits\u003cstreamsize\u003e::max(), '\\n');\n\n        grades[grades_itr] = grades_item;\n    }\n\n    vector\u003cint\u003e result = gradingStudents(grades);\n\n    for (int result_itr = 0; result_itr \u003c result.size(); result_itr++) {\n        fout \u003c\u003c result[result_itr];\n\n        if (result_itr != result.size() - 1) {\n            fout \u003c\u003c \"\\n\";\n        }\n    }\n\n    fout \u003c\u003c \"\\n\";\n\n    fout.close();\n\n    return 0;\n}\n","score":1.0,"language":"cpp"},{"contest":"Master","challenge":"Apple and Orange","code":"#include \u003cbits/stdc++.h\u003e\n\nusing namespace std;\n\nvector\u003cstring\u003e split_string(string);\n\n/*\n * Complete the countApplesAndOranges function below.\n */\nvoid countApplesAndOranges(int s, int t, int a, int b, vector\u003cint\u003e apples, vector\u003cint\u003e oranges) {\n    /*\n     * Write your code here.\n     */\n    int apple=0,orange=0;\n    for(int i=0;i\u003capples.size();i++)\n        if(a+apples[i]\u003e=s \u0026\u0026 a+apples[i]\u003c=t)\n            ++apple;\n    for(int i=0;i\u003coranges.size();i++)\n        if(b+oranges[i]\u003e=s \u0026\u0026 b+oranges[i]\u003c=t)\n            ++orange;\n    cout\u003c\u003capple\u003c\u003cendl\u003c\u003corange;\n}\n\nint main()\n{\n    string st_temp;\n    getline(cin, st_temp);\n\n    vector\u003cstring\u003e st = split_string(st_temp);\n\n    int s = stoi(st[0]);\n\n    int t = stoi(st[1]);\n\n    string ab_temp;\n    getline(cin, ab_temp);\n\n    vector\u003cstring\u003e ab = split_string(ab_temp);\n\n    int a = stoi(ab[0]);\n\n    int b = stoi(ab[1]);\n\n    string mn_temp;\n    getline(cin, mn_temp);\n\n    vector\u003cstring\u003e mn = split_string(mn_temp);\n\n    int m = stoi(mn[0]);\n\n    int n = stoi(mn[1]);\n\n    string apple_temp_temp;\n    getline(cin, apple_temp_temp);\n\n    vector\u003cstring\u003e apple_temp = split_string(apple_temp_temp);\n\n    vector\u003cint\u003e apple(m);\n\n    for (int apple_itr = 0; apple_itr \u003c m; apple_itr++) {\n        int apple_item = stoi(apple_temp[apple_itr]);\n\n        apple[apple_itr] = apple_item;\n    }\n\n    string orange_temp_temp;\n    getline(cin, orange_temp_temp);\n\n    vector\u003cstring\u003e orange_temp = split_string(orange_temp_temp);\n\n    vector\u003cint\u003e orange(n);\n\n    for (int orange_itr = 0; orange_itr \u003c n; orange_itr++) {\n        int orange_item = stoi(orange_temp[orange_itr]);\n\n        orange[orange_itr] = orange_item;\n    }\n\n    countApplesAndOranges(s, t, a, b, apple, orange);\n\n    return 0;\n}\n\nvector\u003cstring\u003e split_string(string input_string) {\n    string::iterator new_end = unique(input_string.begin(), input_string.end(), [] (const char \u0026x, const char \u0026y) {\n        return x == y and x == ' ';\n    });\n\n    input_string.erase(new_end, input_string.end());\n\n    while (input_string[input_string.length() - 1] == ' ') {\n        input_string.pop_back();\n    }\n\n    vector\u003cstring\u003e splits;\n    char delimiter = ' ';\n\n    size_t i = 0;\n    size_t pos = input_string.find(delimiter);\n\n    while (pos != string::npos) {\n        splits.push_back(input_string.substr(i, pos - i));\n\n        i = pos + 1;\n        pos = input_string.find(delimiter, i);\n    }\n\n    splits.push_back(input_string.substr(i, min(pos, input_string.length()) - i + 1));\n\n    return splits;\n}\n","score":1.0,"language":"cpp"},{"contest":"Master","challenge":"Append and Delete","code":"#include \u003cbits/stdc++.h\u003e\n\nusing namespace std;\n\nstring appendAndDelete(string s, string t, int k) {\n    // Complete this function\n    int i;\n    for(i=0;i\u003cmin(s.length(),t.length());i++)\n        if(s[i]!=t[i])\n            break;\n    if((k\u003e=s.length()+t.length()-2*(i+1) \u0026\u0026 (k-s.length()+t.length()-2*(i+1))%2==0) || (k\u003e=s.length()+t.length()))\n        return \"Yes\";\n    else\n        return \"No\";\n}\n\nint main() {\n    string s;\n    cin \u003e\u003e s;\n    string t;\n    cin \u003e\u003e t;\n    int k;\n    cin \u003e\u003e k;\n    string result = appendAndDelete(s, t, k);\n    cout \u003c\u003c result \u003c\u003c endl;\n    return 0;\n}\n","score":0.818181818182,"language":"cpp"},{"contest":"Master","challenge":"Append and Delete","code":"#include \u003cbits/stdc++.h\u003e\n\nusing namespace std;\n\nstring appendAndDelete(string s, string t, int k) {\n    // Complete this function\n    int i=0,lengths=s.length()+t.length();\n    for(i=0;i\u003cmin(s.length(),t.length());i++)\n        if(s[i]!=t[i])\n            break;\n    int operations =lengths - (2*(i+1));\n    if((k\u003e=operations \u0026\u0026 (k-operations)%2==0) || (k\u003e=lengths))\n        return \"Yes\";\n    else\n        return \"No\";\n}\n\nint main() {\n    string s;\n    cin \u003e\u003e s;\n    string t;\n    cin \u003e\u003e t;\n    int k;\n    cin \u003e\u003e k;\n    string result = appendAndDelete(s, t, k);\n    cout \u003c\u003c result \u003c\u003c endl;\n    return 0;\n}\n","score":0.909090909091,"language":"cpp"},{"contest":"Master","challenge":"Append and Delete","code":"#include \u003cbits/stdc++.h\u003e\n\nusing namespace std;\n\nstring appendAndDelete(string s, string t, int k) {\n    // Complete this function\n    int i=0,lengths=s.length()+t.length();\n    for(i=0;i\u003cmin(s.length(),t.length());i++)\n        if(s[i]!=t[i])\n            break;\n    int operations =lengths - 2*i;\n    if((k\u003e=operations \u0026\u0026 (k-operations)%2==0) || (k\u003e=lengths))\n        return \"Yes\";\n    else\n        return \"No\";\n}\n\nint main() {\n    string s;\n    cin \u003e\u003e s;\n    string t;\n    cin \u003e\u003e t;\n    int k;\n    cin \u003e\u003e k;\n    string result = appendAndDelete(s, t, k);\n    cout \u003c\u003c result \u003c\u003c endl;\n    return 0;\n}\n","score":1.0,"language":"cpp"},{"contest":"Master","challenge":"Between Two Sets","code":"#include \u003cbits/stdc++.h\u003e\n\nusing namespace std;\n\nvector\u003cstring\u003e split_string(string);\n\n/*\n * Complete the getTotalX function below.\n */\nint minimum(vector\u003cint\u003e b)\n{\n    int x = b[0];\n    for(int i=1;i\u003cb.size();i++)\n        if(x\u003eb[i])\n            x=b[i];\n    return x;\n}\nint getTotalX(vector\u003cint\u003e a, vector\u003cint\u003e b)\n{\n    vector\u003cint\u003e factors;\n    int minb=minimum(b);\n    for(int i=1;i\u003c=sqrt(minb);i++)\n    {\n        if(minb%i==0)\n        {\n            factors.push_back(i);\n            if(i!=minb/i)\n            factors.push_back(minb/i);\n        }\n    }\n    for(int i=0;i\u003cb.size();i++)\n    {\n       for(int j=0;j\u003cfactors.size();j++)\n       {\n           if(!(b[i]%factors[j]==0))\n           {\n               factors.erase(factors.begin()+j);\n               j--;\n           }\n       }\n    }\n    for(int i=0;i\u003ca.size();i++)\n    {\n       for(int j=0;j\u003cfactors.size();j++)\n       {\n           if(!(factors[j]%a[i]==0))\n           {\n               factors.erase(factors.begin()+j);\n               j--;\n           }\n       }\n    }\n    return factors.size();\n}\n\nint main()\n{\n    ofstream fout(getenv(\"OUTPUT_PATH\"));\n\n    string nm_temp;\n    getline(cin, nm_temp);\n\n    vector\u003cstring\u003e nm = split_string(nm_temp);\n\n    int n = stoi(nm[0]);\n\n    int m = stoi(nm[1]);\n\n    string a_temp_temp;\n    getline(cin, a_temp_temp);\n\n    vector\u003cstring\u003e a_temp = split_string(a_temp_temp);\n\n    vector\u003cint\u003e a(n);\n\n    for (int a_itr = 0; a_itr \u003c n; a_itr++) {\n        int a_item = stoi(a_temp[a_itr]);\n\n        a[a_itr] = a_item;\n    }\n\n    string b_temp_temp;\n    getline(cin, b_temp_temp);\n\n    vector\u003cstring\u003e b_temp = split_string(b_temp_temp);\n\n    vector\u003cint\u003e b(m);\n\n    for (int b_itr = 0; b_itr \u003c m; b_itr++) {\n        int b_item = stoi(b_temp[b_itr]);\n\n        b[b_itr] = b_item;\n    }\n\n    int total = getTotalX(a, b);\n\n    fout \u003c\u003c total \u003c\u003c \"\\n\";\n\n    fout.close();\n\n    return 0;\n}\n\nvector\u003cstring\u003e split_string(string input_string) {\n    string::iterator new_end = unique(input_string.begin(), input_string.end(), [] (const char \u0026x, const char \u0026y) {\n        return x == y and x == ' ';\n    });\n\n    input_string.erase(new_end, input_string.end());\n\n    while (input_string[input_string.length() - 1] == ' ') {\n        input_string.pop_back();\n    }\n\n    vector\u003cstring\u003e splits;\n    char delimiter = ' ';\n\n    size_t i = 0;\n    size_t pos = input_string.find(delimiter);\n\n    while (pos != string::npos) {\n        splits.push_back(input_string.substr(i, pos - i));\n\n        i = pos + 1;\n        pos = input_string.find(delimiter, i);\n    }\n\n    splits.push_back(input_string.substr(i, min(pos, input_string.length()) - i + 1));\n\n    return splits;\n}\n","score":1.0,"language":"cpp"},{"contest":"Master","challenge":"Kangaroo","code":"#include \u003cbits/stdc++.h\u003e\n\nusing namespace std;\n\nstring kangaroo(int x1, int v1, int x2, int v2) {\n    // Complete this function\n    if((x1\u003cx2 \u0026\u0026 v1\u003c=v2 ) || (x1\u003ex2 \u0026\u0026 v1\u003e=v2 ))\n        return \"NO\";\n    else if(x1==x2)\n        return \"YES\";\n    else\n        return kangaroo(x1+v1,v1,x2+v2,v2);\n}\n\nint main() {\n    int x1;\n    int v1;\n    int x2;\n    int v2;\n    cin \u003e\u003e x1 \u003e\u003e v1 \u003e\u003e x2 \u003e\u003e v2;\n    string result = kangaroo(x1, v1, x2, v2);\n    cout \u003c\u003c result \u003c\u003c endl;\n    return 0;\n}\n","score":1.0,"language":"cpp"},{"contest":"Master","challenge":"3D Surface Area","code":"#include \u003cbits/stdc++.h\u003e\n\nusing namespace std;\nint f(int x)\n{\n    if(x\u003e0)\n        return x;\n    else\n        return 0;\n}\nint main() {\n    int H,W;\n    cin \u003e\u003e H \u003e\u003e W;\n    int area=2*H*W;\n    int a[H][W];\n    for(int i=0;i\u003cH;i++)\n        for(int j=0;j\u003cW;j++)\n            cin\u003e\u003ea[i][j];\n    for(int i=0;i\u003cH;i++)\n        for(int j=0;j\u003cW;j++)\n            area=area + f(a[i][j]-((i==0)?0:a[i-1][j])) + f(a[i][j]-((j==0)?0:a[i][j-1])) + f(a[i][j]-((i+1==H)?0:a[i+1][j])) + f(a[i][j]-((j+1==W)?0:a[i][j+1]));\n    cout \u003c\u003c area \u003c\u003c endl;\n    return 0;\n}\n","score":1.0,"language":"cpp"},{"contest":"Master","challenge":"Breaking the Records","code":"#include \u003cbits/stdc++.h\u003e\n\nusing namespace std;\n\nvector\u003cstring\u003e split_string(string);\n\n/*\n * Complete the breakingRecords function below.\n */\nvector\u003cint\u003e breakingRecords(vector\u003cint\u003e score)\n{\n    int cmax=0,cmin=0,max=score[0],min=score[0];\n    for(int i=0;i\u003cscore.size();i++)\n    {\n        if(score[i]\u003emax)\n        {\n            ++cmax;\n            max=score[i];\n        }\n        if(score[i]\u003cmin)\n        {\n            ++cmin;\n            min=score[i];\n        }\n    }\n    return {cmax,cmin};\n}\n\nint main()\n{\n    ofstream fout(getenv(\"OUTPUT_PATH\"));\n\n    int n;\n    cin \u003e\u003e n;\n    cin.ignore(numeric_limits\u003cstreamsize\u003e::max(), '\\n');\n\n    string score_temp_temp;\n    getline(cin, score_temp_temp);\n\n    vector\u003cstring\u003e score_temp = split_string(score_temp_temp);\n\n    vector\u003cint\u003e score(n);\n\n    for (int score_itr = 0; score_itr \u003c n; score_itr++) {\n        int score_item = stoi(score_temp[score_itr]);\n\n        score[score_itr] = score_item;\n    }\n\n    vector\u003cint\u003e result = breakingRecords(score);\n\n    for (int result_itr = 0; result_itr \u003c result.size(); result_itr++) {\n        fout \u003c\u003c result[result_itr];\n\n        if (result_itr != result.size() - 1) {\n            fout \u003c\u003c \" \";\n        }\n    }\n\n    fout \u003c\u003c \"\\n\";\n\n    fout.close();\n\n    return 0;\n}\n\nvector\u003cstring\u003e split_string(string input_string) {\n    string::iterator new_end = unique(input_string.begin(), input_string.end(), [] (const char \u0026x, const char \u0026y) {\n        return x == y and x == ' ';\n    });\n\n    input_string.erase(new_end, input_string.end());\n\n    while (input_string[input_string.length() - 1] == ' ') {\n        input_string.pop_back();\n    }\n\n    vector\u003cstring\u003e splits;\n    char delimiter = ' ';\n\n    size_t i = 0;\n    size_t pos = input_string.find(delimiter);\n\n    while (pos != string::npos) {\n        splits.push_back(input_string.substr(i, pos - i));\n\n        i = pos + 1;\n        pos = input_string.find(delimiter, i);\n    }\n\n    splits.push_back(input_string.substr(i, min(pos, input_string.length()) - i + 1));\n\n    return splits;\n}\n","score":1.0,"language":"cpp"},{"contest":"Master","challenge":"Save the Prisoner!","code":"#include \u003cbits/stdc++.h\u003e\n\nusing namespace std;\n\nint saveThePrisoner(int n, int m, int s){\n    // Complete this function\n    while(m--)\n    {\n        s=s%n;\n        s+=1;\n    }\n    return s-1;\n}\n\nint main() {\n    int t;\n    cin \u003e\u003e t;\n    for(int a0 = 0; a0 \u003c t; a0++){\n        int n;\n        int m;\n        int s;\n        cin \u003e\u003e n \u003e\u003e m \u003e\u003e s;\n        int result = saveThePrisoner(n, m, s);\n        cout \u003c\u003c result \u003c\u003c endl;\n    }\n    return 0;\n}\n","score":0.0,"language":"cpp"},{"contest":"Master","challenge":"Save the Prisoner!","code":"#include \u003cbits/stdc++.h\u003e\n\nusing namespace std;\n\nint saveThePrisoner(int n, int m, int s){\n    // Complete this function\n    m=m%n;\n    return s+m-1;\n}\n\nint main() {\n    int t;\n    cin \u003e\u003e t;\n    for(int a0 = 0; a0 \u003c t; a0++){\n        int n;\n        int m;\n        int s;\n        cin \u003e\u003e n \u003e\u003e m \u003e\u003e s;\n        int result = saveThePrisoner(n, m, s);\n        cout \u003c\u003c result \u003c\u003c endl;\n    }\n    return 0;\n}\n","score":0.0,"language":"cpp"},{"contest":"Master","challenge":"Save the Prisoner!","code":"#include \u003cbits/stdc++.h\u003e\n\nusing namespace std;\n\nint saveThePrisoner(int n, int m, int s){\n    // Complete this function\n    m=m%n;\n    return (s+m-1);\n}\n\nint main() {\n    int t;\n    cin \u003e\u003e t;\n    for(int a0 = 0; a0 \u003c t; a0++){\n        int n;\n        int m;\n        int s;\n        cin \u003e\u003e n \u003e\u003e m \u003e\u003e s;\n        int result = saveThePrisoner(n, m, s);\n        cout \u003c\u003c result \u003c\u003c endl;\n    }\n    return 0;\n}\n","score":0.0,"language":"cpp"},{"contest":"Master","challenge":"Save the Prisoner!","code":"#include \u003cbits/stdc++.h\u003e\n\nusing namespace std;\n\nint saveThePrisoner(int n, int m, int s){\n    // Complete this function\n    return ((s+(m%n)-1)%n);\n}\n\nint main() {\n    int t;\n    cin \u003e\u003e t;\n    for(int a0 = 0; a0 \u003c t; a0++){\n        int n;\n        int m;\n        int s;\n        cin \u003e\u003e n \u003e\u003e m \u003e\u003e s;\n        int result = saveThePrisoner(n, m, s);\n        cout \u003c\u003c result \u003c\u003c endl;\n    }\n    return 0;\n}\n","score":0.146341463415,"language":"cpp"},{"contest":"Master","challenge":"Save the Prisoner!","code":"#include \u003cbits/stdc++.h\u003e\n\nusing namespace std;\n\nlong long saveThePrisoner(long long n, long long m, long long s){\n    // Complete this function\n    return ((s+(m%n)-1)%n);\n}\n\nint main() {\n    int t;\n    cin \u003e\u003e t;\n    for(int a0 = 0; a0 \u003c t; a0++){\n        long long n;\n        long long m;\n        long long s;\n        cin \u003e\u003e n \u003e\u003e m \u003e\u003e s;\n        long long result = saveThePrisoner(n, m, s);\n        cout \u003c\u003c result \u003c\u003c endl;\n    }\n    return 0;\n}\n","score":0.146341463415,"language":"cpp"},{"contest":"Master","challenge":"Save the Prisoner!","code":"#include \u003cbits/stdc++.h\u003e\n\nusing namespace std;\n\nint saveThePrisoner(int n, int m, int s){\n    // Complete this function\n    //cout\u003c\u003cm%n\u003c\u003cendl;\n    return ((s+m-2)%n+1);\n}\n\nint main() {\n    int t;\n    cin \u003e\u003e t;\n    for(int a0 = 0; a0 \u003c t; a0++){\n        int n;\n        int m;\n        int s;\n        cin \u003e\u003e n \u003e\u003e m \u003e\u003e s;\n        int result = saveThePrisoner(n, m, s);\n        cout \u003c\u003c result \u003c\u003c endl;\n    }\n    return 0;\n}\n","score":1.0,"language":"cpp"},{"contest":"Master","challenge":"Kangaroo","code":"#include \u003cbits/stdc++.h\u003e\n\nusing namespace std;\n\nstring kangaroo(int x1, int v1, int x2, int v2) {\n    // Complete this function\n    if(v1\u003c=v2)\n        return \"NO\";\n    else if((x2-x1)%(v2-v1)==0)\n        return \"YES\";\n    else\n        return \"NO\";\n}\n\nint main() {\n    int x1;\n    int v1;\n    int x2;\n    int v2;\n    cin \u003e\u003e x1 \u003e\u003e v1 \u003e\u003e x2 \u003e\u003e v2;\n    string result = kangaroo(x1, v1, x2, v2);\n    cout \u003c\u003c result \u003c\u003c endl;\n    return 0;\n}\n","score":1.0,"language":"cpp"},{"contest":"Master","challenge":"Birthday Chocolate","code":"#include \u003cbits/stdc++.h\u003e\n\nusing namespace std;\n\nint solve(int n, vector \u003c int \u003e s, int d, int m)\n{\n    // Complete this function\n    int count=0;\n    for(int i=0;i\u003c=n-m;i++)\n    {\n        int sum=0;\n        for(int j=i;j\u003cm+i;j++)\n            sum=sum+s[j];\n        if(sum==d)\n            ++count;\n    }\n    return count;\n}\n\nint main() {\n    int n;\n    cin \u003e\u003e n;\n    vector\u003cint\u003e s(n);\n    for(int s_i = 0; s_i \u003c n; s_i++){\n       cin \u003e\u003e s[s_i];\n    }\n    int d;\n    int m;\n    cin \u003e\u003e d \u003e\u003e m;\n    int result = solve(n, s, d, m);\n    cout \u003c\u003c result \u003c\u003c endl;\n    return 0;\n}\n","score":1.0,"language":"cpp"},{"contest":"Master","challenge":"Sock Merchant","code":"#include \u003cbits/stdc++.h\u003e\n\nusing namespace std;\n\nint sockMerchant(int n, vector \u003cint\u003e ar) {\n    // Complete this function\n    int pairs=0;\n    for(int i=0;i\u003cn;i++)\n    {\n        if(ar[i]!=0)\n            pairs+=count(ar.begin(),ar.end(),ar[i])/2;\n        else\n            continue;\n        for(int j=n-1;j\u003e=0;j--)\n            if(ar[j]==ar[i])\n                ar[j]=0;\n    }\n    return pairs;\n}\n\nint main() {\n    int n;\n    cin \u003e\u003e n;\n    vector\u003cint\u003e ar(n);\n    for(int ar_i = 0; ar_i \u003c n; ar_i++){\n       cin \u003e\u003e ar[ar_i];\n    }\n    int result = sockMerchant(n, ar);\n    cout \u003c\u003c result \u003c\u003c endl;\n    return 0;\n}\n","score":1.0,"language":"cpp"},{"contest":"Master","challenge":"Sock Merchant","code":"#include \u003cbits/stdc++.h\u003e\nusing namespace std;\n\n\nint main() {\n\tint n;\n    cin\u003e\u003en;\n\tint freq[101] = {};\n\tfor(int i = 0; i \u003c n; i++) {\n        int c;\n        cin \u003e\u003e c;\n        freq[c]++;\n    }\n\n\tint res = 0;\n\tfor(int i = 0; i \u003c= 100; i++){\n         res += freq[i] / 2;\n     }\n\tcout \u003c\u003c res \u003c\u003c endl;\n\treturn 0;\n}","score":1.0,"language":"cpp"},{"contest":"Master","challenge":"Divisible Sum Pairs","code":"#include \u003cbits/stdc++.h\u003e\n\nusing namespace std;\n\nint divisibleSumPairs(int n, int k, vector \u003cint\u003e ar) {\n    // Complete this function\n    int count=0;\n    for(int i=0;i\u003cn;i++)\n        for(int j=i+1;j\u003cn;j++)\n            if((ar[i]+ar[j])%k==0)\n                ++count;\n    return count;\n}\n\nint main() {\n    int n;\n    int k;\n    cin \u003e\u003e n \u003e\u003e k;\n    vector\u003cint\u003e ar(n);\n    for(int ar_i = 0; ar_i \u003c n; ar_i++){\n       cin \u003e\u003e ar[ar_i];\n    }\n    int result = divisibleSumPairs(n, k, ar);\n    cout \u003c\u003c result \u003c\u003c endl;\n    return 0;\n}\n","score":1.0,"language":"cpp"},{"contest":"Master","challenge":"Divisible Sum Pairs","code":"#include \u003cbits/stdc++.h\u003e\n\nusing namespace std;\n\nint divisibleSumPairs(int n, int k, vector \u003cint\u003e ar)\n{\n    // Complete this function\n    int count[k]={0},pairs=0;\n    for(int i =0;i\u003cn;i++)\n        ++count[ar[i]%k];\n    pairs+=count[0]*(count[0]-1)/2;\n    for(int i=1;i\u003c=k/2 \u0026\u0026 i!=k-i;i++)\n        pairs+=count[i]*count[k-1];\n    if(k%2==0)\n        pairs+=count[k/2]*(count[k/2]-1)/2;\n    return pairs;\n}\nint main() {\n    int n;\n    int k;\n    cin \u003e\u003e n \u003e\u003e k;\n    vector\u003cint\u003e ar(n);\n    for(int ar_i = 0; ar_i \u003c n; ar_i++){\n       cin \u003e\u003e ar[ar_i];\n    }\n    int result = divisibleSumPairs(n, k, ar);\n    cout \u003c\u003c result \u003c\u003c endl;\n    return 0;\n}\n","score":0.210526315789,"language":"cpp"},{"contest":"Master","challenge":"Divisible Sum Pairs","code":"#include \u003cbits/stdc++.h\u003e\n\nusing namespace std;\n\nint divisibleSumPairs(int n, int k, vector \u003cint\u003e ar)\n{\n    // Complete this function\n    int count[k],pairs=0;\n    for(int i =0;i\u003ck;i++)\n        count[i]=0;\n    for(int i =0;i\u003cn;i++)\n        ++count[ar[i]%k];\n    pairs+=count[0]*(count[0]-1)/2;\n    for(int i=1;i\u003c=k/2 \u0026\u0026 i!=k-i;i++)\n        pairs+=count[i]*count[k-1];\n    if(k%2==0)\n        pairs+=count[k/2]*(count[k/2]-1)/2;\n    return pairs;\n}\nint main() {\n    int n;\n    int k;\n    cin \u003e\u003e n \u003e\u003e k;\n    vector\u003cint\u003e ar(n);\n    for(int ar_i = 0; ar_i \u003c n; ar_i++){\n       cin \u003e\u003e ar[ar_i];\n    }\n    int result = divisibleSumPairs(n, k, ar);\n    cout \u003c\u003c result \u003c\u003c endl;\n    return 0;\n}\n","score":0.210526315789,"language":"cpp"},{"contest":"Master","challenge":"Divisible Sum Pairs","code":"#include \u003cbits/stdc++.h\u003e\n\nusing namespace std;\n\nint divisibleSumPairs(int n, int k, vector \u003cint\u003e ar)\n{\n    // Complete this function\n    int count[k],pairs=0;\n    for(int i=0;i\u003ck;i++)\n        count[i]=0;\n    for(int i =0;i\u003cn;i++)\n        ++count[ar[i]%k];\n    pairs+=count[0]*(count[0]-1)/2;\n    for(int i=1;i\u003c=k/2 \u0026\u0026 i!=k-i;i++)\n        pairs+=count[i]*count[k-i];\n    if(k%2==0)\n        pairs+=count[k/2]*(count[k/2]-1)/2;\n    return pairs;\n}\nint main() {\n    int n;\n    int k;\n    cin \u003e\u003e n \u003e\u003e k;\n    vector\u003cint\u003e ar(n);\n    for(int ar_i = 0; ar_i \u003c n; ar_i++){\n       cin \u003e\u003e ar[ar_i];\n    }\n    int result = divisibleSumPairs(n, k, ar);\n    cout \u003c\u003c result \u003c\u003c endl;\n    return 0;\n}\n","score":1.0,"language":"cpp"},{"contest":"Master","challenge":"Migratory Birds","code":"#include \u003cbits/stdc++.h\u003e\n\nusing namespace std;\n\nint migratoryBirds(int n, vector \u003cint\u003e ar) {\n    // Complete this function\n    int count[6]={0,0,0,0,0,0};\n    for(int i=0;i\u003cn;i++)\n        ++count[ar[i]];\n    int bird=1;\n    for(int i=2;i\u003c6;i++)\n        if(ar[bird]\u003car[i])\n            bird=i;\n    return bird;\n}\n\nint main() {\n    int n;\n    cin \u003e\u003e n;\n    vector\u003cint\u003e ar(n);\n    for(int ar_i = 0; ar_i \u003c n; ar_i++){\n       cin \u003e\u003e ar[ar_i];\n    }\n    int result = migratoryBirds(n, ar);\n    cout \u003c\u003c result \u003c\u003c endl;\n    return 0;\n}\n","score":0.0,"language":"cpp"},{"contest":"Master","challenge":"Migratory Birds","code":"#include \u003cbits/stdc++.h\u003e\n\nusing namespace std;\n\nint migratoryBirds(int n, vector \u003cint\u003e ar) {\n    // Complete this function\n    int count[6]={0,0,0,0,0,0};\n    for(int i=0;i\u003cn;i++)\n        ++count[ar[i]];\n    int bird=1;\n    for(int i=2;i\u003c6;i++)\n        if(count[bird]\u003ccount[i])\n            bird=i;\n    return bird;\n}\n\nint main() {\n    int n;\n    cin \u003e\u003e n;\n    vector\u003cint\u003e ar(n);\n    for(int ar_i = 0; ar_i \u003c n; ar_i++){\n       cin \u003e\u003e ar[ar_i];\n    }\n    int result = migratoryBirds(n, ar);\n    cout \u003c\u003c result \u003c\u003c endl;\n    return 0;\n}\n","score":1.0,"language":"cpp"},{"contest":"Master","challenge":"Day of the Programmer","code":"#include \u003cbits/stdc++.h\u003e\n\nusing namespace std;\n\nvoid solve(int year){\n    // Complete this function\n    if(year==1918)\n        cout\u003c\u003c\"26.09.1918\";\n    else if(year%4==0)\n        cout\u003c\u003c\"12.09.\"\u003c\u003cyear;\n    else\n        cout\u003c\u003c\"13.09.\"\u003c\u003cyear;\n}\n\nint main() {\n    int year;\n    cin \u003e\u003e year;\n    solve(year);\n    return 0;\n}\n","score":0.76,"language":"cpp"},{"contest":"Master","challenge":"Day of the Programmer","code":"#include \u003cbits/stdc++.h\u003e\n\nusing namespace std;\n\nvoid solve(int year){\n    // Complete this function\n    if(year==1918)\n        cout\u003c\u003c\"26.09.1918\";\n    else if((year%400==0) ||(year%100!=0 \u0026\u0026 year%4==0))\n        cout\u003c\u003c\"12.09.\"\u003c\u003cyear;\n    else\n        cout\u003c\u003c\"13.09.\"\u003c\u003cyear;\n}\n\nint main() {\n    int year;\n    cin \u003e\u003e year;\n    solve(year);\n    return 0;\n}\n","score":0.88,"language":"cpp"},{"contest":"Master","challenge":"Day of the Programmer","code":"#include \u003cbits/stdc++.h\u003e\n\nusing namespace std;\n\nvoid solve(int year){\n    // Complete this function\n    if(year==1918)\n        cout\u003c\u003c\"26.09.1918\";\n    else if((year\u003c1918 \u0026\u0026 year%4==0) || (year\u003e1918 \u0026\u0026 (year%400==0 ||(year%100!=0 \u0026\u0026 year%4==0))))\n        cout\u003c\u003c\"12.09.\"\u003c\u003cyear;\n    else\n        cout\u003c\u003c\"13.09.\"\u003c\u003cyear;\n}\n\nint main() {\n    int year;\n    cin \u003e\u003e year;\n    solve(year);\n    return 0;\n}\n","score":1.0,"language":"cpp"},{"contest":"Master","challenge":"Bon Appétit","code":"#include \u003cmap\u003e\n#include \u003cset\u003e\n#include \u003clist\u003e\n#include \u003ccmath\u003e\n#include \u003cctime\u003e\n#include \u003cdeque\u003e\n#include \u003cqueue\u003e\n#include \u003cstack\u003e\n#include \u003cstring\u003e\n#include \u003cbitset\u003e\n#include \u003ccstdio\u003e\n#include \u003climits\u003e\n#include \u003cvector\u003e\n#include \u003cclimits\u003e\n#include \u003ccstring\u003e\n#include \u003ccstdlib\u003e\n#include \u003cfstream\u003e\n#include \u003cnumeric\u003e\n#include \u003csstream\u003e\n#include \u003ciostream\u003e\n#include \u003calgorithm\u003e\n#include \u003cunordered_map\u003e\n\nusing namespace std;\nint main() {\n    /* Enter your code here. Read input from STDIN. Print output to STDOUT */\n    int n,k,sum=0,b;\n    cin\u003e\u003en\u003e\u003ek;\n    int pr[n];\n    for(int i=0;i\u003cn;i++)\n        cin\u003e\u003epr[i];\n    cin\u003e\u003eb;\n    for(int i=0;i\u003cn;i++)\n        sum+=pr[i];\n    if((sum-pr[k])/2!=b)\n        cout\u003c\u003cb-((sum-pr[k])/2);\n    else\n        cout\u003c\u003c\"Bon Appetit\";\n    return 0;\n}\n","score":1.0,"language":"cpp14"},{"contest":"Master","challenge":"Drawing Book ","code":"#include \u003cbits/stdc++.h\u003e\n\nusing namespace std;\n\n/*\n * Complete the pageCount function below.\n */\nint pageCount(int n, int p) {\n    /*\n     * Write your code here.\n     */\n    return p\u003c=n/2?p/2:(n-p)/2;\n\n}\n\nint main()\n{\n    ofstream fout(getenv(\"OUTPUT_PATH\"));\n\n    int n;\n    cin \u003e\u003e n;\n    cin.ignore(numeric_limits\u003cstreamsize\u003e::max(), '\\n');\n\n    int p;\n    cin \u003e\u003e p;\n    cin.ignore(numeric_limits\u003cstreamsize\u003e::max(), '\\n');\n\n    int result = pageCount(n, p);\n\n    fout \u003c\u003c result \u003c\u003c \"\\n\";\n\n    fout.close();\n\n    return 0;\n}\n","score":0.96,"language":"cpp"},{"contest":"Master","challenge":"Drawing Book ","code":"#include \u003cbits/stdc++.h\u003e\n\nusing namespace std;\n\n/*\n * Complete the pageCount function below.\n */\nint pageCount(int n, int p) {\n    /*\n     * Write your code here.\n     */\n    return p\u003c=n/2?p/2:(n/2-p/2);\n\n}\n\nint main()\n{\n    ofstream fout(getenv(\"OUTPUT_PATH\"));\n\n    int n;\n    cin \u003e\u003e n;\n    cin.ignore(numeric_limits\u003cstreamsize\u003e::max(), '\\n');\n\n    int p;\n    cin \u003e\u003e p;\n    cin.ignore(numeric_limits\u003cstreamsize\u003e::max(), '\\n');\n\n    int result = pageCount(n, p);\n\n    fout \u003c\u003c result \u003c\u003c \"\\n\";\n\n    fout.close();\n\n    return 0;\n}\n","score":1.0,"language":"cpp"},{"contest":"Master","challenge":"Counting Valleys","code":"#include \u003cbits/stdc++.h\u003e\n\nusing namespace std;\n\nint countingValleys(int n, string s) {\n    // Complete this function\n    int level=0,count=0;\n    bool flagold=false,flagnew;\n    for(int i=0;i\u003cn;i++)\n    {\n        if(s[i]=='U')\n            ++level;\n        else\n            --level;\n        if(level\u003c0)\n            flagnew=true;\n        else\n            flagnew=false;\n        if(flagold!=flagnew)\n            ++count;\n        flagold=flagnew;\n    }\n    return count/2;\n}\n\nint main() {\n    int n;\n    cin \u003e\u003e n;\n    string s;\n    cin \u003e\u003e s;\n    int result = countingValleys(n, s);\n    cout \u003c\u003c result \u003c\u003c endl;\n    return 0;\n}\n","score":1.0,"language":"cpp"},{"contest":"Master","challenge":"Modified Kaprekar Numbers","code":"#include \u003cbits/stdc++.h\u003e\n\nusing namespace std;\n\nvector \u003cint\u003e kaprekarNumbers(int p, int q) {\n    // Complete this function\n    vector \u003cint\u003e modifiedkaprekarnumbers;\n    long square;int d;\n    for(int i=p;i\u003c=q;i++)\n    {\n        square=pow(i,2);\n        //cout\u003c\u003csquare\u003c\u003c\" \";\n        d=log10(square)+1;\n        //cout\u003c\u003cd\u003c\u003c\" \";\n        //cout\u003c\u003c(square/(int)pow(10,d/2))\u003c\u003c\" \";\n        if(i==((square/(int)pow(10,(d+1)/2))+(square%(int)pow(10,(d+1)/2))))\n            modifiedkaprekarnumbers.push_back(i);\n    }\n    //if(modifiedkaprekarnumbers.size()==0)\n    //    cout\u003c\u003c\"INVALID RANGE\";\n    return modifiedkaprekarnumbers;\n}\n\nint main() {\n    int p;\n    cin \u003e\u003e p;\n    int q;\n    cin \u003e\u003e q;\n    vector \u003cint\u003e result = kaprekarNumbers(p, q);\n    for (ssize_t i = 0; i \u003c result.size(); i++) {\n        cout \u003c\u003c result[i] \u003c\u003c (i != result.size() - 1 ? \" \" : \"\");\n    }\n    cout \u003c\u003c endl;\n\n\n    return 0;\n}\n","score":0.8,"language":"cpp"},{"contest":"Master","challenge":"Modified Kaprekar Numbers","code":"#include \u003cbits/stdc++.h\u003e\n\nusing namespace std;\n\nvector \u003cint\u003e kaprekarNumbers(int p, int q) {\n    // Complete this function\n    vector \u003cint\u003e modifiedkaprekarnumbers;\n    long square;int d;\n    for(int i=p;i\u003c=q;i++)\n    {\n        square=pow(i,2);\n        //cout\u003c\u003csquare\u003c\u003c\" \";\n        d=log10(square)+1;\n        //cout\u003c\u003cd\u003c\u003c\" \";\n        //cout\u003c\u003c(square/(int)pow(10,d/2))\u003c\u003c\" \";\n        if(i==((square/(int)pow(10,(d+1)/2))+(square%(int)pow(10,(d+1)/2))))\n            modifiedkaprekarnumbers.push_back(i);\n    }\n    if(modifiedkaprekarnumbers.size()==0)\n        cout\u003c\u003c\"INVALID RANGE\";\n    return modifiedkaprekarnumbers;\n}\n\nint main() {\n    int p;\n    cin \u003e\u003e p;\n    int q;\n    cin \u003e\u003e q;\n    vector \u003cint\u003e result = kaprekarNumbers(p, q);\n    for (ssize_t i = 0; i \u003c result.size(); i++) {\n        cout \u003c\u003c result[i] \u003c\u003c (i != result.size() - 1 ? \" \" : \"\");\n    }\n    cout \u003c\u003c endl;\n\n\n    return 0;\n}\n","score":1.0,"language":"cpp"},{"contest":"Master","challenge":"Beautiful Triplets","code":"#include \u003cbits/stdc++.h\u003e\n\nusing namespace std;\n\nint beautifulTriplets(int d, vector \u003cint\u003e arr) {\n    // Complete this function\n    int count=0;\n    for(int i=0;i\u003carr.size();i++)\n    {\n        for(int j=i+1;j\u003carr.size();j++)\n        {\n            if(arr[j]-arr[i]!=d)\n                continue;\n            for(int k=j+1;k\u003carr.size();k++)\n                if(arr[k]-arr[j]==d)\n                    ++count;\n        }\n    }\n    return count;\n}\n\nint main() {\n    int n;\n    int d;\n    cin \u003e\u003e n \u003e\u003e d;\n    vector\u003cint\u003e arr(n);\n    for(int arr_i = 0; arr_i \u003c n; arr_i++){\n       cin \u003e\u003e arr[arr_i];\n    }\n    int result = beautifulTriplets(d, arr);\n    cout \u003c\u003c result \u003c\u003c endl;\n    return 0;\n}\n","score":1.0,"language":"cpp"},{"contest":"Master","challenge":"Beautiful Triplets","code":"#include \u003cbits/stdc++.h\u003e\n\nusing namespace std;\n\nint beautifulTriplets(int d, vector \u003cint\u003e arr) {\n    // Complete this function\n    int count=0;\n    for(int i=0;i\u003carr.size();i++)\n        for(int j=i+1;j\u003carr.size();j++)\n            for(int k=j+1;k\u003carr.size();k++)\n                if(arr[j]-arr[i]==d \u0026\u0026 arr[k]-arr[j]==d)\n                    ++count;\n    return count;\n}\n\nint main() {\n    int n;\n    int d;\n    cin \u003e\u003e n \u003e\u003e d;\n    vector\u003cint\u003e arr(n);\n    for(int arr_i = 0; arr_i \u003c n; arr_i++){\n       cin \u003e\u003e arr[arr_i];\n    }\n    int result = beautifulTriplets(d, arr);\n    cout \u003c\u003c result \u003c\u003c endl;\n    return 0;\n}\n","score":0.444444444444,"language":"cpp"},{"contest":"Master","challenge":"Beautiful Triplets","code":"#include \u003cbits/stdc++.h\u003e\n\nusing namespace std;\n\nint beautifulTriplets(int d, vector \u003cint\u003e arr) {\n    // Complete this function\n    int count=0;\n    for(int i=0;i\u003carr.size();i++)\n    {\n        for(int j=i+1;j\u003carr.size();j++)\n        {\n            if(arr[j]-arr[i]!=d)\n                continue;\n            for(int k=j+1;k\u003carr.size();k++)\n                if(arr[k]-arr[j]==d)\n                    ++count;\n        }\n    }\n    return count;\n}\n\nint main() {\n    int n;\n    int d;\n    cin \u003e\u003e n \u003e\u003e d;\n    vector\u003cint\u003e arr(n);\n    for(int arr_i = 0; arr_i \u003c n; arr_i++){\n       cin \u003e\u003e arr[arr_i];\n    }\n    int result = beautifulTriplets(d, arr);\n    cout \u003c\u003c result \u003c\u003c endl;\n    return 0;\n}\n","score":1.0,"language":"cpp"},{"contest":"Master","challenge":"Sherlock and Squares","code":"#include \u003cbits/stdc++.h\u003e\n\nusing namespace std;\n\nint squares(int a, int b) {\n    // Complete this function\n    int i=ceil(sqrt(a));\n    int j=sqrt(b);\n    return j-i+1;\n}\n\nint main() {\n    int q;\n    cin \u003e\u003e q;\n    for(int a0 = 0; a0 \u003c q; a0++){\n        int a;\n        int b;\n        cin \u003e\u003e a \u003e\u003e b;\n        int result = squares(a, b);\n        cout \u003c\u003c result \u003c\u003c endl;\n    }\n    return 0;\n}\n","score":1.0,"language":"cpp"},{"contest":"Master","challenge":"Strange Counter","code":"#include \u003cbits/stdc++.h\u003e\n\nusing namespace std;\n\n/*\n * Complete the strangeCounter function below.\n */\nlong strangeCounter(long t) {\n    /*\n     * Write your code here.\n     */\n    long i,count=0,T;\n    for(i=1;3*i\u003ct;i=2*i+1)++count;\n    i=(i-1)/2;\n    t=t-3*i;\n    T=3*pow(2,count);\n    //cout\u003c\u003ci\u003c\u003c\" \"\u003c\u003ccount\u003c\u003c\" \"\u003c\u003ct\u003c\u003c\" \"\u003c\u003cT\u003c\u003cendl;\n    return T-t+1;\n}\n\nint main()\n{\n    ofstream fout(getenv(\"OUTPUT_PATH\"));\n\n    long t;\n    cin \u003e\u003e t;\n    cin.ignore(numeric_limits\u003cstreamsize\u003e::max(), '\\n');\n\n    long result = strangeCounter(t);\n\n    fout \u003c\u003c result \u003c\u003c \"\\n\";\n\n    fout.close();\n\n    return 0;\n}\n","score":1.0,"language":"cpp"},{"contest":"Master","challenge":"Electronics Shop","code":"#include \u003cbits/stdc++.h\u003e\n\nusing namespace std;\n\nvector\u003cstring\u003e split_string(string);\n\n/*\n * Complete the getMoneySpent function below.\n */\nint getMoneySpent(vector\u003cint\u003e keyboards, vector\u003cint\u003e drives, int b) {\n    /*\n     * Write your code here.\n     */\n    int max=-1;\n    for(int i=0;i\u003ckeyboards.size();i++)\n        for(int j=0;j\u003cdrives.size();j++)\n            if(keyboards[i]+drives[j]\u003emax \u0026\u0026 keyboards[i]+drives[j]\u003c=b)\n                max=keyboards[i]+drives[j];\n    return max;\n}\n\nint main()\n{\n    ofstream fout(getenv(\"OUTPUT_PATH\"));\n\n    string bnm_temp;\n    getline(cin, bnm_temp);\n\n    vector\u003cstring\u003e bnm = split_string(bnm_temp);\n\n    int b = stoi(bnm[0]);\n\n    int n = stoi(bnm[1]);\n\n    int m = stoi(bnm[2]);\n\n    string keyboards_temp_temp;\n    getline(cin, keyboards_temp_temp);\n\n    vector\u003cstring\u003e keyboards_temp = split_string(keyboards_temp_temp);\n\n    vector\u003cint\u003e keyboards(n);\n\n    for (int keyboards_itr = 0; keyboards_itr \u003c n; keyboards_itr++) {\n        int keyboards_item = stoi(keyboards_temp[keyboards_itr]);\n\n        keyboards[keyboards_itr] = keyboards_item;\n    }\n\n    string drives_temp_temp;\n    getline(cin, drives_temp_temp);\n\n    vector\u003cstring\u003e drives_temp = split_string(drives_temp_temp);\n\n    vector\u003cint\u003e drives(m);\n\n    for (int drives_itr = 0; drives_itr \u003c m; drives_itr++) {\n        int drives_item = stoi(drives_temp[drives_itr]);\n\n        drives[drives_itr] = drives_item;\n    }\n\n    /*\n     * The maximum amount of money she can spend on a keyboard and USB drive, or -1 if she can't purchase both items\n     */\n\n    int moneySpent = getMoneySpent(keyboards, drives, b);\n\n    fout \u003c\u003c moneySpent \u003c\u003c \"\\n\";\n\n    fout.close();\n\n    return 0;\n}\n\nvector\u003cstring\u003e split_string(string input_string) {\n    string::iterator new_end = unique(input_string.begin(), input_string.end(), [] (const char \u0026x, const char \u0026y) {\n        return x == y and x == ' ';\n    });\n\n    input_string.erase(new_end, input_string.end());\n\n    while (input_string[input_string.length() - 1] == ' ') {\n        input_string.pop_back();\n    }\n\n    vector\u003cstring\u003e splits;\n    char delimiter = ' ';\n\n    size_t i = 0;\n    size_t pos = input_string.find(delimiter);\n\n    while (pos != string::npos) {\n        splits.push_back(input_string.substr(i, pos - i));\n\n        i = pos + 1;\n        pos = input_string.find(delimiter, i);\n    }\n\n    splits.push_back(input_string.substr(i, min(pos, input_string.length()) - i + 1));\n\n    return splits;\n}\n","score":1.0,"language":"cpp"},{"contest":"Master","challenge":"Cats and a Mouse","code":"#include \u003cbits/stdc++.h\u003e\n\nusing namespace std;\n\nvector\u003cstring\u003e split_string(string);\n\n\n/*\n * Complete the catAndMouse function below.\n */\nstring catAndMouse(int x, int y, int z) {\n    /*\n     * Write your code here.\n     */\n    return (abs(x-z)\u003cabs(y-z)?\"Cat A\":(abs(x-z)==abs(y-z))?\"Mouse C\":\"Cat B\");\n\n}\n\n\nint main()\n{\n    ofstream fout(getenv(\"OUTPUT_PATH\"));\n\n    int q;\n    cin \u003e\u003e q;\n    cin.ignore(numeric_limits\u003cstreamsize\u003e::max(), '\\n');\n\n    for (int q_itr = 0; q_itr \u003c q; q_itr++) {\n        string xyz_temp;\n        getline(cin, xyz_temp);\n\n        vector\u003cstring\u003e xyz = split_string(xyz_temp);\n\n        int x = stoi(xyz[0]);\n\n        int y = stoi(xyz[1]);\n\n        int z = stoi(xyz[2]);\n\n        string result = catAndMouse(x, y, z);\n\n        fout \u003c\u003c result \u003c\u003c \"\\n\";\n    }\n\n    fout.close();\n\n    return 0;\n}\n\nvector\u003cstring\u003e split_string(string input_string) {\n    string::iterator new_end = unique(input_string.begin(), input_string.end(), [] (const char \u0026x, const char \u0026y) {\n        return x == y and x == ' ';\n    });\n\n    input_string.erase(new_end, input_string.end());\n\n    while (input_string[input_string.length() - 1] == ' ') {\n        input_string.pop_back();\n    }\n\n    vector\u003cstring\u003e splits;\n    char delimiter = ' ';\n\n    size_t i = 0;\n    size_t pos = input_string.find(delimiter);\n\n    while (pos != string::npos) {\n        splits.push_back(input_string.substr(i, pos - i));\n\n        i = pos + 1;\n        pos = input_string.find(delimiter, i);\n    }\n\n    splits.push_back(input_string.substr(i, min(pos, input_string.length()) - i + 1));\n\n    return splits;\n}\n","score":1.0,"language":"cpp"},{"contest":"Master","challenge":"Picking Numbers","code":"#include \u003cbits/stdc++.h\u003e\n\nusing namespace std;\n\nint pickingNumbers(vector \u003cint\u003e a) {\n    // Complete this function\n    int arr[101],i,max=0;\n    for(i=0;i\u003c101;i++)\n        arr[i]=0;\n    for(i=0;i\u003ca.size();i++)\n        ++arr[a[i]];\n    for(i=0;i\u003c100;i++)\n        if(arr[i]+arr[i+1]\u003emax)\n            max=arr[i]+arr[i+1];\n    return max;\n}\n\nint main() {\n    int n;\n    cin \u003e\u003e n;\n    vector\u003cint\u003e a(n);\n    for(int a_i = 0; a_i \u003c n; a_i++){\n       cin \u003e\u003e a[a_i];\n    }\n    int result = pickingNumbers(a);\n    cout \u003c\u003c result \u003c\u003c endl;\n    return 0;\n}\n","score":1.0,"language":"cpp"},{"contest":"Master","challenge":"Climbing the Leaderboard","code":"#include \u003cbits/stdc++.h\u003e\nusing namespace std;\n\nint main()\n{\n    vector\u003cint\u003e scores(1),alice;\n    int n,m,x;\n    cin\u003e\u003en;\n    cin\u003e\u003escores[0];\n    for(int i=1;i\u003cn;i++)\n    {\n        cin\u003e\u003ex;\n        if(x!=scores.back())\n           scores.push_back(x);\n    }\n    scores.push_back(0);\n    cin\u003e\u003em;\n    for(int i=0;i\u003cm;i++)\n    {\n        cin\u003e\u003ex;\n        alice.push_back(x);\n    }\n    int i=scores.size()-1,j;\n    for(j=0;j\u003cm;j++)\n    {\n        for(;i\u003e=0;i--)\n            if(scores[i]\u003ealice[j])\n                break;\n        cout\u003c\u003ci+2\u003c\u003cendl;\n    }\n}\n","score":1.0,"language":"cpp"},{"contest":"Master","challenge":"Designer PDF Viewer","code":"#include \u003cbits/stdc++.h\u003e\n\nusing namespace std;\n\nint designerPdfViewer(vector \u003cint\u003e h, string word) {\n    // Complete this function\n    int max=0;\n    for(int i =0;i\u003cword.length();i++)\n        if(h[word[i]-'a']\u003emax)\n            max=h[word[i]-'a'];\n    return max*word.length();\n}\n\nint main() {\n    vector\u003cint\u003e h(26);\n    for(int h_i = 0; h_i \u003c 26; h_i++){\n       cin \u003e\u003e h[h_i];\n    }\n    string word;\n    cin \u003e\u003e word;\n    int result = designerPdfViewer(h, word);\n    cout \u003c\u003c result \u003c\u003c endl;\n    return 0;\n}\n","score":1.0,"language":"cpp"},{"contest":"Master","challenge":"The Hurdle Race","code":"#include \u003cbits/stdc++.h\u003e\n\nusing namespace std;\n\nint hurdleRace(int k, vector \u003cint\u003e height) {\n    // Complete this function\n    int max=0;\n    for(int i=0;i\u003cheight.size();i++)\n        if(height[i]\u003emax)\n            max=height[i];\n    return (max\u003ek?max-k:0);\n}\n\nint main() {\n    int n;\n    int k;\n    cin \u003e\u003e n \u003e\u003e k;\n    vector\u003cint\u003e height(n);\n    for(int height_i = 0; height_i \u003c n; height_i++){\n       cin \u003e\u003e height[height_i];\n    }\n    int result = hurdleRace(k, height);\n    cout \u003c\u003c result \u003c\u003c endl;\n    return 0;\n}\n","score":1.0,"language":"cpp"},{"contest":"Master","challenge":"Forming a Magic Square","code":"#include \u003cbits/stdc++.h\u003e\n\nusing namespace std;\n\nint formingMagicSquare(vector \u003c vector\u003cint\u003e \u003e s)\n{\n    // Complete this function\n    int a[3][3]={8,1,6,3,5,7,4,9,2},sum[8]={0,0,0,0,0,0,0,0};\n    int i,j,k,min;\n    for(k=0;k\u003c8;k++)\n    {\n        for(i=0;i\u003c3;i++)\n            for(j=0;j\u003c3;j++)\n                sum[k]+=abs(a[i][j]-s[i][j]);\n        if(k==4)\n        {\n            //mirror array\n            for(int i=0;i\u003c3;i++)\n            {\n                a[i][0]=a[i][0]+a[i][2];\n                a[i][2]=a[i][0]-a[i][2];\n                a[i][0]=a[i][0]-a[i][2];\n            }\n        }\n        else\n        {\n            //rotate array\n            int temp=a[0][0]; a[0][0]=a[2][0]; a[2][0]=a[2][2]; a[2][2]=a[0][2]; a[0][2]=temp;\n            temp=a[0][1]; a[0][1]=a[1][0]; a[1][0]=a[2][1]; a[2][1]=a[1][2]; a[1][2]=temp;\n        }\n    }\n    min=sum[0];\n    for(k=1;k\u003c8;k++)\n        if(min\u003esum[k])\n            min=sum[k];\n    return min;\n}\n\nint main() {\n    vector\u003c vector\u003cint\u003e \u003e s(3,vector\u003cint\u003e(3));\n    for(int s_i = 0;s_i \u003c 3;s_i++){\n       for(int s_j = 0;s_j \u003c 3;s_j++){\n          cin \u003e\u003e s[s_i][s_j];\n       }\n    }\n    int result = formingMagicSquare(s);\n    cout \u003c\u003c result \u003c\u003c endl;\n    return 0;\n}\n","score":0.952380952381,"language":"cpp"},{"contest":"Master","challenge":"Forming a Magic Square","code":"#include \u003cbits/stdc++.h\u003e\n\nusing namespace std;\n\nint formingMagicSquare(vector \u003c vector\u003cint\u003e \u003e s)\n{\n    // Complete this function\n    int a[3][3]={8,1,6,3,5,7,4,9,2},sum[8]={0,0,0,0,0,0,0,0};\n    int i,j,k,min;\n    for(k=0;k\u003c8;k++)\n    {\n        if(k==4)\n        {\n            //mirror array\n            for(int i=0;i\u003c3;i++)\n            {\n                a[i][0]=a[i][0]+a[i][2];\n                a[i][2]=a[i][0]-a[i][2];\n                a[i][0]=a[i][0]-a[i][2];\n            }\n        }\n        else\n        {\n            //rotate array\n            int temp=a[0][0]; a[0][0]=a[2][0]; a[2][0]=a[2][2]; a[2][2]=a[0][2]; a[0][2]=temp;\n            temp=a[0][1]; a[0][1]=a[1][0]; a[1][0]=a[2][1]; a[2][1]=a[1][2]; a[1][2]=temp;\n        }\n        for(i=0;i\u003c3;i++)\n            for(j=0;j\u003c3;j++)\n                sum[k]+=abs(a[i][j]-s[i][j]);\n    }\n    min=sum[0];\n    for(k=1;k\u003c8;k++)\n        if(min\u003esum[k])\n            min=sum[k];\n    return min;\n}\n\nint main() {\n    vector\u003c vector\u003cint\u003e \u003e s(3,vector\u003cint\u003e(3));\n    for(int s_i = 0;s_i \u003c 3;s_i++){\n       for(int s_j = 0;s_j \u003c 3;s_j++){\n          cin \u003e\u003e s[s_i][s_j];\n       }\n    }\n    int result = formingMagicSquare(s);\n    cout \u003c\u003c result \u003c\u003c endl;\n    return 0;\n}\n","score":1.0,"language":"cpp"},{"contest":"Master","challenge":"Day 4: Class vs. Instance","code":"class Person{\n    public:\n        int age;\n        Person(int initialAge);\n        void amIOld();\n        void yearPasses();\n    };\n\n    Person::Person(int initialAge){\n        // Add some more code to run some checks on initialAge\n        if(initialAge\u003c0)\n        {\n            cout\u003c\u003c\"Age is not valid, setting age to 0.\"\u003c\u003cendl;\n            age=0;\n        }\n        else\n            age=initialAge;\n\n    }\n\n    void Person::amIOld(){\n        // Do some computations in here and print out the correct statement to the console \n        if(age\u003c13)\n            cout\u003c\u003c\"You are young.\"\u003c\u003cendl;\n        else if(age\u003e17)\n            cout\u003c\u003c\"You are old.\"\u003c\u003cendl;\n        else\n            cout\u003c\u003c\"You are a teenager.\"\u003c\u003cendl;\n    }\n\n    void Person::yearPasses(){\n        // Increment the age of the person in here\n        ++age;\n\n    }","score":1.0,"language":"cpp"},{"contest":"Master","challenge":"Utopian Tree","code":"#include \u003cbits/stdc++.h\u003e\n\nusing namespace std;\n\n// Complete the utopianTree function below.\nint utopianTree(int n)\n{\n    int h=1;\n    for(int i=1;i\u003c=n;i++)\n    {\n        if(i%2!=0)\n            h*=2;\n        else\n            h+=1;\n    }\n    return h;\n}\n\nint main()\n{\n    ofstream fout(getenv(\"OUTPUT_PATH\"));\n\n    int t;\n    cin \u003e\u003e t;\n    cin.ignore(numeric_limits\u003cstreamsize\u003e::max(), '\\n');\n\n    for (int t_itr = 0; t_itr \u003c t; t_itr++) {\n        int n;\n        cin \u003e\u003e n;\n        cin.ignore(numeric_limits\u003cstreamsize\u003e::max(), '\\n');\n\n        int result = utopianTree(n);\n\n        fout \u003c\u003c result \u003c\u003c \"\\n\";\n    }\n\n    fout.close();\n\n    return 0;\n}\n","score":1.0,"language":"cpp"},{"contest":"Master","challenge":"Angry Professor","code":"#include \u003cbits/stdc++.h\u003e\n\nusing namespace std;\n\nvector\u003cstring\u003e split_string(string);\n\n// Complete the angryProfessor function below.\nstring angryProfessor(int k, vector\u003cint\u003e a) {\n    int count=0;\n    for(int i=0;i\u003ca.size();i++)\n        if(a[i]\u003c=0)\n            ++count;\n    return count\u003ck?\"YES\":\"NO\";\n}\n\nint main()\n{\n    ofstream fout(getenv(\"OUTPUT_PATH\"));\n\n    int t;\n    cin \u003e\u003e t;\n    cin.ignore(numeric_limits\u003cstreamsize\u003e::max(), '\\n');\n\n    for (int t_itr = 0; t_itr \u003c t; t_itr++) {\n        string nk_temp;\n        getline(cin, nk_temp);\n\n        vector\u003cstring\u003e nk = split_string(nk_temp);\n\n        int n = stoi(nk[0]);\n\n        int k = stoi(nk[1]);\n\n        string a_temp_temp;\n        getline(cin, a_temp_temp);\n\n        vector\u003cstring\u003e a_temp = split_string(a_temp_temp);\n\n        vector\u003cint\u003e a(n);\n\n        for (int i = 0; i \u003c n; i++) {\n            int a_item = stoi(a_temp[i]);\n\n            a[i] = a_item;\n        }\n\n        string result = angryProfessor(k, a);\n\n        fout \u003c\u003c result \u003c\u003c \"\\n\";\n    }\n\n    fout.close();\n\n    return 0;\n}\n\nvector\u003cstring\u003e split_string(string input_string) {\n    string::iterator new_end = unique(input_string.begin(), input_string.end(), [] (const char \u0026x, const char \u0026y) {\n        return x == y and x == ' ';\n    });\n\n    input_string.erase(new_end, input_string.end());\n\n    while (input_string[input_string.length() - 1] == ' ') {\n        input_string.pop_back();\n    }\n\n    vector\u003cstring\u003e splits;\n    char delimiter = ' ';\n\n    size_t i = 0;\n    size_t pos = input_string.find(delimiter);\n\n    while (pos != string::npos) {\n        splits.push_back(input_string.substr(i, pos - i));\n\n        i = pos + 1;\n        pos = input_string.find(delimiter, i);\n    }\n\n    splits.push_back(input_string.substr(i, min(pos, input_string.length()) - i + 1));\n\n    return splits;\n}\n","score":1.0,"language":"cpp"},{"contest":"Master","challenge":"Beautiful Days at the Movies","code":"#include \u003cbits/stdc++.h\u003e\n\nusing namespace std;\n\nvector\u003cstring\u003e split_string(string);\n\n// Complete the beautifulDays function below.\nint reverse(int i)\n{\n    int r=0;\n    while(i\u003e0)\n    {\n        r=(r*10)+(i%10);\n        i/=10;\n    }\n    return r;\n}\nint beautifulDays(int i, int j, int k)\n{\n    int count=0;\n    for(;i\u003c=j;i++)\n    {\n        if(abs(i-reverse(i))%k==0)\n            ++count;\n    }\n    return count;\n}\n\nint main()\n{\n    ofstream fout(getenv(\"OUTPUT_PATH\"));\n\n    string ijk_temp;\n    getline(cin, ijk_temp);\n\n    vector\u003cstring\u003e ijk = split_string(ijk_temp);\n\n    int i = stoi(ijk[0]);\n\n    int j = stoi(ijk[1]);\n\n    int k = stoi(ijk[2]);\n\n    int result = beautifulDays(i, j, k);\n\n    fout \u003c\u003c result \u003c\u003c \"\\n\";\n\n    fout.close();\n\n    return 0;\n}\n\nvector\u003cstring\u003e split_string(string input_string) {\n    string::iterator new_end = unique(input_string.begin(), input_string.end(), [] (const char \u0026x, const char \u0026y) {\n        return x == y and x == ' ';\n    });\n\n    input_string.erase(new_end, input_string.end());\n\n    while (input_string[input_string.length() - 1] == ' ') {\n        input_string.pop_back();\n    }\n\n    vector\u003cstring\u003e splits;\n    char delimiter = ' ';\n\n    size_t i = 0;\n    size_t pos = input_string.find(delimiter);\n\n    while (pos != string::npos) {\n        splits.push_back(input_string.substr(i, pos - i));\n\n        i = pos + 1;\n        pos = input_string.find(delimiter, i);\n    }\n\n    splits.push_back(input_string.substr(i, min(pos, input_string.length()) - i + 1));\n\n    return splits;\n}\n","score":1.0,"language":"cpp"},{"contest":"Master","challenge":"Viral Advertising","code":"#include \u003cbits/stdc++.h\u003e\n\nusing namespace std;\n\n// Complete the viralAdvertising function below.\nint viralAdvertising(int n)\n{\n    int cum=0,p=5;\n    for(int i=1;i\u003c=n;i++)\n    {\n        cum+=p/2;\n        p=p/2*3;\n    }\n    return cum;\n}\n\nint main()\n{\n    ofstream fout(getenv(\"OUTPUT_PATH\"));\n\n    int n;\n    cin \u003e\u003e n;\n    cin.ignore(numeric_limits\u003cstreamsize\u003e::max(), '\\n');\n\n    int result = viralAdvertising(n);\n\n    fout \u003c\u003c result \u003c\u003c \"\\n\";\n\n    fout.close();\n\n    return 0;\n}\n","score":1.0,"language":"cpp"},{"contest":"Master","challenge":"Circular Array Rotation","code":"#include \u003cbits/stdc++.h\u003e\n\nusing namespace std;\n\nvector\u003cstring\u003e split_string(string);\n\n// Complete the circularArrayRotation function below.\nvector\u003cint\u003e circularArrayRotation(vector\u003cint\u003e a, int k, vector\u003cint\u003e queries)\n{\n    vector\u003cint\u003e values;\n    for(int i=0;i\u003cqueries.size();i++)\n        values.push_back(a[(100000*a.size()+queries[i]-k)%a.size()]);\n    return values; \n}\n\nint main()\n{\n    ofstream fout(getenv(\"OUTPUT_PATH\"));\n\n    string nkq_temp;\n    getline(cin, nkq_temp);\n\n    vector\u003cstring\u003e nkq = split_string(nkq_temp);\n\n    int n = stoi(nkq[0]);\n\n    int k = stoi(nkq[1]);\n\n    int q = stoi(nkq[2]);\n\n    string a_temp_temp;\n    getline(cin, a_temp_temp);\n\n    vector\u003cstring\u003e a_temp = split_string(a_temp_temp);\n\n    vector\u003cint\u003e a(n);\n\n    for (int i = 0; i \u003c n; i++) {\n        int a_item = stoi(a_temp[i]);\n\n        a[i] = a_item;\n    }\n\n    vector\u003cint\u003e queries(q);\n\n    for (int i = 0; i \u003c q; i++) {\n        int queries_item;\n        cin \u003e\u003e queries_item;\n        cin.ignore(numeric_limits\u003cstreamsize\u003e::max(), '\\n');\n\n        queries[i] = queries_item;\n    }\n\n    vector\u003cint\u003e result = circularArrayRotation(a, k, queries);\n\n    for (int i = 0; i \u003c result.size(); i++) {\n        fout \u003c\u003c result[i];\n\n        if (i != result.size() - 1) {\n            fout \u003c\u003c \"\\n\";\n        }\n    }\n\n    fout \u003c\u003c \"\\n\";\n\n    fout.close();\n\n    return 0;\n}\n\nvector\u003cstring\u003e split_string(string input_string) {\n    string::iterator new_end = unique(input_string.begin(), input_string.end(), [] (const char \u0026x, const char \u0026y) {\n        return x == y and x == ' ';\n    });\n\n    input_string.erase(new_end, input_string.end());\n\n    while (input_string[input_string.length() - 1] == ' ') {\n        input_string.pop_back();\n    }\n\n    vector\u003cstring\u003e splits;\n    char delimiter = ' ';\n\n    size_t i = 0;\n    size_t pos = input_string.find(delimiter);\n\n    while (pos != string::npos) {\n        splits.push_back(input_string.substr(i, pos - i));\n\n        i = pos + 1;\n        pos = input_string.find(delimiter, i);\n    }\n\n    splits.push_back(input_string.substr(i, min(pos, input_string.length()) - i + 1));\n\n    return splits;\n}\n","score":1.0,"language":"cpp14"},{"contest":"Master","challenge":"Circular Array Rotation","code":"#include \u003cbits/stdc++.h\u003e\n\nusing namespace std;\n\nvector\u003cstring\u003e split_string(string);\n\n// Complete the circularArrayRotation function below.\nvector\u003cint\u003e circularArrayRotation(vector\u003cint\u003e a, int k, vector\u003cint\u003e queries)\n{\n    int n=a.size();k%=n;\n    vector\u003cint\u003e values;\n    for(int i=0;i\u003cqueries.size();i++)\n        values.push_back(a[(n+queries[i]-k)%n]);\n    return values; \n}\n\nint main()\n{\n    ofstream fout(getenv(\"OUTPUT_PATH\"));\n\n    string nkq_temp;\n    getline(cin, nkq_temp);\n\n    vector\u003cstring\u003e nkq = split_string(nkq_temp);\n\n    int n = stoi(nkq[0]);\n\n    int k = stoi(nkq[1]);\n\n    int q = stoi(nkq[2]);\n\n    string a_temp_temp;\n    getline(cin, a_temp_temp);\n\n    vector\u003cstring\u003e a_temp = split_string(a_temp_temp);\n\n    vector\u003cint\u003e a(n);\n\n    for (int i = 0; i \u003c n; i++) {\n        int a_item = stoi(a_temp[i]);\n\n        a[i] = a_item;\n    }\n\n    vector\u003cint\u003e queries(q);\n\n    for (int i = 0; i \u003c q; i++) {\n        int queries_item;\n        cin \u003e\u003e queries_item;\n        cin.ignore(numeric_limits\u003cstreamsize\u003e::max(), '\\n');\n\n        queries[i] = queries_item;\n    }\n\n    vector\u003cint\u003e result = circularArrayRotation(a, k, queries);\n\n    for (int i = 0; i \u003c result.size(); i++) {\n        fout \u003c\u003c result[i];\n\n        if (i != result.size() - 1) {\n            fout \u003c\u003c \"\\n\";\n        }\n    }\n\n    fout \u003c\u003c \"\\n\";\n\n    fout.close();\n\n    return 0;\n}\n\nvector\u003cstring\u003e split_string(string input_string) {\n    string::iterator new_end = unique(input_string.begin(), input_string.end(), [] (const char \u0026x, const char \u0026y) {\n        return x == y and x == ' ';\n    });\n\n    input_string.erase(new_end, input_string.end());\n\n    while (input_string[input_string.length() - 1] == ' ') {\n        input_string.pop_back();\n    }\n\n    vector\u003cstring\u003e splits;\n    char delimiter = ' ';\n\n    size_t i = 0;\n    size_t pos = input_string.find(delimiter);\n\n    while (pos != string::npos) {\n        splits.push_back(input_string.substr(i, pos - i));\n\n        i = pos + 1;\n        pos = input_string.find(delimiter, i);\n    }\n\n    splits.push_back(input_string.substr(i, min(pos, input_string.length()) - i + 1));\n\n    return splits;\n}\n","score":1.0,"language":"cpp14"},{"contest":"Master","challenge":"Sequence Equation","code":"#include \u003cbits/stdc++.h\u003e\n#define loop(x, n) for(int x = 0; x \u003c n; ++ x)\n\n\nusing namespace std;\n\nvector\u003cstring\u003e split_string(string);\n\n// Complete the permutationEquation function below.\nvector\u003cint\u003e permutationEquation(vector\u003cint\u003e p)\n{\n    vector\u003cint\u003e pos(5);\n    loop(i,5)\n        pos[p[i]-1]=i+1;\n    \n}\n\nint main()\n{\n    ofstream fout(getenv(\"OUTPUT_PATH\"));\n\n    int n;\n    cin \u003e\u003e n;\n    cin.ignore(numeric_limits\u003cstreamsize\u003e::max(), '\\n');\n\n    string p_temp_temp;\n    getline(cin, p_temp_temp);\n\n    vector\u003cstring\u003e p_temp = split_string(p_temp_temp);\n\n    vector\u003cint\u003e p(n);\n\n    for (int i = 0; i \u003c n; i++) {\n        int p_item = stoi(p_temp[i]);\n\n        p[i] = p_item;\n    }\n\n    vector\u003cint\u003e result = permutationEquation(p);\n\n    for (int i = 0; i \u003c result.size(); i++) {\n        fout \u003c\u003c result[i];\n\n        if (i != result.size() - 1) {\n            fout \u003c\u003c \"\\n\";\n        }\n    }\n\n    fout \u003c\u003c \"\\n\";\n\n    fout.close();\n\n    return 0;\n}\n\nvector\u003cstring\u003e split_string(string input_string) {\n    string::iterator new_end = unique(input_string.begin(), input_string.end(), [] (const char \u0026x, const char \u0026y) {\n        return x == y and x == ' ';\n    });\n\n    input_string.erase(new_end, input_string.end());\n\n    while (input_string[input_string.length() - 1] == ' ') {\n        input_string.pop_back();\n    }\n\n    vector\u003cstring\u003e splits;\n    char delimiter = ' ';\n\n    size_t i = 0;\n    size_t pos = input_string.find(delimiter);\n\n    while (pos != string::npos) {\n        splits.push_back(input_string.substr(i, pos - i));\n\n        i = pos + 1;\n        pos = input_string.find(delimiter, i);\n    }\n\n    splits.push_back(input_string.substr(i, min(pos, input_string.length()) - i + 1));\n\n    return splits;\n}\n","score":0.0,"language":"cpp14"},{"contest":"Master","challenge":"Sequence Equation","code":"#include \u003cbits/stdc++.h\u003e\n#define loop(x, n) for(int x = 0; x \u003c n; ++ x)\n\n\nusing namespace std;\n\nvector\u003cstring\u003e split_string(string);\n\n// Complete the permutationEquation function below.\nvector\u003cint\u003e permutationEquation(vector\u003cint\u003e p)\n{\n    int size=p.size();\n    vector\u003cint\u003e y(size);\n    loop(i,size)\n        y[i]=p[p[i]-1];\n    return y;\n}\n\nint main()\n{\n    ofstream fout(getenv(\"OUTPUT_PATH\"));\n\n    int n;\n    cin \u003e\u003e n;\n    cin.ignore(numeric_limits\u003cstreamsize\u003e::max(), '\\n');\n\n    string p_temp_temp;\n    getline(cin, p_temp_temp);\n\n    vector\u003cstring\u003e p_temp = split_string(p_temp_temp);\n\n    vector\u003cint\u003e p(n);\n\n    for (int i = 0; i \u003c n; i++) {\n        int p_item = stoi(p_temp[i]);\n\n        p[i] = p_item;\n    }\n\n    vector\u003cint\u003e result = permutationEquation(p);\n\n    for (int i = 0; i \u003c result.size(); i++) {\n        fout \u003c\u003c result[i];\n\n        if (i != result.size() - 1) {\n            fout \u003c\u003c \"\\n\";\n        }\n    }\n\n    fout \u003c\u003c \"\\n\";\n\n    fout.close();\n\n    return 0;\n}\n\nvector\u003cstring\u003e split_string(string input_string) {\n    string::iterator new_end = unique(input_string.begin(), input_string.end(), [] (const char \u0026x, const char \u0026y) {\n        return x == y and x == ' ';\n    });\n\n    input_string.erase(new_end, input_string.end());\n\n    while (input_string[input_string.length() - 1] == ' ') {\n        input_string.pop_back();\n    }\n\n    vector\u003cstring\u003e splits;\n    char delimiter = ' ';\n\n    size_t i = 0;\n    size_t pos = input_string.find(delimiter);\n\n    while (pos != string::npos) {\n        splits.push_back(input_string.substr(i, pos - i));\n\n        i = pos + 1;\n        pos = input_string.find(delimiter, i);\n    }\n\n    splits.push_back(input_string.substr(i, min(pos, input_string.length()) - i + 1));\n\n    return splits;\n}\n","score":0.5,"language":"cpp14"},{"contest":"Master","challenge":"Sequence Equation","code":"#include \u003cbits/stdc++.h\u003e\n#define loop(x, n) for(int x = 0; x \u003c n; ++ x)\n\n\nusing namespace std;\n\nvector\u003cstring\u003e split_string(string);\n\n// Complete the permutationEquation function below.\nvector\u003cint\u003e permutationEquation(vector\u003cint\u003e p)\n{\n    int size=p.size();\n    vector\u003cint\u003e y(size);\n    loop(i,size)\n        y[i]=p[p[i]%size];\n    return y;\n}\n\nint main()\n{\n    ofstream fout(getenv(\"OUTPUT_PATH\"));\n\n    int n;\n    cin \u003e\u003e n;\n    cin.ignore(numeric_limits\u003cstreamsize\u003e::max(), '\\n');\n\n    string p_temp_temp;\n    getline(cin, p_temp_temp);\n\n    vector\u003cstring\u003e p_temp = split_string(p_temp_temp);\n\n    vector\u003cint\u003e p(n);\n\n    for (int i = 0; i \u003c n; i++) {\n        int p_item = stoi(p_temp[i]);\n\n        p[i] = p_item;\n    }\n\n    vector\u003cint\u003e result = permutationEquation(p);\n\n    for (int i = 0; i \u003c result.size(); i++) {\n        fout \u003c\u003c result[i];\n\n        if (i != result.size() - 1) {\n            fout \u003c\u003c \"\\n\";\n        }\n    }\n\n    fout \u003c\u003c \"\\n\";\n\n    fout.close();\n\n    return 0;\n}\n\nvector\u003cstring\u003e split_string(string input_string) {\n    string::iterator new_end = unique(input_string.begin(), input_string.end(), [] (const char \u0026x, const char \u0026y) {\n        return x == y and x == ' ';\n    });\n\n    input_string.erase(new_end, input_string.end());\n\n    while (input_string[input_string.length() - 1] == ' ') {\n        input_string.pop_back();\n    }\n\n    vector\u003cstring\u003e splits;\n    char delimiter = ' ';\n\n    size_t i = 0;\n    size_t pos = input_string.find(delimiter);\n\n    while (pos != string::npos) {\n        splits.push_back(input_string.substr(i, pos - i));\n\n        i = pos + 1;\n        pos = input_string.find(delimiter, i);\n    }\n\n    splits.push_back(input_string.substr(i, min(pos, input_string.length()) - i + 1));\n\n    return splits;\n}\n","score":0.1,"language":"cpp14"},{"contest":"Master","challenge":"Sequence Equation","code":"#include \u003cbits/stdc++.h\u003e\n#define loop(x, n) for(int x = 0; x \u003c n; ++ x)\n\n\nusing namespace std;\n\nvector\u003cstring\u003e split_string(string);\n\n// Complete the permutationEquation function below.\nvector\u003cint\u003e permutationEquation(vector\u003cint\u003e p)\n{\n    int size=p.size();\n    vector\u003cint\u003e y(size);\n    loop(i,size)\n        y[i]=p[p[i]-1];\n    return y;\n}\n\nint main()\n{\n    ofstream fout(getenv(\"OUTPUT_PATH\"));\n\n    int n;\n    cin \u003e\u003e n;\n    cin.ignore(numeric_limits\u003cstreamsize\u003e::max(), '\\n');\n\n    string p_temp_temp;\n    getline(cin, p_temp_temp);\n\n    vector\u003cstring\u003e p_temp = split_string(p_temp_temp);\n\n    vector\u003cint\u003e p(n);\n\n    for (int i = 0; i \u003c n; i++) {\n        int p_item = stoi(p_temp[i]);\n\n        p[i] = p_item;\n    }\n\n    vector\u003cint\u003e result = permutationEquation(p);\n\n    for (int i = 0; i \u003c result.size(); i++) {\n        fout \u003c\u003c result[i];\n\n        if (i != result.size() - 1) {\n            fout \u003c\u003c \"\\n\";\n        }\n    }\n\n    fout \u003c\u003c \"\\n\";\n\n    fout.close();\n\n    return 0;\n}\n\nvector\u003cstring\u003e split_string(string input_string) {\n    string::iterator new_end = unique(input_string.begin(), input_string.end(), [] (const char \u0026x, const char \u0026y) {\n        return x == y and x == ' ';\n    });\n\n    input_string.erase(new_end, input_string.end());\n\n    while (input_string[input_string.length() - 1] == ' ') {\n        input_string.pop_back();\n    }\n\n    vector\u003cstring\u003e splits;\n    char delimiter = ' ';\n\n    size_t i = 0;\n    size_t pos = input_string.find(delimiter);\n\n    while (pos != string::npos) {\n        splits.push_back(input_string.substr(i, pos - i));\n\n        i = pos + 1;\n        pos = input_string.find(delimiter, i);\n    }\n\n    splits.push_back(input_string.substr(i, min(pos, input_string.length()) - i + 1));\n\n    return splits;\n}\n","score":0.5,"language":"cpp14"},{"contest":"Master","challenge":"Sequence Equation","code":"#include \u003cbits/stdc++.h\u003e\n#define loop(x, n) for(int x = 0; x \u003c n; ++ x)\n\n\nusing namespace std;\n\nvector\u003cstring\u003e split_string(string);\n\n// Complete the permutationEquation function below.\nvector\u003cint\u003e permutationEquation(vector\u003cint\u003e p)\n{\n    int size=p.size();\n    vector\u003cint\u003e y(size);\n    loop(i,size)\n        y[p[p[i]-1]-1]=i+1;\n    return y;\n}\n\nint main()\n{\n    ofstream fout(getenv(\"OUTPUT_PATH\"));\n\n    int n;\n    cin \u003e\u003e n;\n    cin.ignore(numeric_limits\u003cstreamsize\u003e::max(), '\\n');\n\n    string p_temp_temp;\n    getline(cin, p_temp_temp);\n\n    vector\u003cstring\u003e p_temp = split_string(p_temp_temp);\n\n    vector\u003cint\u003e p(n);\n\n    for (int i = 0; i \u003c n; i++) {\n        int p_item = stoi(p_temp[i]);\n\n        p[i] = p_item;\n    }\n\n    vector\u003cint\u003e result = permutationEquation(p);\n\n    for (int i = 0; i \u003c result.size(); i++) {\n        fout \u003c\u003c result[i];\n\n        if (i != result.size() - 1) {\n            fout \u003c\u003c \"\\n\";\n        }\n    }\n\n    fout \u003c\u003c \"\\n\";\n\n    fout.close();\n\n    return 0;\n}\n\nvector\u003cstring\u003e split_string(string input_string) {\n    string::iterator new_end = unique(input_string.begin(), input_string.end(), [] (const char \u0026x, const char \u0026y) {\n        return x == y and x == ' ';\n    });\n\n    input_string.erase(new_end, input_string.end());\n\n    while (input_string[input_string.length() - 1] == ' ') {\n        input_string.pop_back();\n    }\n\n    vector\u003cstring\u003e splits;\n    char delimiter = ' ';\n\n    size_t i = 0;\n    size_t pos = input_string.find(delimiter);\n\n    while (pos != string::npos) {\n        splits.push_back(input_string.substr(i, pos - i));\n\n        i = pos + 1;\n        pos = input_string.find(delimiter, i);\n    }\n\n    splits.push_back(input_string.substr(i, min(pos, input_string.length()) - i + 1));\n\n    return splits;\n}\n","score":1.0,"language":"cpp14"},{"contest":"Master","challenge":"Jumping on the Clouds: Revisited","code":"#include \u003cbits/stdc++.h\u003e\n\nusing namespace std;\n\nvector\u003cstring\u003e split_string(string);\n\n// Complete the jumpingOnClouds function below.\nint jumpingOnClouds(vector\u003cint\u003e c, int k)\n{\n    int sum=0;\n    for(int i=0;i\u003cc.size();i+=k)\n        sum+=c[i];\n    return 100-((c.size()/k)+(2*sum));\n}\n\nint main()\n{\n    ofstream fout(getenv(\"OUTPUT_PATH\"));\n\n    string nk_temp;\n    getline(cin, nk_temp);\n\n    vector\u003cstring\u003e nk = split_string(nk_temp);\n\n    int n = stoi(nk[0]);\n\n    int k = stoi(nk[1]);\n\n    string c_temp_temp;\n    getline(cin, c_temp_temp);\n\n    vector\u003cstring\u003e c_temp = split_string(c_temp_temp);\n\n    vector\u003cint\u003e c(n);\n\n    for (int i = 0; i \u003c n; i++) {\n        int c_item = stoi(c_temp[i]);\n\n        c[i] = c_item;\n    }\n\n    int result = jumpingOnClouds(c, k);\n\n    fout \u003c\u003c result \u003c\u003c \"\\n\";\n\n    fout.close();\n\n    return 0;\n}\n\nvector\u003cstring\u003e split_string(string input_string) {\n    string::iterator new_end = unique(input_string.begin(), input_string.end(), [] (const char \u0026x, const char \u0026y) {\n        return x == y and x == ' ';\n    });\n\n    input_string.erase(new_end, input_string.end());\n\n    while (input_string[input_string.length() - 1] == ' ') {\n        input_string.pop_back();\n    }\n\n    vector\u003cstring\u003e splits;\n    char delimiter = ' ';\n\n    size_t i = 0;\n    size_t pos = input_string.find(delimiter);\n\n    while (pos != string::npos) {\n        splits.push_back(input_string.substr(i, pos - i));\n\n        i = pos + 1;\n        pos = input_string.find(delimiter, i);\n    }\n\n    splits.push_back(input_string.substr(i, min(pos, input_string.length()) - i + 1));\n\n    return splits;\n}\n","score":1.0,"language":"cpp14"},{"contest":"Master","challenge":"Find Digits","code":"#include \u003cbits/stdc++.h\u003e\n\nusing namespace std;\n\n// Complete the findDigits function below.\nint findDigits(int n)\n{\n    int d,i,N=n,count=0;\n    for(i=log10(n);i\u003e=0;i--)\n    {\n        d=n%10;\n        n=n/10;\n        if(d!=0 \u0026\u0026 N%d==0)\n            ++count;\n    }\n    return count;\n}\n\nint main()\n{\n    ofstream fout(getenv(\"OUTPUT_PATH\"));\n\n    int t;\n    cin \u003e\u003e t;\n    cin.ignore(numeric_limits\u003cstreamsize\u003e::max(), '\\n');\n\n    for (int t_itr = 0; t_itr \u003c t; t_itr++) {\n        int n;\n        cin \u003e\u003e n;\n        cin.ignore(numeric_limits\u003cstreamsize\u003e::max(), '\\n');\n\n        int result = findDigits(n);\n\n        fout \u003c\u003c result \u003c\u003c \"\\n\";\n    }\n\n    fout.close();\n\n    return 0;\n}\n","score":1.0,"language":"cpp14"},{"contest":"Master","challenge":"Service Lane","code":"#include \u003cbits/stdc++.h\u003e\n\nusing namespace std;\n\n\nint main()\n{\n    int n,t,i,j,min;\n    cin\u003e\u003en\u003e\u003et;\n    int width[n];\n    for(int i=0;i\u003cn;i++)\n        cin\u003e\u003ewidth[i];\n    while(t--)\n    {\n        cin\u003e\u003ei\u003e\u003ej;\n        min=width[j];\n        for(int a=i;a\u003cj;a++)\n            if(width[a]\u003cmin)\n                min=width[a];\n        cout\u003c\u003cmin\u003c\u003cendl;\n    }\n    \n}\n\n","score":1.0,"language":"cpp"},{"contest":"Master","challenge":"Lisa's Workbook","code":"#include \u003cbits/stdc++.h\u003e\n\nusing namespace std;\n\nvector\u003cstring\u003e split_string(string);\n\n// Complete the workbook function below.\nint workbook(int n, int k, vector\u003cint\u003e arr)\n{\n    int count=0,a,b,page=1;\n    for(int i=0;i\u003cn;i++)\n    {\n        a=1-k;b=0;\n        for(int j=1;j\u003c=arr[i]/k;j++)\n        {\n            a=a+k;\n            b=b+k;\n            if(page\u003e=a \u0026\u0026 page\u003c=b)\n                ++count;\n            ++page;\n        }\n        if(arr[i] % k != 0)\n        {\n            a=a+k;\n            b=b+(arr[i] % k);\n            if(page\u003e=a \u0026\u0026 page\u003c=b)\n                ++count;\n            ++page;\n        }\n    }\n    return count;\n}\n\nint main()\n{\n    ofstream fout(getenv(\"OUTPUT_PATH\"));\n\n    string nk_temp;\n    getline(cin, nk_temp);\n\n    vector\u003cstring\u003e nk = split_string(nk_temp);\n\n    int n = stoi(nk[0]);\n\n    int k = stoi(nk[1]);\n\n    string arr_temp_temp;\n    getline(cin, arr_temp_temp);\n\n    vector\u003cstring\u003e arr_temp = split_string(arr_temp_temp);\n\n    vector\u003cint\u003e arr(n);\n\n    for (int i = 0; i \u003c n; i++) {\n        int arr_item = stoi(arr_temp[i]);\n\n        arr[i] = arr_item;\n    }\n\n    int result = workbook(n, k, arr);\n\n    fout \u003c\u003c result \u003c\u003c \"\\n\";\n\n    fout.close();\n\n    return 0;\n}\n\nvector\u003cstring\u003e split_string(string input_string) {\n    string::iterator new_end = unique(input_string.begin(), input_string.end(), [] (const char \u0026x, const char \u0026y) {\n        return x == y and x == ' ';\n    });\n\n    input_string.erase(new_end, input_string.end());\n\n    while (input_string[input_string.length() - 1] == ' ') {\n        input_string.pop_back();\n    }\n\n    vector\u003cstring\u003e splits;\n    char delimiter = ' ';\n\n    size_t i = 0;\n    size_t pos = input_string.find(delimiter);\n\n    while (pos != string::npos) {\n        splits.push_back(input_string.substr(i, pos - i));\n\n        i = pos + 1;\n        pos = input_string.find(delimiter, i);\n    }\n\n    splits.push_back(input_string.substr(i, min(pos, input_string.length()) - i + 1));\n\n    return splits;\n}\n","score":1.0,"language":"cpp"},{"contest":"Master","challenge":"Flatland Space Stations","code":"#include \u003cbits/stdc++.h\u003e\n\nusing namespace std;\n\nvector\u003cstring\u003e split_string(string);\n\n// Complete the flatlandSpaceStations function below.\nint flatlandSpaceStations(int n, vector\u003cint\u003e c)\n{\n    int max=0;\n    int n_stations=c.size();\n    sort(c.begin(),c.end());\n    for(int i=0;i\u003cn_stations-1;i++)\n        if(((c[i+1]-c[i])/2)\u003emax)\n            max=((c[i+1]-c[i])/2);\n    if(c[0]\u003emax)\n        max=c[0];\n    if(((n-1)-c[n_stations-1])\u003emax)\n        max=((n-1)-c[n_stations-1]);\n    return max;\n}\n\nint main()\n{\n    ofstream fout(getenv(\"OUTPUT_PATH\"));\n\n    string nm_temp;\n    getline(cin, nm_temp);\n\n    vector\u003cstring\u003e nm = split_string(nm_temp);\n\n    int n = stoi(nm[0]);\n\n    int m = stoi(nm[1]);\n\n    string c_temp_temp;\n    getline(cin, c_temp_temp);\n\n    vector\u003cstring\u003e c_temp = split_string(c_temp_temp);\n\n    vector\u003cint\u003e c(m);\n\n    for (int i = 0; i \u003c m; i++) {\n        int c_item = stoi(c_temp[i]);\n\n        c[i] = c_item;\n    }\n\n    int result = flatlandSpaceStations(n, c);\n\n    fout \u003c\u003c result \u003c\u003c \"\\n\";\n\n    fout.close();\n\n    return 0;\n}\n\nvector\u003cstring\u003e split_string(string input_string) {\n    string::iterator new_end = unique(input_string.begin(), input_string.end(), [] (const char \u0026x, const char \u0026y) {\n        return x == y and x == ' ';\n    });\n\n    input_string.erase(new_end, input_string.end());\n\n    while (input_string[input_string.length() - 1] == ' ') {\n        input_string.pop_back();\n    }\n\n    vector\u003cstring\u003e splits;\n    char delimiter = ' ';\n\n    size_t i = 0;\n    size_t pos = input_string.find(delimiter);\n\n    while (pos != string::npos) {\n        splits.push_back(input_string.substr(i, pos - i));\n\n        i = pos + 1;\n        pos = input_string.find(delimiter, i);\n    }\n\n    splits.push_back(input_string.substr(i, min(pos, input_string.length()) - i + 1));\n\n    return splits;\n}\n","score":1.0,"language":"cpp"},{"contest":"Master","challenge":"Fair Rations","code":"#include \u003cbits/stdc++.h\u003e\n\nusing namespace std;\n\nvector\u003cstring\u003e split_string(string);\n\n// Complete the fairRations function below.\nvoid fairRations(vector\u003cint\u003e b)\n{\n    int count=0,i;\n    for(i=0;i\u003cb.size()-1;i++)\n    {\n        if(b[i]%2==0)\n            continue;\n        b[i]+=1;\n        b[i+1]+=1;\n        count+=2;\n    }\n    if(b[i]%2==0)\n        cout\u003c\u003ccount;\n    else\n        cout\u003c\u003c\"NO\";\n}\n\nint main()\n{\n    int n;\n    cin\u003e\u003en;\n    vector\u003cint\u003e b(n);\n    for(int i=0;i\u003cn;i++)\n        cin\u003e\u003eb[i];\n    fairRations(b);\n    return 0;\n}\n    \n","score":1.0,"language":"cpp"},{"contest":"Master","challenge":"Arrays - DS","code":"#include \u003cbits/stdc++.h\u003e\n\nusing namespace std;\n\nvector\u003cstring\u003e split_string(string);\n\n// Complete the reverseArray function below.\nvector\u003cint\u003e reverseArray(vector\u003cint\u003e a)\n{\n    vector\u003cint\u003e b;\n    for(int i=a.size()-1;i\u003e=0;i--)\n        b.push_back(a[i]);\n    return b;\n}\n\nint main()\n{\n    ofstream fout(getenv(\"OUTPUT_PATH\"));\n\n    int arr_count;\n    cin \u003e\u003e arr_count;\n    cin.ignore(numeric_limits\u003cstreamsize\u003e::max(), '\\n');\n\n    string arr_temp_temp;\n    getline(cin, arr_temp_temp);\n\n    vector\u003cstring\u003e arr_temp = split_string(arr_temp_temp);\n\n    vector\u003cint\u003e arr(arr_count);\n\n    for (int i = 0; i \u003c arr_count; i++) {\n        int arr_item = stoi(arr_temp[i]);\n\n        arr[i] = arr_item;\n    }\n\n    vector\u003cint\u003e res = reverseArray(arr);\n\n    for (int i = 0; i \u003c res.size(); i++) {\n        fout \u003c\u003c res[i];\n\n        if (i != res.size() - 1) {\n            fout \u003c\u003c \" \";\n        }\n    }\n\n    fout \u003c\u003c \"\\n\";\n\n    fout.close();\n\n    return 0;\n}\n\nvector\u003cstring\u003e split_string(string input_string) {\n    string::iterator new_end = unique(input_string.begin(), input_string.end(), [] (const char \u0026x, const char \u0026y) {\n        return x == y and x == ' ';\n    });\n\n    input_string.erase(new_end, input_string.end());\n\n    while (input_string[input_string.length() - 1] == ' ') {\n        input_string.pop_back();\n    }\n\n    vector\u003cstring\u003e splits;\n    char delimiter = ' ';\n\n    size_t i = 0;\n    size_t pos = input_string.find(delimiter);\n\n    while (pos != string::npos) {\n        splits.push_back(input_string.substr(i, pos - i));\n\n        i = pos + 1;\n        pos = input_string.find(delimiter, i);\n    }\n\n    splits.push_back(input_string.substr(i, min(pos, input_string.length()) - i + 1));\n\n    return splits;\n}\n","score":1.0,"language":"cpp"},{"contest":"Master","challenge":"2D Array - DS","code":"#include \u003cbits/stdc++.h\u003e\n\nusing namespace std;\n\n// Complete the hourglassSum function below.\nint hourglassSum(vector\u003cvector\u003cint\u003e\u003e arr) \n{\n    int i,j,sum,max=-1000;\n    for(i=0;i\u003c4;i++)\n    {\n        for(j=1;j\u003c5;j++)\n        {\n            sum=arr[i][j-1]+arr[i][j]+arr[i][j+1]\n                           +arr[i+1][j]\n                +arr[i+2][j-1]+arr[i+2][j]+arr[i+2][j+1];\n            if(sum\u003emax)\n                max=sum;\n        }\n    }\n    return max;\n}\n\nint main()\n{\n    ofstream fout(getenv(\"OUTPUT_PATH\"));\n\n    vector\u003cvector\u003cint\u003e\u003e arr(6);\n    for (int i = 0; i \u003c 6; i++) {\n        arr[i].resize(6);\n\n        for (int j = 0; j \u003c 6; j++) {\n            cin \u003e\u003e arr[i][j];\n        }\n\n        cin.ignore(numeric_limits\u003cstreamsize\u003e::max(), '\\n');\n    }\n\n    int result = hourglassSum(arr);\n\n    fout \u003c\u003c result \u003c\u003c \"\\n\";\n\n    fout.close();\n\n    return 0;\n}\n","score":1.0,"language":"cpp"},{"contest":"Master","challenge":"Find the Point","code":"#include \u003cbits/stdc++.h\u003e\n\nusing namespace std;\n\nvector\u003cstring\u003e split_string(string);\n\n/*\n * Complete the findPoint function below.\n */\nvector\u003cint\u003e findPoint(int px, int py, int qx, int qy) {\n    /*\n     * Write your code here.\n     */\n    vector\u003cint\u003e point;\n    point.push_back(px\u003eqx?qx-(px-qx):qx+(qx-px));\n    point.push_back(py\u003eqy?qy-(py-qy):qy+(qy-py));\n    return point;\n}\n\nint main()\n{\nofstream fout(getenv(\"OUTPUT_PATH\"));\n\n    int n;\n    cin \u003e\u003e n;\n    cin.ignore(numeric_limits\u003cstreamsize\u003e::max(), '\\n');\n\n    for (int n_itr = 0; n_itr \u003c n; n_itr++) {\n        string pxPyQxQy_temp;\n        getline(cin, pxPyQxQy_temp);\n\n        vector\u003cstring\u003e pxPyQxQy = split_string(pxPyQxQy_temp);\n\n        int px = stoi(pxPyQxQy[0]);\n\n        int py = stoi(pxPyQxQy[1]);\n\n        int qx = stoi(pxPyQxQy[2]);\n\n        int qy = stoi(pxPyQxQy[3]);\n\n        vector\u003cint\u003e result = findPoint(px, py, qx, qy);\n\n        for (int result_itr = 0; result_itr \u003c result.size(); result_itr++) {\n            fout \u003c\u003c result[result_itr];\n\n            if (result_itr != result.size() - 1) {\n                fout \u003c\u003c \" \";\n            }\n        }\n\n        fout \u003c\u003c \"\\n\";\n    }\n\n    fout.close();\n\n    return 0;\n}\n\nvector\u003cstring\u003e split_string(string input_string) {\n    string::iterator new_end = unique(input_string.begin(), input_string.end(), [] (const char \u0026x, const char \u0026y) {\n        return x == y and x == ' ';\n    });\n\n    input_string.erase(new_end, input_string.end());\n\n    while (input_string[input_string.length() - 1] == ' ') {\n        input_string.pop_back();\n    }\n\n    vector\u003cstring\u003e splits;\n    char delimiter = ' ';\n\n    size_t i = 0;\n    size_t pos = input_string.find(delimiter);\n\n    while (pos != string::npos) {\n        splits.push_back(input_string.substr(i, pos - i));\n\n        i = pos + 1;\n        pos = input_string.find(delimiter, i);\n    }\n\n    splits.push_back(input_string.substr(i, min(pos, input_string.length()) - i + 1));\n\n    return splits;\n}\n","score":1.0,"language":"cpp"},{"contest":"Master","challenge":"Arrays: Left Rotation","code":"#include \u003cbits/stdc++.h\u003e\n\nusing namespace std;\n\nvector\u003cstring\u003e split_string(string);\n\nint main()\n{\n    ofstream fout(getenv(\"OUTPUT_PATH\"));\n\n    string nd_temp;\n    getline(cin, nd_temp);\n\n    vector\u003cstring\u003e nd = split_string(nd_temp);\n\n    int n = stoi(nd[0]);\n\n    int d = stoi(nd[1]);\n\n    string a_temp_temp;\n    getline(cin, a_temp_temp);\n\n    vector\u003cstring\u003e a_temp = split_string(a_temp_temp);\n\n    vector\u003cint\u003e a(n);\n\n    for (int i = 0; i \u003c n; i++) {\n        int a_item = stoi(a_temp[i]);\n\n        a[i] = a_item;\n    }\n    //code starts from here\n    for(int i=0;i\u003ca.size();i++)\n        fout\u003c\u003ca[(i+d)%a.size()]\u003c\u003c\" \";\n    //code ends here\n    fout.close();\n\n    return 0;\n}\n\nvector\u003cstring\u003e split_string(string input_string) {\n    string::iterator new_end = unique(input_string.begin(), input_string.end(), [] (const char \u0026x, const char \u0026y) {\n        return x == y and x == ' ';\n    });\n\n    input_string.erase(new_end, input_string.end());\n\n    while (input_string[input_string.length() - 1] == ' ') {\n        input_string.pop_back();\n    }\n\n    vector\u003cstring\u003e splits;\n    char delimiter = ' ';\n\n    size_t i = 0;\n    size_t pos = input_string.find(delimiter);\n\n    while (pos != string::npos) {\n        splits.push_back(input_string.substr(i, pos - i));\n\n        i = pos + 1;\n        pos = input_string.find(delimiter, i);\n    }\n\n    splits.push_back(input_string.substr(i, min(pos, input_string.length()) - i + 1));\n\n    return splits;\n}\n","score":1.0,"language":"cpp"},{"contest":"Master","challenge":"Day 0: Mean, Median, and Mode","code":"#include \u003ccmath\u003e\n#include \u003ccstdio\u003e\n#include \u003cvector\u003e\n#include \u003ciostream\u003e\n#include \u003calgorithm\u003e\nusing namespace std;\n\n\nint main() {\n    /* Enter your code here. Read input from STDIN. Print output to STDOUT */   \n    int n,freq=1,max=0;\n    float mean=0,median,mode;\n    cin\u003e\u003en;\n    float arr[n];\n    for(int i=0;i\u003cn;i++)\n        cin\u003e\u003earr[i];\n    sort(arr,arr+n);\n    for(int i=0;i\u003cn;i++)\n        mean+=arr[i]/n;\n    median=(arr[n/2]+arr[(n-1)/2])/2;\n    for(int i=0;i\u003cn-1;i++)\n    {\n        if(arr[i]==arr[i+1])\n            ++freq;\n        else\n            freq=1;\n        if(freq\u003emax)\n        {\n            max=freq;\n            mode=arr[i];\n        }\n    }\n    cout\u003c\u003cmean\u003c\u003cendl;\n    cout\u003c\u003cmedian\u003c\u003cendl;\n    cout\u003c\u003cmode\u003c\u003cendl;\n    return 0;\n}\n","score":1.0,"language":"cpp"},{"contest":"Master","challenge":"Day 0: Hello, World!","code":"/**\n*   A line of code that prints \"Hello, World!\" on a new line is provided in the editor. \n*   Write a second line of code that prints the contents of 'parameterVariable' on a new line.\n*\n*\tParameter:\n*   parameterVariable - A string of text.\n**/\nfunction greeting(parameterVariable) {\n    // This line prints 'Hello, World!' to the console:\n    console.log('Hello, World!');\n    console.log(parameterVariable);\n\n    // Write a line of code that prints parameterVariable to stdout using console.log:\n    \n}","score":1.0,"language":"javascript"},{"contest":"Master","challenge":"Say \"Hello, World!\" With C++","code":"#include \u003ciostream\u003e\n#include \u003ccstdio\u003e\nusing namespace std;\n\nint main() {\n    printf(\"Hello, World!\");\n    return 0;\n}","score":1.0,"language":"cpp"},{"contest":"Master","challenge":"Input and Output","code":"#include \u003ccmath\u003e\n#include \u003ccstdio\u003e\n#include \u003cvector\u003e\n#include \u003ciostream\u003e\n#include \u003calgorithm\u003e\nusing namespace std;\n\n\nint main() {\n    /* Enter your code here. Read input from STDIN. Print output to STDOUT */   \n    int a,b,c;\n    cin\u003e\u003ea\u003e\u003eb\u003e\u003ec;\n    cout\u003c\u003ca+b+c;\n    return 0;\n}\n","score":1.0,"language":"cpp"},{"contest":"Master","challenge":"Let's Echo","code":"echo HELLO","score":1.0,"language":"bash"},{"contest":"Master","challenge":"Say \"Hello, World!\" With Python","code":"print(\"Hello, World!\")","score":1.0,"language":"python3"},{"contest":"Master","challenge":"Python If-Else","code":"N = int(input())\nif (N%2!=0) :\n    print(\"Weird\")\nelif (N\u003e=2 and N\u003c=5) :\n    print(\"Not Weird\")\nelif (N\u003e=6 and N\u003c=20) :\n    print(\"Weird\")\nelse :\n    print(\"Not Weird\")\n    \n","score":1.0,"language":"python3"},{"contest":"Master","challenge":"Security Functions","code":"#include \u003cbits/stdc++.h\u003e\n\nusing namespace std;\n\n// Complete the calculate function below.\nint calculate(int x) {\n    return x%11;\n}\n\nint main()\n{\n    ofstream fout(getenv(\"OUTPUT_PATH\"));\n\n    int x;\n    cin \u003e\u003e x;\n    cin.ignore(numeric_limits\u003cstreamsize\u003e::max(), '\\n');\n\n    int result = calculate(x);\n\n    fout \u003c\u003c result \u003c\u003c \"\\n\";\n\n    fout.close();\n\n    return 0;\n}\n","score":1.0,"language":"cpp"},{"contest":"Master","challenge":"Security Functions II","code":"/*\n * Complete the function below.\n */\nint function(int x) {\n\nreturn x*x;\n}","score":1.0,"language":"cpp"},{"contest":"Master","challenge":"Maximum Draws","code":"#include \u003cbits/stdc++.h\u003e\n\nusing namespace std;\n\n/*\n * Complete the maximumDraws function below.\n */\nint maximumDraws(int n) {\n    /*\n     * Write your code here.\n     */\n    return n+1;\n\n}\n\nint main()\n{\n    ofstream fout(getenv(\"OUTPUT_PATH\"));\n\n    int t;\n    cin \u003e\u003e t;\n    cin.ignore(numeric_limits\u003cstreamsize\u003e::max(), '\\n');\n\n    for (int t_itr = 0; t_itr \u003c t; t_itr++) {\n        int n;\n        cin \u003e\u003e n;\n        cin.ignore(numeric_limits\u003cstreamsize\u003e::max(), '\\n');\n\n        int result = maximumDraws(n);\n\n        fout \u003c\u003c result \u003c\u003c \"\\n\";\n    }\n\n    fout.close();\n\n    return 0;\n}\n","score":1.0,"language":"cpp"},{"contest":"Master","challenge":"Happy Ladybugs","code":"#include \u003cbits/stdc++.h\u003e\n\nusing namespace std;\n\n// Complete the happyLadybugs function below.\nstring happyLadybugs(string b) {\n\n\n}\n\nint main()\n{\n    ofstream fout(getenv(\"OUTPUT_PATH\"));\n\n    int g;\n    cin \u003e\u003e g;\n    cin.ignore(numeric_limits\u003cstreamsize\u003e::max(), '\\n');\n\n    for (int g_itr = 0; g_itr \u003c g; g_itr++) {\n        int n;\n        cin \u003e\u003e n;\n        cin.ignore(numeric_limits\u003cstreamsize\u003e::max(), '\\n');\n\n        string b;\n        getline(cin, b);\n\n        string result = happyLadybugs(b);\n\n        fout \u003c\u003c result \u003c\u003c \"\\n\";\n    }\n\n    fout.close();\n\n    return 0;\n}\n","score":0.0,"language":"cpp"},{"contest":"Master","challenge":"Bon Appétit","code":"#include \u003cbits/stdc++.h\u003e\n\n\nusing namespace std;\n\nint main() {\n    /* Enter your code here. Read input from STDIN. Print output to STDOUT */\n    int items, exclude,charged;\n    cin\u003e\u003eitems\u003e\u003eexclude;\n    vector\u003cint\u003e bill(items);\n    for(int i=0;i\u003citems;i++)\n    {cin\u003e\u003ebill[i];}\n    cin\u003e\u003echarged;\n    int sum=0;\n    for(int j=0;j\u003citems;j++)\n        sum += bill[j];\n    sum=sum-bill[exclude]; \n    int diff=charged-sum;\n    if(sum==charged)\n        cout \u003c\u003c \"Bon Appetit\" \u003c\u003c endl;\n    else\n        cout\u003c\u003c diff\u003c\u003c endl;\n    return 0;\n}","score":0.0,"language":"cpp"},{"contest":"Master","challenge":"Cut the sticks","code":"#include \u003cbits/stdc++.h\u003e\n\nusing namespace std;\n\nvector\u003cstring\u003e split_string(string);\n\n// Complete the cutTheSticks function below.\nvector\u003cint\u003e cutTheSticks(vector\u003cint\u003e arr)\n{\n    int n=arr.size(),i=0;\n    vector\u003cint\u003e sc;\n    sort(arr.begin(),arr.end());\n    while(arr[n-1])\n    {\n        while(arr[i]==0)\n            ++i;\n        sc.push_back(n-i);\n        int temp=arr[i];\n        for(int j=0;j\u003cn;j++)\n            if(arr[j]!=0)\n                arr[j]-=temp;\n    }\n    return sc;\n}\n\nint main()\n{\n    ofstream fout(getenv(\"OUTPUT_PATH\"));\n\n    int n;\n    cin \u003e\u003e n;\n    cin.ignore(numeric_limits\u003cstreamsize\u003e::max(), '\\n');\n\n    string arr_temp_temp;\n    getline(cin, arr_temp_temp);\n\n    vector\u003cstring\u003e arr_temp = split_string(arr_temp_temp);\n\n    vector\u003cint\u003e arr(n);\n\n    for (int i = 0; i \u003c n; i++) {\n        int arr_item = stoi(arr_temp[i]);\n\n        arr[i] = arr_item;\n    }\n\n    vector\u003cint\u003e result = cutTheSticks(arr);\n\n    for (int i = 0; i \u003c result.size(); i++) {\n        fout \u003c\u003c result[i];\n\n        if (i != result.size() - 1) {\n            fout \u003c\u003c \"\\n\";\n        }\n    }\n\n    fout \u003c\u003c \"\\n\";\n\n    fout.close();\n\n    return 0;\n}\n\nvector\u003cstring\u003e split_string(string input_string) {\n    string::iterator new_end = unique(input_string.begin(), input_string.end(), [] (const char \u0026x, const char \u0026y) {\n        return x == y and x == ' ';\n    });\n\n    input_string.erase(new_end, input_string.end());\n\n    while (input_string[input_string.length() - 1] == ' ') {\n        input_string.pop_back();\n    }\n\n    vector\u003cstring\u003e splits;\n    char delimiter = ' ';\n\n    size_t i = 0;\n    size_t pos = input_string.find(delimiter);\n\n    while (pos != string::npos) {\n        splits.push_back(input_string.substr(i, pos - i));\n\n        i = pos + 1;\n        pos = input_string.find(delimiter, i);\n    }\n\n    splits.push_back(input_string.substr(i, min(pos, input_string.length()) - i + 1));\n\n    return splits;\n}\n","score":1.0,"language":"cpp"},{"contest":"Master","challenge":"Basic Data Types","code":"#include \u003ciostream\u003e\n#include \u003ccstdio\u003e\nusing namespace std;\n\nint main() {\n    // Complete the code.\n    int a;long long b;char c;float d;double e;\n    cin\u003e\u003ea\u003e\u003eb\u003e\u003ec\u003e\u003ed\u003e\u003ee;\n    cout\u003c\u003ca\u003c\u003cendl;\n    cout\u003c\u003cb\u003c\u003cendl;\n    cout\u003c\u003cc\u003c\u003cendl;\n    cout\u003c\u003cd\u003c\u003cendl;\n    cout\u003c\u003ce\u003c\u003cendl;\n    return 0;\n}","score":0.0,"language":"cpp"},{"contest":"Master","challenge":"Basic Data Types","code":"#include \u003ciostream\u003e\n#include \u003ccstdio\u003e\nusing namespace std;\n\nint main() {\n    // Complete the code.\n    int a;long long b;char c;float d;double e;\n    cin\u003e\u003ea\u003e\u003eb\u003e\u003ec\u003e\u003ed\u003e\u003ee;\n    cout\u003c\u003ca\u003c\u003cendl;\n    cout\u003c\u003cb\u003c\u003cendl;\n    cout\u003c\u003cc\u003c\u003cendl;\n    cout\u003c\u003cfixed\u003c\u003cd\u003c\u003cendl;\n    cout\u003c\u003cfixed\u003c\u003ce\u003c\u003cendl;\n    return 0;\n}","score":1.0,"language":"cpp"},{"contest":"Master","challenge":"Basic Data Types","code":"#include \u003ciostream\u003e\n#include \u003ccstdio\u003e\n#include \u003ciomanip\u003e      // std::setprecision\nusing namespace std;\n\nint main() {\n    // Complete the code.\n    int a;long long b;char c;float d;double e;\n    cin\u003e\u003ea\u003e\u003eb\u003e\u003ec\u003e\u003ed\u003e\u003ee;\n    cout\u003c\u003ca\u003c\u003cendl;\n    cout\u003c\u003cb\u003c\u003cendl;\n    cout\u003c\u003cc\u003c\u003cendl;\n    cout\u003c\u003cfixed\u003c\u003csetprecision(3)\u003c\u003cd\u003c\u003cendl;\n    cout\u003c\u003cfixed\u003c\u003csetprecision(9)\u003c\u003ce\u003c\u003cendl;\n    return 0;\n}","score":1.0,"language":"cpp"},{"contest":"Master","challenge":"Conditional Statements","code":"#include \u003cbits/stdc++.h\u003e\n\nusing namespace std;\n\n\n\nint main()\n{\n    int n;\n    cin \u003e\u003e n;\n    cin.ignore(numeric_limits\u003cstreamsize\u003e::max(), '\\n');\n\n    // Write Your Code Here\n    if(n==1)\n        cout\u003c\u003c\"one\";\n    else if(n==2)\n        cout\u003c\u003c\"two\";\n    else if(n==3)\n        cout\u003c\u003c\"three\";\n    else if(n==4)\n        cout\u003c\u003c\"four\";\n    else if(n==5)\n        cout\u003c\u003c\"five\";\n    else if(n==6)\n        cout\u003c\u003c\"six\";\n    else if(n==7)\n        cout\u003c\u003c\"seven\";\n    else if(n==8)\n        cout\u003c\u003c\"eight\";\n    else if(n==9)\n        cout\u003c\u003c\"nine\";\n    else\n        cout\u003c\u003c\"Greater than 9\";\n    return 0;\n}\n","score":1.0,"language":"cpp"},{"contest":"Master","challenge":"Handshake","code":"#include \u003cbits/stdc++.h\u003e\n\nusing namespace std;\n\n/*\n * Complete the handshake function below.\n */\nint handshake(int n) {\n    /*\n     * Write your code here.\n     */\n    if(n-1\u003e0)\n        return n-1+handshake(n-1);\n    else\n        return 0;\n\n}\n\nint main()\n{\n    ofstream fout(getenv(\"OUTPUT_PATH\"));\n\n    int t;\n    cin \u003e\u003e t;\n    cin.ignore(numeric_limits\u003cstreamsize\u003e::max(), '\\n');\n\n    for (int t_itr = 0; t_itr \u003c t; t_itr++) {\n        int n;\n        cin \u003e\u003e n;\n        cin.ignore(numeric_limits\u003cstreamsize\u003e::max(), '\\n');\n\n        int result = handshake(n);\n\n        fout \u003c\u003c result \u003c\u003c \"\\n\";\n    }\n\n    fout.close();\n\n    return 0;\n}\n","score":1.0,"language":"cpp"},{"contest":"Master","challenge":"Minimum Height Triangle","code":"#include \u003cbits/stdc++.h\u003e\n\nusing namespace std;\n\nint lowestTriangle(int base, int area)\n{\n    return (ceil(2.0*(float)area/(float)base));\n}\n\nint main() {\n    int base;\n    int area;\n    cin \u003e\u003e base \u003e\u003e area;\n    int height = lowestTriangle(base, area);\n    cout \u003c\u003c height \u003c\u003c endl;\n    return 0;\n}","score":1.0,"language":"cpp"},{"contest":"Master","challenge":"Army Game","code":"#include \u003cbits/stdc++.h\u003e\n\nusing namespace std;\n\nvector\u003cstring\u003e split_string(string);\n\n/*\n * Complete the gameWithCells function below.\n */\nint gameWithCells(int n, int m) {\n    if(m==1)\n        m=2;\n    if(n==1)\n        n=2;\n    return (n-1)*(m-1);\n}\n\nint main()\n{\n    ofstream fout(getenv(\"OUTPUT_PATH\"));\n\n    string nm_temp;\n    getline(cin, nm_temp);\n\n    vector\u003cstring\u003e nm = split_string(nm_temp);\n\n    int n = stoi(nm[0]);\n\n    int m = stoi(nm[1]);\n\n    int result = gameWithCells(n, m);\n\n    fout \u003c\u003c result \u003c\u003c \"\\n\";\n\n    fout.close();\n\n    return 0;\n}\n\nvector\u003cstring\u003e split_string(string input_string) {\n    string::iterator new_end = unique(input_string.begin(), input_string.end(), [] (const char \u0026x, const char \u0026y) {\n        return x == y and x == ' ';\n    });\n\n    input_string.erase(new_end, input_string.end());\n\n    while (input_string[input_string.length() - 1] == ' ') {\n        input_string.pop_back();\n    }\n\n    vector\u003cstring\u003e splits;\n    char delimiter = ' ';\n\n    size_t i = 0;\n    size_t pos = input_string.find(delimiter);\n\n    while (pos != string::npos) {\n        splits.push_back(input_string.substr(i, pos - i));\n\n        i = pos + 1;\n        pos = input_string.find(delimiter, i);\n    }\n\n    splits.push_back(input_string.substr(i, min(pos, input_string.length()) - i + 1));\n\n    return splits;\n}\n","score":0.318181818182,"language":"cpp"},{"contest":"Master","challenge":"Army Game","code":"#include \u003cbits/stdc++.h\u003e\n\nusing namespace std;\n\nvector\u003cstring\u003e split_string(string);\n\n/*\n * Complete the gameWithCells function below.\n */\nint gameWithCells(int n, int m) {\n    if(m==1)\n        m=2;\n    if(n==1)\n        n=2;\n    return (n-1)*(m-1);\n}\n\nint main()\n{\n    ofstream fout(getenv(\"OUTPUT_PATH\"));\n\n    string nm_temp;\n    getline(cin, nm_temp);\n\n    vector\u003cstring\u003e nm = split_string(nm_temp);\n\n    int n = stoi(nm[0]);\n\n    int m = stoi(nm[1]);\n\n    int result = gameWithCells(n, m);\n\n    fout \u003c\u003c result \u003c\u003c \"\\n\";\n\n    fout.close();\n\n    return 0;\n}\n\nvector\u003cstring\u003e split_string(string input_string) {\n    string::iterator new_end = unique(input_string.begin(), input_string.end(), [] (const char \u0026x, const char \u0026y) {\n        return x == y and x == ' ';\n    });\n\n    input_string.erase(new_end, input_string.end());\n\n    while (input_string[input_string.length() - 1] == ' ') {\n        input_string.pop_back();\n    }\n\n    vector\u003cstring\u003e splits;\n    char delimiter = ' ';\n\n    size_t i = 0;\n    size_t pos = input_string.find(delimiter);\n\n    while (pos != string::npos) {\n        splits.push_back(input_string.substr(i, pos - i));\n\n        i = pos + 1;\n        pos = input_string.find(delimiter, i);\n    }\n\n    splits.push_back(input_string.substr(i, min(pos, input_string.length()) - i + 1));\n\n    return splits;\n}\n","score":0.318181818182,"language":"cpp"},{"contest":"Master","challenge":"Army Game","code":"#include \u003cbits/stdc++.h\u003e\n\nusing namespace std;\n\nvector\u003cstring\u003e split_string(string);\n\n/*\n * Complete the gameWithCells function below.\n */\nint gameWithCells(int n, int m) {\n    return ceil(n/2.0)*ceil(m/2.0);\n}\n\nint main()\n{\n    ofstream fout(getenv(\"OUTPUT_PATH\"));\n\n    string nm_temp;\n    getline(cin, nm_temp);\n\n    vector\u003cstring\u003e nm = split_string(nm_temp);\n\n    int n = stoi(nm[0]);\n\n    int m = stoi(nm[1]);\n\n    int result = gameWithCells(n, m);\n\n    fout \u003c\u003c result \u003c\u003c \"\\n\";\n\n    fout.close();\n\n    return 0;\n}\n\nvector\u003cstring\u003e split_string(string input_string) {\n    string::iterator new_end = unique(input_string.begin(), input_string.end(), [] (const char \u0026x, const char \u0026y) {\n        return x == y and x == ' ';\n    });\n\n    input_string.erase(new_end, input_string.end());\n\n    while (input_string[input_string.length() - 1] == ' ') {\n        input_string.pop_back();\n    }\n\n    vector\u003cstring\u003e splits;\n    char delimiter = ' ';\n\n    size_t i = 0;\n    size_t pos = input_string.find(delimiter);\n\n    while (pos != string::npos) {\n        splits.push_back(input_string.substr(i, pos - i));\n\n        i = pos + 1;\n        pos = input_string.find(delimiter, i);\n    }\n\n    splits.push_back(input_string.substr(i, min(pos, input_string.length()) - i + 1));\n\n    return splits;\n}\n","score":1.0,"language":"cpp"},{"contest":"Master","challenge":"Leonardo's Prime Factors","code":"#include \u003cbits/stdc++.h\u003e\n\nusing namespace std;\n\nint primeCount(long n)\n{\n    int primes[]={2,3,5,7,11,13,17,19,23,29,31,37,41,43,47,53};\n    unsigned long long product=1;\n    int i=0;\n    while(product\u003c=n \u0026\u0026 i\u003c16)\n    {\n        product*=primes[i];\n        ++i;\n    }\n    return i-1;\n}\n\nint main()\n{\n    ofstream fout(getenv(\"OUTPUT_PATH\"));\n\n    int q;\n    cin \u003e\u003e q;\n    cin.ignore(numeric_limits\u003cstreamsize\u003e::max(), '\\n');\n\n    for (int q_itr = 0; q_itr \u003c q; q_itr++) {\n        long n;\n        cin \u003e\u003e n;\n        cin.ignore(numeric_limits\u003cstreamsize\u003e::max(), '\\n');\n\n        int result = primeCount(n);\n\n        fout \u003c\u003c result \u003c\u003c \"\\n\";\n    }\n\n    fout.close();\n\n    return 0;\n}\n","score":1.0,"language":"cpp"},{"contest":"Master","challenge":"Connecting Towns","code":"#include \u003cbits/stdc++.h\u003e\n\nusing namespace std;\n\nvector\u003cstring\u003e split_string(string);\n\n/*\n * Complete the connectingTowns function below.\n */\nint connectingTowns(int n, vector\u003cint\u003e routes) {\n    /*\n     * Write your code here.\n     */\n    if(n==1)\n        return 1;\n    else\n        return routes[n-2]*connectingTowns(n-1,routes);\n\n}\n\nint main()\n{\n    ofstream fout(getenv(\"OUTPUT_PATH\"));\n\n    int t;\n    cin \u003e\u003e t;\n    cin.ignore(numeric_limits\u003cstreamsize\u003e::max(), '\\n');\n\n    for (int t_itr = 0; t_itr \u003c t; t_itr++) {\n        int n;\n        cin \u003e\u003e n;\n        cin.ignore(numeric_limits\u003cstreamsize\u003e::max(), '\\n');\n\n        string routes_temp_temp;\n        getline(cin, routes_temp_temp);\n\n        vector\u003cstring\u003e routes_temp = split_string(routes_temp_temp);\n\n        vector\u003cint\u003e routes(n-1);\n\n        for (int routes_itr = 0; routes_itr \u003c n-1; routes_itr++) {\n            int routes_item = stoi(routes_temp[routes_itr]);\n\n            routes[routes_itr] = routes_item;\n        }\n\n        int result = connectingTowns(n, routes);\n\n        fout \u003c\u003c result \u003c\u003c \"\\n\";\n    }\n\n    fout.close();\n\n    return 0;\n}\n\nvector\u003cstring\u003e split_string(string input_string) {\n    string::iterator new_end = unique(input_string.begin(), input_string.end(), [] (const char \u0026x, const char \u0026y) {\n        return x == y and x == ' ';\n    });\n\n    input_string.erase(new_end, input_string.end());\n\n    while (input_string[input_string.length() - 1] == ' ') {\n        input_string.pop_back();\n    }\n\n    vector\u003cstring\u003e splits;\n    char delimiter = ' ';\n\n    size_t i = 0;\n    size_t pos = input_string.find(delimiter);\n\n    while (pos != string::npos) {\n        splits.push_back(input_string.substr(i, pos - i));\n\n        i = pos + 1;\n        pos = input_string.find(delimiter, i);\n    }\n\n    splits.push_back(input_string.substr(i, min(pos, input_string.length()) - i + 1));\n\n    return splits;\n}\n","score":0.0,"language":"cpp"},{"contest":"Master","challenge":"Connecting Towns","code":"#include \u003cbits/stdc++.h\u003e\n\nusing namespace std;\n\nvector\u003cstring\u003e split_string(string);\n\n/*\n * Complete the connectingTowns function below.\n */\nint connectingTowns(int n, vector\u003cint\u003e routes) {\n    /*\n     * Write your code here.\n     */\n    cout\u003c\u003cn\u003c\u003c\"\\t\";\n    if(n==1)\n        return 1;\n    else\n        return routes[n-2]*connectingTowns(n-1,routes);\n\n}\n\nint main()\n{\n    ofstream fout(getenv(\"OUTPUT_PATH\"));\n\n    int t;\n    cin \u003e\u003e t;\n    cin.ignore(numeric_limits\u003cstreamsize\u003e::max(), '\\n');\n\n    for (int t_itr = 0; t_itr \u003c t; t_itr++) {\n        int n;\n        cin \u003e\u003e n;\n        cin.ignore(numeric_limits\u003cstreamsize\u003e::max(), '\\n');\n\n        string routes_temp_temp;\n        getline(cin, routes_temp_temp);\n\n        vector\u003cstring\u003e routes_temp = split_string(routes_temp_temp);\n\n        vector\u003cint\u003e routes(n-1);\n\n        for (int routes_itr = 0; routes_itr \u003c n-1; routes_itr++) {\n            int routes_item = stoi(routes_temp[routes_itr]);\n\n            routes[routes_itr] = routes_item;\n        }\n\n        int result = connectingTowns(n, routes);\n\n        fout \u003c\u003c result \u003c\u003c \"\\n\";\n    }\n\n    fout.close();\n\n    return 0;\n}\n\nvector\u003cstring\u003e split_string(string input_string) {\n    string::iterator new_end = unique(input_string.begin(), input_string.end(), [] (const char \u0026x, const char \u0026y) {\n        return x == y and x == ' ';\n    });\n\n    input_string.erase(new_end, input_string.end());\n\n    while (input_string[input_string.length() - 1] == ' ') {\n        input_string.pop_back();\n    }\n\n    vector\u003cstring\u003e splits;\n    char delimiter = ' ';\n\n    size_t i = 0;\n    size_t pos = input_string.find(delimiter);\n\n    while (pos != string::npos) {\n        splits.push_back(input_string.substr(i, pos - i));\n\n        i = pos + 1;\n        pos = input_string.find(delimiter, i);\n    }\n\n    splits.push_back(input_string.substr(i, min(pos, input_string.length()) - i + 1));\n\n    return splits;\n}\n","score":0.0,"language":"cpp"},{"contest":"Master","challenge":"Connecting Towns","code":"#include \u003cbits/stdc++.h\u003e\n#define mod 1234567\n\nusing namespace std;\n\nvector\u003cstring\u003e split_string(string);\n\n/*\n * Complete the connectingTowns function below.\n */\nint connectingTowns(int n, vector\u003cint\u003e routes) {\n    /*\n     * Write your code here.\n     */\n    int product=1;\n    for(int i=0;i\u003croutes.size();i++)\n        product=((product%mod)*(routes[i]%mod))%mod;\n    return product;\n}\n\nint main()\n{\n    ofstream fout(getenv(\"OUTPUT_PATH\"));\n\n    int t;\n    cin \u003e\u003e t;\n    cin.ignore(numeric_limits\u003cstreamsize\u003e::max(), '\\n');\n\n    for (int t_itr = 0; t_itr \u003c t; t_itr++) {\n        int n;\n        cin \u003e\u003e n;\n        cin.ignore(numeric_limits\u003cstreamsize\u003e::max(), '\\n');\n\n        string routes_temp_temp;\n        getline(cin, routes_temp_temp);\n\n        vector\u003cstring\u003e routes_temp = split_string(routes_temp_temp);\n\n        vector\u003cint\u003e routes(n-1);\n\n        for (int routes_itr = 0; routes_itr \u003c n-1; routes_itr++) {\n            int routes_item = stoi(routes_temp[routes_itr]);\n\n            routes[routes_itr] = routes_item;\n        }\n\n        int result = connectingTowns(n, routes);\n\n        fout \u003c\u003c result \u003c\u003c \"\\n\";\n    }\n\n    fout.close();\n\n    return 0;\n}\n\nvector\u003cstring\u003e split_string(string input_string) {\n    string::iterator new_end = unique(input_string.begin(), input_string.end(), [] (const char \u0026x, const char \u0026y) {\n        return x == y and x == ' ';\n    });\n\n    input_string.erase(new_end, input_string.end());\n\n    while (input_string[input_string.length() - 1] == ' ') {\n        input_string.pop_back();\n    }\n\n    vector\u003cstring\u003e splits;\n    char delimiter = ' ';\n\n    size_t i = 0;\n    size_t pos = input_string.find(delimiter);\n\n    while (pos != string::npos) {\n        splits.push_back(input_string.substr(i, pos - i));\n\n        i = pos + 1;\n        pos = input_string.find(delimiter, i);\n    }\n\n    splits.push_back(input_string.substr(i, min(pos, input_string.length()) - i + 1));\n\n    return splits;\n}\n","score":1.0,"language":"cpp"},{"contest":"Master","challenge":"For Loop","code":"#include \u003cbits/stdc++.h\u003e\n\nusing namespace std;\n\n\n\nint main()\n{\n    int a,b;\n    cin\u003e\u003ea\u003e\u003eb;\n    cin.ignore(numeric_limits\u003cstreamsize\u003e::max(), '\\n');\n\n    // Write Your Code Here\n    for(int n=a;n\u003c=b;n++)\n    {\n        if(n==1)\n            cout\u003c\u003c\"one\"\u003c\u003cendl;\n        else if(n==2)\n            cout\u003c\u003c\"two\"\u003c\u003cendl;\n        else if(n==3)\n            cout\u003c\u003c\"three\"\u003c\u003cendl;\n        else if(n==4)\n            cout\u003c\u003c\"four\"\u003c\u003cendl;\n        else if(n==5)\n            cout\u003c\u003c\"five\"\u003c\u003cendl;\n        else if(n==6)\n            cout\u003c\u003c\"six\"\u003c\u003cendl;\n        else if(n==7)\n            cout\u003c\u003c\"seven\"\u003c\u003cendl;\n        else if(n==8)\n            cout\u003c\u003c\"eight\"\u003c\u003cendl;\n        else if(n==9)\n            cout\u003c\u003c\"nine\"\u003c\u003cendl;\n        else if(n%2==0)\n            cout\u003c\u003c\"even\"\u003c\u003cendl;\n        else\n            cout\u003c\u003c\"odd\"\u003c\u003cendl;\n    }\n    \n    return 0;\n}\n","score":1.0,"language":"cpp"},{"contest":"Master","challenge":"Cutting Paper Squares","code":"#include \u003cbits/stdc++.h\u003e\n\nusing namespace std;\n\nvector\u003cstring\u003e split_string(string);\n\n// Complete the solve function below.\nlong solve(int n, int m)\n{\n    return (m*n)-1;\n}\n\nint main()\n{\n    ofstream fout(getenv(\"OUTPUT_PATH\"));\n\n    string nm_temp;\n    getline(cin, nm_temp);\n\n    vector\u003cstring\u003e nm = split_string(nm_temp);\n\n    int n = stoi(nm[0]);\n\n    int m = stoi(nm[1]);\n\n    long result = solve(n, m);\n\n    fout \u003c\u003c result \u003c\u003c \"\\n\";\n\n    fout.close();\n\n    return 0;\n}\n\nvector\u003cstring\u003e split_string(string input_string) {\n    string::iterator new_end = unique(input_string.begin(), input_string.end(), [] (const char \u0026x, const char \u0026y) {\n        return x == y and x == ' ';\n    });\n\n    input_string.erase(new_end, input_string.end());\n\n    while (input_string[input_string.length() - 1] == ' ') {\n        input_string.pop_back();\n    }\n\n    vector\u003cstring\u003e splits;\n    char delimiter = ' ';\n\n    size_t i = 0;\n    size_t pos = input_string.find(delimiter);\n\n    while (pos != string::npos) {\n        splits.push_back(input_string.substr(i, pos - i));\n\n        i = pos + 1;\n        pos = input_string.find(delimiter, i);\n    }\n\n    splits.push_back(input_string.substr(i, min(pos, input_string.length()) - i + 1));\n\n    return splits;\n}\n","score":0.333333333333,"language":"cpp"},{"contest":"Master","challenge":"Cutting Paper Squares","code":"#include \u003cbits/stdc++.h\u003e\n\nusing namespace std;\n\nvector\u003cstring\u003e split_string(string);\n\n// Complete the solve function below.\nlong solve(int n, int m)\n{\n    return ((long)m*n)-1;\n}\n\nint main()\n{\n    ofstream fout(getenv(\"OUTPUT_PATH\"));\n\n    string nm_temp;\n    getline(cin, nm_temp);\n\n    vector\u003cstring\u003e nm = split_string(nm_temp);\n\n    int n = stoi(nm[0]);\n\n    int m = stoi(nm[1]);\n\n    long result = solve(n, m);\n\n    fout \u003c\u003c result \u003c\u003c \"\\n\";\n\n    fout.close();\n\n    return 0;\n}\n\nvector\u003cstring\u003e split_string(string input_string) {\n    string::iterator new_end = unique(input_string.begin(), input_string.end(), [] (const char \u0026x, const char \u0026y) {\n        return x == y and x == ' ';\n    });\n\n    input_string.erase(new_end, input_string.end());\n\n    while (input_string[input_string.length() - 1] == ' ') {\n        input_string.pop_back();\n    }\n\n    vector\u003cstring\u003e splits;\n    char delimiter = ' ';\n\n    size_t i = 0;\n    size_t pos = input_string.find(delimiter);\n\n    while (pos != string::npos) {\n        splits.push_back(input_string.substr(i, pos - i));\n\n        i = pos + 1;\n        pos = input_string.find(delimiter, i);\n    }\n\n    splits.push_back(input_string.substr(i, min(pos, input_string.length()) - i + 1));\n\n    return splits;\n}","score":1.0,"language":"cpp"},{"contest":"Master","challenge":"Summing the N series ","code":"#include \u003cbits/stdc++.h\u003e\n\nusing namespace std;\n\n/*\n * Complete the summingSeries function below.\n */\nint summingSeries(long n) {\n    /*\n     * Write your code here.\n     */\n    return n*n;\n\n}\n\nint main()\n{\n    ofstream fout(getenv(\"OUTPUT_PATH\"));\n\n    int t;\n    cin \u003e\u003e t;\n    cin.ignore(numeric_limits\u003cstreamsize\u003e::max(), '\\n');\n\n    for (int t_itr = 0; t_itr \u003c t; t_itr++) {\n        long n;\n        cin \u003e\u003e n;\n        cin.ignore(numeric_limits\u003cstreamsize\u003e::max(), '\\n');\n\n        int result = summingSeries(n);\n\n        fout \u003c\u003c result \u003c\u003c \"\\n\";\n    }\n\n    fout.close();\n\n    return 0;\n}\n","score":0.428571428571,"language":"cpp"},{"contest":"Master","challenge":"Summing the N series ","code":"#include \u003cbits/stdc++.h\u003e\n#define mod 1000000007\n\nusing namespace std;\n\n/*\n * Complete the summingSeries function below.\n */\nint summingSeries(long n) {\n    /*\n     * Write your code here.\n     */\n    return ((n%mod)*(n%mod))%mod;\n\n}\n\nint main()\n{\n    ofstream fout(getenv(\"OUTPUT_PATH\"));\n\n    int t;\n    cin \u003e\u003e t;\n    cin.ignore(numeric_limits\u003cstreamsize\u003e::max(), '\\n');\n\n    for (int t_itr = 0; t_itr \u003c t; t_itr++) {\n        long n;\n        cin \u003e\u003e n;\n        cin.ignore(numeric_limits\u003cstreamsize\u003e::max(), '\\n');\n\n        int result = summingSeries(n);\n\n        fout \u003c\u003c result \u003c\u003c \"\\n\";\n    }\n\n    fout.close();\n\n    return 0;\n}\n","score":1.0,"language":"cpp"},{"contest":"Master","challenge":"Left Rotation","code":"#include \u003cbits/stdc++.h\u003e\n\nusing namespace std;\n\nint main()\n{\n    int n,r;\n    cin\u003e\u003en\u003e\u003er;\n    int a[n];\n    for(int i=0;i\u003cn;i++)\n        cin\u003e\u003ea[i];\n    for(int i=0;i\u003cn;i++)\n        cout\u003c\u003ca[(i+r)%n]\u003c\u003c\" \";\n    return 0;\n}\n\n","score":1.0,"language":"cpp14"},{"contest":"Master","challenge":"Jumping on the Clouds","code":"#include \u003cbits/stdc++.h\u003e\n\nusing namespace std;\n\nvector\u003cstring\u003e split_string(string);\n\n// Complete the jumpingOnClouds function below.\nint jumpingOnClouds(vector\u003cint\u003e c) {\n    int i,j=0;\n    for( i=0 ; i\u003cc.size() ; i+=!c[i+2]?2:1 ) ++j;\n    return j-1;\n}\n\nint main()\n{\n    ofstream fout(getenv(\"OUTPUT_PATH\"));\n\n    int n;\n    cin \u003e\u003e n;\n    cin.ignore(numeric_limits\u003cstreamsize\u003e::max(), '\\n');\n\n    string c_temp_temp;\n    getline(cin, c_temp_temp);\n\n    vector\u003cstring\u003e c_temp = split_string(c_temp_temp);\n\n    vector\u003cint\u003e c(n);\n\n    for (int i = 0; i \u003c n; i++) {\n        int c_item = stoi(c_temp[i]);\n\n        c[i] = c_item;\n    }\n\n    int result = jumpingOnClouds(c);\n\n    fout \u003c\u003c result \u003c\u003c \"\\n\";\n\n    fout.close();\n\n    return 0;\n}\n\nvector\u003cstring\u003e split_string(string input_string) {\n    string::iterator new_end = unique(input_string.begin(), input_string.end(), [] (const char \u0026x, const char \u0026y) {\n        return x == y and x == ' ';\n    });\n\n    input_string.erase(new_end, input_string.end());\n\n    while (input_string[input_string.length() - 1] == ' ') {\n        input_string.pop_back();\n    }\n\n    vector\u003cstring\u003e splits;\n    char delimiter = ' ';\n\n    size_t i = 0;\n    size_t pos = input_string.find(delimiter);\n\n    while (pos != string::npos) {\n        splits.push_back(input_string.substr(i, pos - i));\n\n        i = pos + 1;\n        pos = input_string.find(delimiter, i);\n    }\n\n    splits.push_back(input_string.substr(i, min(pos, input_string.length()) - i + 1));\n\n    return splits;\n}\n","score":0.857142857143,"language":"cpp"},{"contest":"Master","challenge":"Jumping on the Clouds","code":"#include \u003cbits/stdc++.h\u003e\n\nusing namespace std;\n\nvector\u003cstring\u003e split_string(string);\n\n// Complete the jumpingOnClouds function below.\nint jumpingOnClouds(vector\u003cint\u003e c) {\n    int i,j=0;\n    for( i=0 ; i\u003c=c.size() ; i+=!c[i+2]?2:1 ) ++j;\n    return j-1;\n}\n\nint main()\n{\n    ofstream fout(getenv(\"OUTPUT_PATH\"));\n\n    int n;\n    cin \u003e\u003e n;\n    cin.ignore(numeric_limits\u003cstreamsize\u003e::max(), '\\n');\n\n    string c_temp_temp;\n    getline(cin, c_temp_temp);\n\n    vector\u003cstring\u003e c_temp = split_string(c_temp_temp);\n\n    vector\u003cint\u003e c(n);\n\n    for (int i = 0; i \u003c n; i++) {\n        int c_item = stoi(c_temp[i]);\n\n        c[i] = c_item;\n    }\n\n    int result = jumpingOnClouds(c);\n\n    fout \u003c\u003c result \u003c\u003c \"\\n\";\n\n    fout.close();\n\n    return 0;\n}\n\nvector\u003cstring\u003e split_string(string input_string) {\n    string::iterator new_end = unique(input_string.begin(), input_string.end(), [] (const char \u0026x, const char \u0026y) {\n        return x == y and x == ' ';\n    });\n\n    input_string.erase(new_end, input_string.end());\n\n    while (input_string[input_string.length() - 1] == ' ') {\n        input_string.pop_back();\n    }\n\n    vector\u003cstring\u003e splits;\n    char delimiter = ' ';\n\n    size_t i = 0;\n    size_t pos = input_string.find(delimiter);\n\n    while (pos != string::npos) {\n        splits.push_back(input_string.substr(i, pos - i));\n\n        i = pos + 1;\n        pos = input_string.find(delimiter, i);\n    }\n\n    splits.push_back(input_string.substr(i, min(pos, input_string.length()) - i + 1));\n\n    return splits;\n}\n","score":0.571428571429,"language":"cpp"},{"contest":"Master","challenge":"Jumping on the Clouds","code":"#include \u003cbits/stdc++.h\u003e\n\nusing namespace std;\n\nvector\u003cstring\u003e split_string(string);\n\n// Complete the jumpingOnClouds function below.\nint jumpingOnClouds(vector\u003cint\u003e c) {\n    int i,j=0;\n    for( i=0 ; i\u003c=c.size() ; i+=!c[i+2]?2:1 ) ++j;\n    return j-1;\n}\n\nint main()\n{\n    ofstream fout(getenv(\"OUTPUT_PATH\"));\n\n    int n;\n    cin \u003e\u003e n;\n    cin.ignore(numeric_limits\u003cstreamsize\u003e::max(), '\\n');\n\n    string c_temp_temp;\n    getline(cin, c_temp_temp);\n\n    vector\u003cstring\u003e c_temp = split_string(c_temp_temp);\n\n    vector\u003cint\u003e c(n);\n\n    for (int i = 0; i \u003c n; i++) {\n        int c_item = stoi(c_temp[i]);\n\n        c[i] = c_item;\n    }\n\n    int result = jumpingOnClouds(c);\n\n    fout \u003c\u003c result \u003c\u003c \"\\n\";\n\n    fout.close();\n\n    return 0;\n}\n\nvector\u003cstring\u003e split_string(string input_string) {\n    string::iterator new_end = unique(input_string.begin(), input_string.end(), [] (const char \u0026x, const char \u0026y) {\n        return x == y and x == ' ';\n    });\n\n    input_string.erase(new_end, input_string.end());\n\n    while (input_string[input_string.length() - 1] == ' ') {\n        input_string.pop_back();\n    }\n\n    vector\u003cstring\u003e splits;\n    char delimiter = ' ';\n\n    size_t i = 0;\n    size_t pos = input_string.find(delimiter);\n\n    while (pos != string::npos) {\n        splits.push_back(input_string.substr(i, pos - i));\n\n        i = pos + 1;\n        pos = input_string.find(delimiter, i);\n    }\n\n    splits.push_back(input_string.substr(i, min(pos, input_string.length()) - i + 1));\n\n    return splits;\n}\n","score":0.571428571429,"language":"cpp"},{"contest":"Master","challenge":"Jumping on the Clouds","code":"#include \u003cbits/stdc++.h\u003e\n\nusing namespace std;\n\nvector\u003cstring\u003e split_string(string);\n\n// Complete the jumpingOnClouds function below.\nint jumpingOnClouds(vector\u003cint\u003e c) {\n    int i,j=0;\n    for( i=0 ; i\u003cc.size()-1 ; i+=!c[i+2]?2:1 ) ++j;\n    return j;\n}\n\nint main()\n{\n    ofstream fout(getenv(\"OUTPUT_PATH\"));\n\n    int n;\n    cin \u003e\u003e n;\n    cin.ignore(numeric_limits\u003cstreamsize\u003e::max(), '\\n');\n\n    string c_temp_temp;\n    getline(cin, c_temp_temp);\n\n    vector\u003cstring\u003e c_temp = split_string(c_temp_temp);\n\n    vector\u003cint\u003e c(n);\n\n    for (int i = 0; i \u003c n; i++) {\n        int c_item = stoi(c_temp[i]);\n\n        c[i] = c_item;\n    }\n\n    int result = jumpingOnClouds(c);\n\n    fout \u003c\u003c result \u003c\u003c \"\\n\";\n\n    fout.close();\n\n    return 0;\n}\n\nvector\u003cstring\u003e split_string(string input_string) {\n    string::iterator new_end = unique(input_string.begin(), input_string.end(), [] (const char \u0026x, const char \u0026y) {\n        return x == y and x == ' ';\n    });\n\n    input_string.erase(new_end, input_string.end());\n\n    while (input_string[input_string.length() - 1] == ' ') {\n        input_string.pop_back();\n    }\n\n    vector\u003cstring\u003e splits;\n    char delimiter = ' ';\n\n    size_t i = 0;\n    size_t pos = input_string.find(delimiter);\n\n    while (pos != string::npos) {\n        splits.push_back(input_string.substr(i, pos - i));\n\n        i = pos + 1;\n        pos = input_string.find(delimiter, i);\n    }\n\n    splits.push_back(input_string.substr(i, min(pos, input_string.length()) - i + 1));\n\n    return splits;\n}\n","score":1.0,"language":"cpp"},{"contest":"Master","challenge":"Repeated String","code":"#include \u003cbits/stdc++.h\u003e\n\nusing namespace std;\n\n// Complete the repeatedString function below.\nlong repeatedString(string s, long n) {\n    long count_a=0,n_strings,part_s;\n    for(int i=0;i\u003cs.length();i++)\n        if(s[i]=='a')\n            ++count_a;\n    n_strings=n/s.length();\n    part_s=n%s.length();\n    count_a*=n_strings;\n    for(int i=0;i\u003cpart_s;i++)\n        if(s[i]=='a')\n            ++count_a;\n    return count_a;\n}\n\nint main()\n{\n    ofstream fout(getenv(\"OUTPUT_PATH\"));\n\n    string s;\n    getline(cin, s);\n\n    long n;\n    cin \u003e\u003e n;\n    cin.ignore(numeric_limits\u003cstreamsize\u003e::max(), '\\n');\n\n    long result = repeatedString(s, n);\n\n    fout \u003c\u003c result \u003c\u003c \"\\n\";\n\n    fout.close();\n\n    return 0;\n}\n","score":1.0,"language":"cpp"},{"contest":"Master","challenge":"Encryption","code":"#include \u003cbits/stdc++.h\u003e\n\nusing namespace std;\n\n// Complete the encryption function below.\nstring encryption(string s) {\n    s.erase(remove(s.begin(),s.end(),' '),s.end());\n    int row=floor(sqrt(s.length())),col=ceil(sqrt(s.length()));\n    if(row*col\u003cs.length());\n        row+=1;\n    char c[col][row+1];\n    // cout\u003c\u003crow\u003c\u003c\" \"\u003c\u003ccol\u003c\u003cendl;\n    // for(int i=0;i\u003ccol;i++)\n    //     for(int j=0;j\u003crow+1;j++)\n    //         c[i][j]=0;\n    // for(int i=0;i\u003ccol;i++)\n    //     for(int j=0;j\u003crow+1;j++)\n    //         cout\u003c\u003cint(c[i][j])\u003c\u003cendl;\n    memset(c,0,col*(row+1));\n    for(int i=0;i\u003crow;i++) {\n        for(int j=0;j\u003ccol;j++) {\n            if(((i*col)+j)\u003cs.length())\n                c[j][i]=s[(i*col)+j];\n        }\n    }\n    s.clear();\n    for(int j=0;j\u003ccol;j++) {\n        s=s+c[j]+\" \";\n    }\n    return s;\n}\nint main()\n{\n    ofstream fout(getenv(\"OUTPUT_PATH\"));\n\n    string s;\n    getline(cin, s);\n\n    string result = encryption(s);\n\n    fout \u003c\u003c result \u003c\u003c \"\\n\";\n\n    fout.close();\n\n    return 0;\n}\n","score":1.0,"language":"cpp14"},{"contest":"Master","challenge":"Encryption","code":"#include \u003cbits/stdc++.h\u003e\nusing namespace std;\n\nstring encryption(string s) {\n    s.erase(remove(s.begin(),s.end(),' '),s.end());\n    int row=floor(sqrt(s.length())),col=ceil(sqrt(s.length()));\n    if(row*col\u003cs.length());\n        row+=1;\n    char c[col][row+1];\n    memset(c,0,col*(row+1));\n    for(int i=0;i\u003crow;i++)\n        for(int j=0;j\u003ccol;j++)\n            if(((i*col)+j)\u003cs.length())\n                c[j][i]=s[(i*col)+j];\n    s.clear();\n    for(int j=0;j\u003ccol;j++)\n        s=s+c[j]+\" \";\n    return s;\n}\n\nint main()\n{\n    ofstream fout(getenv(\"OUTPUT_PATH\"));\n\n    string s;\n    getline(cin, s);\n\n    string result = encryption(s);\n\n    fout \u003c\u003c result \u003c\u003c \"\\n\";\n\n    fout.close();\n\n    return 0;\n}\n","score":1.0,"language":"cpp14"},{"contest":"Master","challenge":"Mars Exploration","code":"#include \u003cbits/stdc++.h\u003e\n\nusing namespace std;\n\n// Complete the marsExploration function below.\nint marsExploration(string s) {\n    string SOS=\"SOS\";\n    int count=0;\n    for(int i=0;i\u003cs.length();i++)\n        if(s[i]!=SOS[i%3])\n            ++count;\n    return count;\n}\n\nint main()\n{\n    ofstream fout(getenv(\"OUTPUT_PATH\"));\n\n    string s;\n    getline(cin, s);\n\n    int result = marsExploration(s);\n\n    fout \u003c\u003c result \u003c\u003c \"\\n\";\n\n    fout.close();\n\n    return 0;\n}\n","score":1.0,"language":"cpp"},{"contest":"Master","challenge":"ACM ICPC Team","code":"#include \u003cbits/stdc++.h\u003e\n\nusing namespace std;\n\nvector\u003cstring\u003e split_string(string);\n\n// Complete the acmTeam function below.\nvector\u003cint\u003e acmTeam(vector\u003cstring\u003e topic) {\n    int max=0,count,team_c=0;\n    for(int i=0;i\u003ctopic.size();i++) {\n        for(int j=i;j\u003ctopic.size();j++) {\n            count=0;\n            for(int k=0;k\u003ctopic[i].length();k++)\n                if(topic[i][k]=='1' || topic[j][k]=='1')\n                    ++count;\n            if(count\u003emax)\n                max=count;\n        }\n    }\n    for(int i=0;i\u003ctopic.size();i++) {\n        for(int j=i;j\u003ctopic.size();j++) {\n            count=0;\n            for(int k=0;k\u003ctopic[i].length();k++)\n                if(topic[i][k]=='1' || topic[j][k]=='1')\n                    ++count;\n            if(count==max)\n                ++team_c;\n        }\n    }\n    return {max,team_c};\n}\n\nint main()\n{\n    ofstream fout(getenv(\"OUTPUT_PATH\"));\n\n    string nm_temp;\n    getline(cin, nm_temp);\n\n    vector\u003cstring\u003e nm = split_string(nm_temp);\n\n    int n = stoi(nm[0]);\n\n    int m = stoi(nm[1]);\n\n    vector\u003cstring\u003e topic(n);\n\n    for (int i = 0; i \u003c n; i++) {\n        string topic_item;\n        getline(cin, topic_item);\n\n        topic[i] = topic_item;\n    }\n\n    vector\u003cint\u003e result = acmTeam(topic);\n\n    for (int i = 0; i \u003c result.size(); i++) {\n        fout \u003c\u003c result[i];\n\n        if (i != result.size() - 1) {\n            fout \u003c\u003c \"\\n\";\n        }\n    }\n\n    fout \u003c\u003c \"\\n\";\n\n    fout.close();\n\n    return 0;\n}\n\nvector\u003cstring\u003e split_string(string input_string) {\n    string::iterator new_end = unique(input_string.begin(), input_string.end(), [] (const char \u0026x, const char \u0026y) {\n        return x == y and x == ' ';\n    });\n\n    input_string.erase(new_end, input_string.end());\n\n    while (input_string[input_string.length() - 1] == ' ') {\n        input_string.pop_back();\n    }\n\n    vector\u003cstring\u003e splits;\n    char delimiter = ' ';\n\n    size_t i = 0;\n    size_t pos = input_string.find(delimiter);\n\n    while (pos != string::npos) {\n        splits.push_back(input_string.substr(i, pos - i));\n\n        i = pos + 1;\n        pos = input_string.find(delimiter, i);\n    }\n\n    splits.push_back(input_string.substr(i, min(pos, input_string.length()) - i + 1));\n\n    return splits;\n}\n","score":1.0,"language":"cpp"},{"contest":"Master","challenge":"New Year Chaos","code":"#include \u003cbits/stdc++.h\u003e\n\nusing namespace std;\n\nvector\u003cstring\u003e split_string(string);\n\n// Complete the minimumBribes function below.\nvoid minimumBribes(vector\u003cint\u003e q) {\n    int count=0;\n    for(int i=0;i\u003cq.size();i++) {\n        if(q[i]-i\u003e3) {\n            cout\u003c\u003c\"Too chaotic\"\u003c\u003cendl;\n            return;\n        }\n        if(q[i]\u003ci+1)\n            count+=((i+1)-q[i]);\n    }\n    cout\u003c\u003ccount\u003c\u003cendl;\n}\n\nint main() {\n    int t;\n    cin \u003e\u003e t;\n    cin.ignore(numeric_limits\u003cstreamsize\u003e::max(), '\\n');\n\n    for (int t_itr = 0; t_itr \u003c t; t_itr++) {\n        int n;\n        cin \u003e\u003e n;\n        cin.ignore(numeric_limits\u003cstreamsize\u003e::max(), '\\n');\n\n        string q_temp_temp;\n        getline(cin, q_temp_temp);\n\n        vector\u003cstring\u003e q_temp = split_string(q_temp_temp);\n\n        vector\u003cint\u003e q(n);\n\n        for (int i = 0; i \u003c n; i++) {\n            int q_item = stoi(q_temp[i]);\n\n            q[i] = q_item;\n        }\n\n        minimumBribes(q);\n    }\n\n    return 0;\n}\n\nvector\u003cstring\u003e split_string(string input_string) {\n    string::iterator new_end = unique(input_string.begin(), input_string.end(), [] (const char \u0026x, const char \u0026y) {\n        return x == y and x == ' ';\n    });\n\n    input_string.erase(new_end, input_string.end());\n\n    while (input_string[input_string.length() - 1] == ' ') {\n        input_string.pop_back();\n    }\n\n    vector\u003cstring\u003e splits;\n    char delimiter = ' ';\n\n    size_t i = 0;\n    size_t pos = input_string.find(delimiter);\n\n    while (pos != string::npos) {\n        splits.push_back(input_string.substr(i, pos - i));\n\n        i = pos + 1;\n        pos = input_string.find(delimiter, i);\n    }\n\n    splits.push_back(input_string.substr(i, min(pos, input_string.length()) - i + 1));\n\n    return splits;\n}\n\n","score":0.0,"language":"cpp"},{"contest":"Master","challenge":"New Year Chaos","code":"#include \u003cbits/stdc++.h\u003e\n\nusing namespace std;\n\nvector\u003cstring\u003e split_string(string);\n\n// Complete the minimumBribes function below.\nvoid minimumBribes(vector\u003cint\u003e q) {\n    int count=0;\n    for(int i=0;i\u003cq.size();i++) {\n        if(q[i]-i\u003e3) {\n            cout\u003c\u003c\"Too chaotic\"\u003c\u003cendl;\n            return;\n        }\n        if(q[i]\u003ci+1)\n            count+=((i+1)-q[i]);\n    }\n    cout\u003c\u003ccount\u003c\u003cendl;\n}\n\nint main() {\n    int t;\n    cin \u003e\u003e t;\n    cin.ignore(numeric_limits\u003cstreamsize\u003e::max(), '\\n');\n\n    for (int t_itr = 0; t_itr \u003c t; t_itr++) {\n        int n;\n        cin \u003e\u003e n;\n        cin.ignore(numeric_limits\u003cstreamsize\u003e::max(), '\\n');\n\n        string q_temp_temp;\n        getline(cin, q_temp_temp);\n\n        vector\u003cstring\u003e q_temp = split_string(q_temp_temp);\n\n        vector\u003cint\u003e q(n);\n\n        for (int i = 0; i \u003c n; i++) {\n            int q_item = stoi(q_temp[i]);\n\n            q[i] = q_item;\n        }\n\n        minimumBribes(q);\n    }\n\n    return 0;\n}\n\nvector\u003cstring\u003e split_string(string input_string) {\n    string::iterator new_end = unique(input_string.begin(), input_string.end(), [] (const char \u0026x, const char \u0026y) {\n        return x == y and x == ' ';\n    });\n\n    input_string.erase(new_end, input_string.end());\n\n    while (input_string[input_string.length() - 1] == ' ') {\n        input_string.pop_back();\n    }\n\n    vector\u003cstring\u003e splits;\n    char delimiter = ' ';\n\n    size_t i = 0;\n    size_t pos = input_string.find(delimiter);\n\n    while (pos != string::npos) {\n        splits.push_back(input_string.substr(i, pos - i));\n\n        i = pos + 1;\n        pos = input_string.find(delimiter, i);\n    }\n\n    splits.push_back(input_string.substr(i, min(pos, input_string.length()) - i + 1));\n\n    return splits;\n}\n\n","score":0.0,"language":"cpp"},{"contest":"Master","challenge":"Equal","code":"#include \u003cbits/stdc++.h\u003e\n\nusing namespace std;\n\nvector\u003cstring\u003e split_string(string);\n\n// Complete the equal function below.\nint equal(vector\u003cint\u003e arr) {\n    int n=arr.size(),constant=0,steps=0;\n    sort(arr.begin(),arr.end());\n    for (int i = n - 2; i \u003e= 0; i--) {\n      cout \u003c\u003c arr[i + 1] \u003c\u003c \" \" \u003c\u003c arr[i] \u003c\u003c \" \" \u003c\u003c constant \u003c\u003c endl;\n      arr[i]+=constant;\n      int diff = arr[i + 1] - arr[i];\n      constant += diff;\n      arr[i] += diff;\n    l:;\n      cout \u003c\u003c i \u003c\u003c \" \" \u003c\u003c diff \u003c\u003c endl;\n      if (diff == 0)\n        continue;\n      else if (diff == 1 || diff == 2 || diff == 5)\n        steps += 1;\n      else if (diff == 3 || diff == 4)\n        steps += 2;\n      else {\n        int m = diff / 5;\n        diff %= 5;\n        steps += m;\n        goto l;\n      }\n    }\n    return steps;\n}\n\nint main()\n{\n    ofstream fout(getenv(\"OUTPUT_PATH\"));\n\n    int t;\n    cin \u003e\u003e t;\n    cin.ignore(numeric_limits\u003cstreamsize\u003e::max(), '\\n');\n\n    for (int t_itr = 0; t_itr \u003c t; t_itr++) {\n        int n;\n        cin \u003e\u003e n;\n        cin.ignore(numeric_limits\u003cstreamsize\u003e::max(), '\\n');\n\n        string arr_temp_temp;\n        getline(cin, arr_temp_temp);\n\n        vector\u003cstring\u003e arr_temp = split_string(arr_temp_temp);\n\n        vector\u003cint\u003e arr(n);\n\n        for (int i = 0; i \u003c n; i++) {\n            int arr_item = stoi(arr_temp[i]);\n\n            arr[i] = arr_item;\n        }\n\n        int result = equal(arr);\n\n        fout \u003c\u003c result \u003c\u003c \"\\n\";\n    }\n\n    fout.close();\n\n    return 0;\n}\n\nvector\u003cstring\u003e split_string(string input_string) {\n    string::iterator new_end = unique(input_string.begin(), input_string.end(), [] (const char \u0026x, const char \u0026y) {\n        return x == y and x == ' ';\n    });\n\n    input_string.erase(new_end, input_string.end());\n\n    while (input_string[input_string.length() - 1] == ' ') {\n        input_string.pop_back();\n    }\n\n    vector\u003cstring\u003e splits;\n    char delimiter = ' ';\n\n    size_t i = 0;\n    size_t pos = input_string.find(delimiter);\n\n    while (pos != string::npos) {\n        splits.push_back(input_string.substr(i, pos - i));\n\n        i = pos + 1;\n        pos = input_string.find(delimiter, i);\n    }\n\n    splits.push_back(input_string.substr(i, min(pos, input_string.length()) - i + 1));\n\n    return splits;\n}\n","score":0.0,"language":"cpp14"},{"contest":"Master","challenge":"Equal","code":"#include \u003cbits/stdc++.h\u003e\n\nusing namespace std;\n\nvector\u003cstring\u003e split_string(string);\nvoid print(vector\u003cint\u003e a) {\n  for (int i = 0; i \u003c a.size(); i++)\n    cout \u003c\u003c a[i] \u003c\u003c \" \";\n  cout \u003c\u003c endl;\n}\n\n// Complete the equal function below.\nint equal(vector\u003cint\u003e arr) {\n  int n = arr.size(), constant = 0, steps = 0;\n  sort(arr.begin(), arr.end());\n  print(arr);\n  for (int i = n - 2; i \u003e= 0; i--) {\n    arr[i] += constant;\n    int diff = arr[i + 1] - arr[i];\n    constant += diff;\n    cout \u003c\u003c \"i: \" \u003c\u003c i \u003c\u003c \"\\t\"\n         \u003c\u003c \"diff:  \" \u003c\u003c diff \u003c\u003c \"\\t\"\n         \u003c\u003c \"arr[i+1]: \" \u003c\u003c arr[i + 1] \u003c\u003c \"\\t\"\n         \u003c\u003c \"arr[i]: \" \u003c\u003c arr[i] \u003c\u003c \"\\t\"\n         \u003c\u003c \"constant: \" \u003c\u003c constant \u003c\u003c \"\\t\";\n    arr[i] += diff;\n  l:;\n    if (diff == 0)\n      continue;\n    else if (diff == 1 || diff == 2 || diff == 5)\n      steps += 1;\n    else if (diff == 3 || diff == 4)\n      steps += 2;\n    else {\n      int m = diff / 5;\n      diff %= 5;\n      steps += m;\n      goto l;\n    }\n    cout \u003c\u003c \"steps: \" \u003c\u003c steps \u003c\u003c endl;\n    print(arr);\n  }\n  return steps;\n}\n\nint main()\n{\n    ofstream fout(getenv(\"OUTPUT_PATH\"));\n\n    int t;\n    cin \u003e\u003e t;\n    cin.ignore(numeric_limits\u003cstreamsize\u003e::max(), '\\n');\n\n    for (int t_itr = 0; t_itr \u003c t; t_itr++) {\n        int n;\n        cin \u003e\u003e n;\n        cin.ignore(numeric_limits\u003cstreamsize\u003e::max(), '\\n');\n\n        string arr_temp_temp;\n        getline(cin, arr_temp_temp);\n\n        vector\u003cstring\u003e arr_temp = split_string(arr_temp_temp);\n\n        vector\u003cint\u003e arr(n);\n\n        for (int i = 0; i \u003c n; i++) {\n            int arr_item = stoi(arr_temp[i]);\n\n            arr[i] = arr_item;\n        }\n\n        int result = equal(arr);\n\n        fout \u003c\u003c result \u003c\u003c \"\\n\";\n    }\n\n    fout.close();\n\n    return 0;\n}\n\nvector\u003cstring\u003e split_string(string input_string) {\n    string::iterator new_end = unique(input_string.begin(), input_string.end(), [] (const char \u0026x, const char \u0026y) {\n        return x == y and x == ' ';\n    });\n\n    input_string.erase(new_end, input_string.end());\n\n    while (input_string[input_string.length() - 1] == ' ') {\n        input_string.pop_back();\n    }\n\n    vector\u003cstring\u003e splits;\n    char delimiter = ' ';\n\n    size_t i = 0;\n    size_t pos = input_string.find(delimiter);\n\n    while (pos != string::npos) {\n        splits.push_back(input_string.substr(i, pos - i));\n\n        i = pos + 1;\n        pos = input_string.find(delimiter, i);\n    }\n\n    splits.push_back(input_string.substr(i, min(pos, input_string.length()) - i + 1));\n\n    return splits;\n}\n","score":0.0,"language":"cpp14"},{"contest":"Master","challenge":"Equal","code":"#include \u003cbits/stdc++.h\u003e\n\nusing namespace std;\n\nvector\u003cstring\u003e split_string(string);\nvoid print(vector\u003cint\u003e a) {\n    for (int i = 0; i \u003c a.size(); i++)\n        cout \u003c\u003c a[i] \u003c\u003c \" \";\n    cout \u003c\u003c endl;\n}\n\n// Complete the equal function below.\nint equal(vector\u003cint\u003e a) {\n    int n = a.size(), steps = 0;\n    sort(a.begin(), a.end());\n    for (int i = 1; i \u003c n; i++) {\n        int diff=a[i]-a[i-1];\n        int m=diff/5;\n        diff=diff%5;\n        steps+=m;\n        if (diff == 1 || diff == 2)\n            steps += 1;\n        else if (diff == 3 || diff == 4)\n            steps += 2;\n        a[i]=a[i-1];\n    }\n    return steps;\n}\n\nint main() {\n    ofstream fout(getenv(\"OUTPUT_PATH\"));\n\n    int t;\n    cin \u003e\u003e t;\n    cin.ignore(numeric_limits\u003cstreamsize\u003e::max(), '\\n');\n\n    for (int t_itr = 0; t_itr \u003c t; t_itr++) {\n        int n;\n        cin \u003e\u003e n;\n        cin.ignore(numeric_limits\u003cstreamsize\u003e::max(), '\\n');\n\n        string arr_temp_temp;\n        getline(cin, arr_temp_temp);\n\n        vector\u003cstring\u003e arr_temp = split_string(arr_temp_temp);\n\n        vector\u003cint\u003e arr(n);\n\n        for (int i = 0; i \u003c n; i++) {\n            int arr_item = stoi(arr_temp[i]);\n\n            arr[i] = arr_item;\n        }\n\n        int result = equal(arr);\n\n        fout \u003c\u003c result \u003c\u003c \"\\n\";\n    }\n\n    fout.close();\n\n    return 0;\n}\n\nvector\u003cstring\u003e split_string(string input_string) {\n    string::iterator new_end = unique(input_string.begin(), input_string.end(), [] (const char \u0026x, const char \u0026y) {\n        return x == y and x == ' ';\n    });\n\n    input_string.erase(new_end, input_string.end());\n\n    while (input_string[input_string.length() - 1] == ' ') {\n        input_string.pop_back();\n    }\n\n    vector\u003cstring\u003e splits;\n    char delimiter = ' ';\n\n    size_t i = 0;\n    size_t pos = input_string.find(delimiter);\n\n    while (pos != string::npos) {\n        splits.push_back(input_string.substr(i, pos - i));\n\n        i = pos + 1;\n        pos = input_string.find(delimiter, i);\n    }\n\n    splits.push_back(input_string.substr(i, min(pos, input_string.length()) - i + 1));\n\n    return splits;\n}\n","score":0.5,"language":"cpp14"},{"contest":"Master","challenge":"Equal","code":"#include \u003cbits/stdc++.h\u003e\n\nusing namespace std;\n\nvector\u003cstring\u003e split_string(string);\nvoid print(vector\u003cint\u003e a) {\n  for (int i = 0; i \u003c a.size(); i++)\n    cout \u003c\u003c a[i] \u003c\u003c \" \";\n  cout \u003c\u003c endl;\n}\nint equal_helper(vector\u003cint\u003e a,int min) {\n  int n = a.size(), steps = 0;\n  for (int i = 0; i \u003c n; i++) {\n    int diff = a[i] - min;\n    int m = diff / 5;\n    diff = diff % 5;\n    steps += m;\n    if (diff == 1 || diff == 2)\n      steps += 1;\n    else if (diff == 3 || diff == 4)\n      steps += 2;\n    a[i] = min;\n  }\n  return steps;\n}\n// Complete the equal function below.\nint equal(vector\u003cint\u003e a) {\n    sort(a.begin(), a.end());\n    int min_steps=INT_MAX;\n    for(int i=0;i\u003c5;i++)\n        min_steps=min(min_steps,equal_helper(a,a[0]-i));\n    return min_steps;\n}\n\nint main() {\n    ofstream fout(getenv(\"OUTPUT_PATH\"));\n\n    int t;\n    cin \u003e\u003e t;\n    cin.ignore(numeric_limits\u003cstreamsize\u003e::max(), '\\n');\n\n    for (int t_itr = 0; t_itr \u003c t; t_itr++) {\n        int n;\n        cin \u003e\u003e n;\n        cin.ignore(numeric_limits\u003cstreamsize\u003e::max(), '\\n');\n\n        string arr_temp_temp;\n        getline(cin, arr_temp_temp);\n\n        vector\u003cstring\u003e arr_temp = split_string(arr_temp_temp);\n\n        vector\u003cint\u003e arr(n);\n\n        for (int i = 0; i \u003c n; i++) {\n            int arr_item = stoi(arr_temp[i]);\n\n            arr[i] = arr_item;\n        }\n\n        int result = equal(arr);\n\n        fout \u003c\u003c result \u003c\u003c \"\\n\";\n    }\n\n    fout.close();\n\n    return 0;}\n\nvector\u003cstring\u003e split_string(string input_string) {\n    string::iterator new_end = unique(input_string.begin(), input_string.end(), [] (const char \u0026x, const char \u0026y) {\n        return x == y and x == ' ';\n    });\n\n    input_string.erase(new_end, input_string.end());\n\n    while (input_string[input_string.length() - 1] == ' ') {\n        input_string.pop_back();\n    }\n\n    vector\u003cstring\u003e splits;\n    char delimiter = ' ';\n\n    size_t i = 0;\n    size_t pos = input_string.find(delimiter);\n\n    while (pos != string::npos) {\n        splits.push_back(input_string.substr(i, pos - i));\n\n        i = pos + 1;\n        pos = input_string.find(delimiter, i);\n    }\n\n    splits.push_back(input_string.substr(i, min(pos, input_string.length()) - i + 1));\n\n    return splits;}\n","score":1.0,"language":"cpp14"},{"contest":"Master","challenge":"The Full Counting Sort","code":"#include \u003cbits/stdc++.h\u003e\n#define pb push_back\nusing namespace std;\n\nint main() {\n    string s;\n    int n,x,N;\n    cin\u003e\u003en;\n    N=n/2;\n    vector\u003cvector\u003cstring\u003e \u003e v(101);\n    while(n--){\n        cin\u003e\u003ex\u003e\u003es;\n        v[x].pb(n\u003e=N?\"-\":s);\n    }\n    for(int i=0;i\u003cv.size();i++)\n        for(int j=0;j\u003cv[i].size();j++)\n            cout\u003c\u003cv[i][j]\u003c\u003c\" \";\n}\n","score":1.0,"language":"cpp14"},{"contest":"Master","challenge":"Balanced Brackets","code":"#include \u003cbits/stdc++.h\u003e\n\nusing namespace std;\n\n// Complete the isBalanced function below.\nstring isBalanced(string s) {\n  stack\u003cchar\u003e c;\n  for (int i = 0; i \u003c s.length(); i++) {\n    if (s[i] == '{' || s[i] == '(' || s[i] == '[')\n      c.push(s[i]);\n    else if (!c.empty() \u0026\u0026 s[i] - c.top() \u003c 3)\n      c.pop();\n    else\n      return \"NO\";\n  }\n  if (c.empty())\n    return \"YES\";\n  else\n    return \"NO\";\n}\n\nint main() {\n  ofstream fout(getenv(\"OUTPUT_PATH\"));\n\n  int t;\n  cin \u003e\u003e t;\n  cin.ignore(numeric_limits\u003cstreamsize\u003e::max(), '\\n');\n\n  for (int t_itr = 0; t_itr \u003c t; t_itr++) {\n    string s;\n    getline(cin, s);\n\n    string result = isBalanced(s);\n\n    fout \u003c\u003c result \u003c\u003c \"\\n\";\n  }\n\n  fout.close();\n\n  return 0;\n}\n","score":1.0,"language":"cpp14"},{"contest":"Master","challenge":"Two Strings","code":"#include \u003cbits/stdc++.h\u003e\n\nusing namespace std;\n\n// Complete the twoStrings function below.\nstring twoStrings(string s1, string s2) {\n    bool alpha_s1[26]={0};\n    for(int i=0;i\u003cs1.length();i++)\n        alpha_s1[s1[i]-'a']=true;\n    for(int i=0;i\u003cs2.length();i++)\n        if(alpha_s1[s2[i]-'a'])\n            return \"YES\";\n    return \"NO\";\n}\n\nint main()\n{\n    ofstream fout(getenv(\"OUTPUT_PATH\"));\n\n    int q;\n    cin \u003e\u003e q;\n    cin.ignore(numeric_limits\u003cstreamsize\u003e::max(), '\\n');\n\n    for (int q_itr = 0; q_itr \u003c q; q_itr++) {\n        string s1;\n        getline(cin, s1);\n\n        string s2;\n        getline(cin, s2);\n\n        string result = twoStrings(s1, s2);\n\n        fout \u003c\u003c result \u003c\u003c \"\\n\";\n    }\n\n    fout.close();\n\n    return 0;\n}\n","score":1.0,"language":"cpp14"},{"contest":"Master","challenge":"The Power Sum","code":"#include \u003cbits/stdc++.h\u003e\n\nusing namespace std;\n\n// Complete the powerSum function below.\nint powerSum(int x, int n, int i=1) {\n    if(x==0 || pow(i,n)\u003ex) return x==0;\n    return powerSum(x-pow(i,n),n,i+1) + powerSum(x,n,i+1);\n}\n\nint main()\n{\n    ofstream fout(getenv(\"OUTPUT_PATH\"));\n\n    int X;\n    cin \u003e\u003e X;\n    cin.ignore(numeric_limits\u003cstreamsize\u003e::max(), '\\n');\n\n    int N;\n    cin \u003e\u003e N;\n    cin.ignore(numeric_limits\u003cstreamsize\u003e::max(), '\\n');\n\n    int result = powerSum(X, N);\n\n    fout \u003c\u003c result \u003c\u003c \"\\n\";\n\n    fout.close();\n\n    return 0;\n}\n","score":1.0,"language":"cpp14"},{"contest":"Master","challenge":"Equalize the Array","code":"#include \u003cbits/stdc++.h\u003e\n#define max(x) *max_element(x,x+101)\nusing namespace std;\n\nint main() {\n    int n,x; cin\u003e\u003en;\n    int N=n,dp[101]={0};\n    while(n--) {\n        cin\u003e\u003ex;\n        ++dp[x];\n    } cout\u003c\u003cN-max(dp)\u003c\u003cendl;\n}","score":1.0,"language":"cpp14"},{"contest":"Master","challenge":"Akhil and GF","code":"#include \u003cbits/stdc++.h\u003e\n\nusing namespace std;\n\nvector\u003cstring\u003e split_string(string);\n\n// Complete the solve function below.\nint solve(long n, int m) {\n    int num = 1;\n    vector\u003cint\u003e initial, loop;\n    for (int i = 0; i \u003c= log10(m); i++) {\n        initial.push_back(num);\n        // cout \u003c\u003c \"i\" \u003c\u003c num \u003c\u003c \" \";\n        num = (num * 10 + 1) % m;\n    }\n    loop.push_back(num);\n    // cout \u003c\u003c \"l\" \u003c\u003c num \u003c\u003c \" \";\n    num = (num * 10 + 1) % m;\n    while (num != loop[0]) {\n        loop.push_back(num);\n        // cout \u003c\u003c \"l\" \u003c\u003c num \u003c\u003c \" \";\n        num = (num * 10 + 1) % m;\n    }\n    // cout \u003c\u003c endl;\n    if (n \u003c= initial.size())\n        return initial[n - 1];\n    else\n        return loop[(n - initial.size() - 1) % loop.size()];\n}\n\nint main()\n{\n    ofstream fout(getenv(\"OUTPUT_PATH\"));\n\n    int t;\n    cin \u003e\u003e t;\n    cin.ignore(numeric_limits\u003cstreamsize\u003e::max(), '\\n');\n\n    for (int t_itr = 0; t_itr \u003c t; t_itr++) {\n        string nm_temp;\n        getline(cin, nm_temp);\n\n        vector\u003cstring\u003e nm = split_string(nm_temp);\n\n        long n = stol(nm[0]);\n\n        int m = stoi(nm[1]);\n\n        int result = solve(n, m);\n\n        fout \u003c\u003c result \u003c\u003c \"\\n\";\n    }\n\n    fout.close();\n\n    return 0;\n}\n\nvector\u003cstring\u003e split_string(string input_string) {\n    string::iterator new_end = unique(input_string.begin(), input_string.end(), [] (const char \u0026x, const char \u0026y) {\n        return x == y and x == ' ';\n    });\n\n    input_string.erase(new_end, input_string.end());\n\n    while (input_string[input_string.length() - 1] == ' ') {\n        input_string.pop_back();\n    }\n\n    vector\u003cstring\u003e splits;\n    char delimiter = ' ';\n\n    size_t i = 0;\n    size_t pos = input_string.find(delimiter);\n\n    while (pos != string::npos) {\n        splits.push_back(input_string.substr(i, pos - i));\n\n        i = pos + 1;\n        pos = input_string.find(delimiter, i);\n    }\n\n    splits.push_back(input_string.substr(i, min(pos, input_string.length()) - i + 1));\n\n    return splits;\n}\n","score":0.533333333333,"language":"cpp14"},{"contest":"Master","challenge":"Mini-Max Sum","code":"#include \u003ciostream\u003e\nusing namespace std;\n\nint main() {\n  int a[5], sum = 0;\n  for (int i = 0; i \u003c 5; i++)\n    cin \u003e\u003e a[i];\n  for (int i = 0; i \u003c 5; i++)\n    sum += a[i];\n  int min = a[0], max = a[0];\n  for (int i = 1; i \u003c 5; i++) {\n    if (a[i] \u003e max)\n      max = a[i];\n    if (a[i] \u003c min)\n      min = a[i];\n  }\n  cout \u003c\u003c sum - max \u003c\u003c \" \" \u003c\u003c sum - min;\n}","score":0.230769230769,"language":"cpp"},{"contest":"Master","challenge":"Library Fine","code":"#include \u003cbits/stdc++.h\u003e\n\nusing namespace std;\n\nvector\u003cstring\u003e split_string(string);\n\n// Complete the libraryFine function below.\nint libraryFine(int d1, int m1, int y1, int d2, int m2, int y2) {\n    if(y1\u003ey2) return 10000;\n    if(m1\u003em2) return (m1-m2)*500;\n    if(d1\u003ed2) return (d1-d2)*15;\n    return 0;\n}\n\nint main()\n{\n    ofstream fout(getenv(\"OUTPUT_PATH\"));\n\n    string d1M1Y1_temp;\n    getline(cin, d1M1Y1_temp);\n\n    vector\u003cstring\u003e d1M1Y1 = split_string(d1M1Y1_temp);\n\n    int d1 = stoi(d1M1Y1[0]);\n\n    int m1 = stoi(d1M1Y1[1]);\n\n    int y1 = stoi(d1M1Y1[2]);\n\n    string d2M2Y2_temp;\n    getline(cin, d2M2Y2_temp);\n\n    vector\u003cstring\u003e d2M2Y2 = split_string(d2M2Y2_temp);\n\n    int d2 = stoi(d2M2Y2[0]);\n\n    int m2 = stoi(d2M2Y2[1]);\n\n    int y2 = stoi(d2M2Y2[2]);\n\n    int result = libraryFine(d1, m1, y1, d2, m2, y2);\n\n    fout \u003c\u003c result \u003c\u003c \"\\n\";\n\n    fout.close();\n\n    return 0;\n}\n\nvector\u003cstring\u003e split_string(string input_string) {\n    string::iterator new_end = unique(input_string.begin(), input_string.end(), [] (const char \u0026x, const char \u0026y) {\n        return x == y and x == ' ';\n    });\n\n    input_string.erase(new_end, input_string.end());\n\n    while (input_string[input_string.length() - 1] == ' ') {\n        input_string.pop_back();\n    }\n\n    vector\u003cstring\u003e splits;\n    char delimiter = ' ';\n\n    size_t i = 0;\n    size_t pos = input_string.find(delimiter);\n\n    while (pos != string::npos) {\n        splits.push_back(input_string.substr(i, pos - i));\n\n        i = pos + 1;\n        pos = input_string.find(delimiter, i);\n    }\n\n    splits.push_back(input_string.substr(i, min(pos, input_string.length()) - i + 1));\n\n    return splits;\n}\n","score":0.8125,"language":"cpp14"},{"contest":"Master","challenge":"Library Fine","code":"#include \u003cbits/stdc++.h\u003e\n\nusing namespace std;\n\nvector\u003cstring\u003e split_string(string);\n\n// Complete the libraryFine function below.\nint libraryFine(int d1, int m1, int y1, int d2, int m2, int y2) {\n    if(y1\u003ey2) return 10000;\n    else if(m1\u003em2) return (m1-m2)*500;\n    else if(d1\u003ed2) return (d1-d2)*15;\n    else return 0;\n}\n\nint main()\n{\n    ofstream fout(getenv(\"OUTPUT_PATH\"));\n\n    string d1M1Y1_temp;\n    getline(cin, d1M1Y1_temp);\n\n    vector\u003cstring\u003e d1M1Y1 = split_string(d1M1Y1_temp);\n\n    int d1 = stoi(d1M1Y1[0]);\n\n    int m1 = stoi(d1M1Y1[1]);\n\n    int y1 = stoi(d1M1Y1[2]);\n\n    string d2M2Y2_temp;\n    getline(cin, d2M2Y2_temp);\n\n    vector\u003cstring\u003e d2M2Y2 = split_string(d2M2Y2_temp);\n\n    int d2 = stoi(d2M2Y2[0]);\n\n    int m2 = stoi(d2M2Y2[1]);\n\n    int y2 = stoi(d2M2Y2[2]);\n\n    int result = libraryFine(d1, m1, y1, d2, m2, y2);\n\n    fout \u003c\u003c result \u003c\u003c \"\\n\";\n\n    fout.close();\n\n    return 0;\n}\n\nvector\u003cstring\u003e split_string(string input_string) {\n    string::iterator new_end = unique(input_string.begin(), input_string.end(), [] (const char \u0026x, const char \u0026y) {\n        return x == y and x == ' ';\n    });\n\n    input_string.erase(new_end, input_string.end());\n\n    while (input_string[input_string.length() - 1] == ' ') {\n        input_string.pop_back();\n    }\n\n    vector\u003cstring\u003e splits;\n    char delimiter = ' ';\n\n    size_t i = 0;\n    size_t pos = input_string.find(delimiter);\n\n    while (pos != string::npos) {\n        splits.push_back(input_string.substr(i, pos - i));\n\n        i = pos + 1;\n        pos = input_string.find(delimiter, i);\n    }\n\n    splits.push_back(input_string.substr(i, min(pos, input_string.length()) - i + 1));\n\n    return splits;\n}\n","score":0.8125,"language":"cpp14"},{"contest":"Master","challenge":"Library Fine","code":"#include \u003cbits/stdc++.h\u003e\n\nusing namespace std;\n\nvector\u003cstring\u003e split_string(string);\n\n// Complete the libraryFine function below.\nint libraryFine(int d1, int m1, int y1, int d2, int m2, int y2) {\n    if(y1!=y2) return y1\u003ey2?10000:0;\n    if(m1!=m2) return m1\u003em2?(m1-m2)*500:0;\n    return d1\u003ed2?(d1-d2)*15:0;\n}\n\nint main()\n{\n    ofstream fout(getenv(\"OUTPUT_PATH\"));\n\n    string d1M1Y1_temp;\n    getline(cin, d1M1Y1_temp);\n\n    vector\u003cstring\u003e d1M1Y1 = split_string(d1M1Y1_temp);\n\n    int d1 = stoi(d1M1Y1[0]);\n\n    int m1 = stoi(d1M1Y1[1]);\n\n    int y1 = stoi(d1M1Y1[2]);\n\n    string d2M2Y2_temp;\n    getline(cin, d2M2Y2_temp);\n\n    vector\u003cstring\u003e d2M2Y2 = split_string(d2M2Y2_temp);\n\n    int d2 = stoi(d2M2Y2[0]);\n\n    int m2 = stoi(d2M2Y2[1]);\n\n    int y2 = stoi(d2M2Y2[2]);\n\n    int result = libraryFine(d1, m1, y1, d2, m2, y2);\n\n    fout \u003c\u003c result \u003c\u003c \"\\n\";\n\n    fout.close();\n\n    return 0;\n}\n\nvector\u003cstring\u003e split_string(string input_string) {\n    string::iterator new_end = unique(input_string.begin(), input_string.end(), [] (const char \u0026x, const char \u0026y) {\n        return x == y and x == ' ';\n    });\n\n    input_string.erase(new_end, input_string.end());\n\n    while (input_string[input_string.length() - 1] == ' ') {\n        input_string.pop_back();\n    }\n\n    vector\u003cstring\u003e splits;\n    char delimiter = ' ';\n\n    size_t i = 0;\n    size_t pos = input_string.find(delimiter);\n\n    while (pos != string::npos) {\n        splits.push_back(input_string.substr(i, pos - i));\n\n        i = pos + 1;\n        pos = input_string.find(delimiter, i);\n    }\n\n    splits.push_back(input_string.substr(i, min(pos, input_string.length()) - i + 1));\n\n    return splits;\n}\n","score":1.0,"language":"cpp14"},{"contest":"Master","challenge":"Beautiful Pairs","code":"#include \u003cbits/stdc++.h\u003e\n#define MAX 1001\nusing namespace std;\n\nint main() {\n    int n,x,a[MAX]={0},b[MAX]={0},count=0;\n    cin\u003e\u003en;\n    for(int i=0;i\u003cn;i++) {\n        cin\u003e\u003ex;\n        a[x]++;\n    }\n    for(int i=0;i\u003cn;i++) {\n        cin\u003e\u003ex;\n        b[x]++;\n    }\n    for(int i=0;i\u003cMAX;i++) {\n        count+=min(a[i],b[i]);\n    }\n    cout\u003c\u003ccount+1\u003c\u003cendl;\n}\n","score":0.79,"language":"cpp14"},{"contest":"Master","challenge":"Beautiful Pairs","code":"#include \u003cbits/stdc++.h\u003e\n#define MAX 1001\nusing namespace std;\n\nint main() {\n    int n,x,a[MAX]={0},b[MAX]={0},count=0;\n    cin\u003e\u003en;\n    for(int i=0;i\u003cn;i++) {\n        cin\u003e\u003ex;\n        a[x]++;\n    }\n    for(int i=0;i\u003cn;i++) {\n        cin\u003e\u003ex;\n        b[x]++;\n    }\n    for(int i=0;i\u003cMAX;i++) {\n        count+=min(a[i],b[i]);\n    }\n    cout\u003c\u003ccount+(count!=n)\u003c\u003cendl;\n}\n","score":0.79,"language":"cpp14"},{"contest":"Master","challenge":"Beautiful Pairs","code":"#include \u003cbits/stdc++.h\u003e\n#define MAX 1001\nusing namespace std;\n\nint main() {\n    int n,x,a[MAX]={0},b[MAX]={0},count=0;\n    cin\u003e\u003en;\n    for(int i=0;i\u003cn;i++) {\n        cin\u003e\u003ex;\n        a[x]++;\n    }\n    for(int i=0;i\u003cn;i++) {\n        cin\u003e\u003ex;\n        b[x]++;\n    }\n    for(int i=0;i\u003cMAX;i++) {\n        count+=min(a[i],b[i]);\n    }\n    cout\u003c\u003ccount+(count==n?-1:1)\u003c\u003cendl;\n}\n","score":1.0,"language":"cpp14"},{"contest":"Master","challenge":"Beautiful Pairs","code":"#include \u003cbits/stdc++.h\u003e\n#define MAX 1001\nusing namespace std;\nint main() {\n    int n,x,a[MAX]={0},b[MAX]={0},count=0; cin\u003e\u003en;\n    for(int i=0;i\u003cn;i++){ cin\u003e\u003ex; a[x]++; }\n    for(int i=0;i\u003cn;i++){ cin\u003e\u003ex; b[x]++; }\n    for(int i=0;i\u003cMAX;i++) count+=min(a[i],b[i]);\n    cout\u003c\u003ccount+(count==n?-1:1)\u003c\u003cendl;\n}","score":1.0,"language":"cpp14"},{"contest":"Master","challenge":"Flipping bits","code":"#include \u003cbits/stdc++.h\u003e\n\nusing namespace std;\n\n// Complete the flippingBits function below.\nunsigned int flippingBits(unsigned int n) {\n    return ~n;\n}\n\nint main()\n{\n    ofstream fout(getenv(\"OUTPUT_PATH\"));\n\n    unsigned int q;\n    cin \u003e\u003e q;\n    cin.ignore(numeric_limits\u003cstreamsize\u003e::max(), '\\n');\n\n    for (int q_itr = 0; q_itr \u003c q; q_itr++) {\n        unsigned int n;\n        cin \u003e\u003e n;\n        cin.ignore(numeric_limits\u003cstreamsize\u003e::max(), '\\n');\n\n        unsigned int result = flippingBits(n);\n\n        fout \u003c\u003c result \u003c\u003c \"\\n\";\n    }\n\n    fout.close();\n\n    return 0;\n}\n","score":1.0,"language":"cpp"},{"contest":"Master","challenge":"Time Complexity: Primality","code":"#include \u003cbits/stdc++.h\u003e\n\nusing namespace std;\n\n// Complete the primality function below.\nstring primality(int n) {\n    for(int i=2;i*i\u003c=n;i++)\n        if(n%i==0)\n            return \"Not prime\";\n    return \"Prime\";\n}\nint main()\n{\n    ofstream fout(getenv(\"OUTPUT_PATH\"));\n\n    int p;\n    cin \u003e\u003e p;\n    cin.ignore(numeric_limits\u003cstreamsize\u003e::max(), '\\n');\n\n    for (int p_itr = 0; p_itr \u003c p; p_itr++) {\n        int n;\n        cin \u003e\u003e n;\n        cin.ignore(numeric_limits\u003cstreamsize\u003e::max(), '\\n');\n\n        string result = primality(n);\n\n        fout \u003c\u003c result \u003c\u003c \"\\n\";\n    }\n\n    fout.close();\n\n    return 0;\n}\n","score":0.855769230769,"language":"cpp"},{"contest":"Master","challenge":"Time Complexity: Primality","code":"#include \u003cbits/stdc++.h\u003e\n\nusing namespace std;\n\n// Complete the primality function below.\nstring primality(int n) {\n    if(n==1)\n      return \"Not prime\";\n    for(int i=2;i*i\u003c=n;i++)\n        if(n%i==0)\n            return \"Not prime\";\n    return \"Prime\";\n}\nint main()\n{\n    ofstream fout(getenv(\"OUTPUT_PATH\"));\n\n    int p;\n    cin \u003e\u003e p;\n    cin.ignore(numeric_limits\u003cstreamsize\u003e::max(), '\\n');\n\n    for (int p_itr = 0; p_itr \u003c p; p_itr++) {\n        int n;\n        cin \u003e\u003e n;\n        cin.ignore(numeric_limits\u003cstreamsize\u003e::max(), '\\n');\n\n        string result = primality(n);\n\n        fout \u003c\u003c result \u003c\u003c \"\\n\";\n    }\n\n    fout.close();\n\n    return 0;\n}\n","score":1.0,"language":"cpp"},{"contest":"Master","challenge":"Time Complexity: Primality","code":"#include \u003cbits/stdc++.h\u003e\n\nusing namespace std;\n\n// Complete the primality function below.\nstring primality(int n) {\n    if(n==1)\n        return \"Not prime\";\n    for(int i=2;i*i\u003c=n;i++)\n        if(n%i==0)\n            return \"Not prime\";\n    return \"Prime\";\n}\nint main()\n{\n    ofstream fout(getenv(\"OUTPUT_PATH\"));\n\n    int p;\n    cin \u003e\u003e p;\n    cin.ignore(numeric_limits\u003cstreamsize\u003e::max(), '\\n');\n\n    for (int p_itr = 0; p_itr \u003c p; p_itr++) {\n        int n;\n        cin \u003e\u003e n;\n        cin.ignore(numeric_limits\u003cstreamsize\u003e::max(), '\\n');\n\n        string result = primality(n);\n\n        fout \u003c\u003c result \u003c\u003c \"\\n\";\n    }\n\n    fout.close();\n\n    return 0;\n}\n","score":1.0,"language":"cpp"},{"contest":"Master","challenge":"Extra Long Factorials","code":"#!/bin/python3\n\n# Complete the extraLongFactorials function below.\ndef extraLongFactorials(n):\n    f=1\n    while n:\n        f=f*n\n        n=n-1\n    print(f)\n\n\nif __name__ == '__main__':\n    n = int(input())\n\n    extraLongFactorials(n)\n","score":1.0,"language":"python3"},{"contest":"Master","challenge":"Knapsack","code":"#include \u003cbits/stdc++.h\u003e\n\nusing namespace std;\n\nvector\u003cstring\u003e split_string(string);\n\n// Complete the unboundedKnapsack function below.\nint unboundedKnapsack(int k, vector\u003cint\u003e arr) {\n    int max = 0;\n    for(int i=0;i\u003carr.size();i++) {\n        if(arr[i]\u003c=k) {\n            int x = arr[i] + unboundedKnapsack(k-arr[i],arr);\n            if(x \u003e max) max=x;\n        }\n    }\n    return max;\n}\nint main() {\n    ofstream fout(getenv(\"OUTPUT_PATH\"));\n    int t,n,k;\n    cin \u003e\u003e t;\n    while(t--) {\n        cin\u003e\u003en\u003e\u003ek;\n        vector\u003cint\u003e arr(n);\n        for (int i = 0; i \u003c n; i++) cin\u003e\u003earr[i];\n        int result = unboundedKnapsack(k, arr);\n        fout \u003c\u003c result \u003c\u003c \"\\n\";\n    }\n    fout.close();\n    return 0;\n}\n","score":0.739583333333,"language":"cpp14"},{"contest":"Master","challenge":"Knapsack","code":"#include \u003cbits/stdc++.h\u003e\n#define MAX 2001\nusing namespace std;\n\nint mem[MAX];\nint unboundedKnapsack(int k, vector\u003cint\u003e arr) {\n    if(mem[k]!=-1) return mem[k];\n    int max = 0;\n    for(int i=0;i\u003carr.size();i++) {\n        if(arr[i]\u003c=k) {\n            int x = arr[i] + unboundedKnapsack(k-arr[i],arr);\n            if(x \u003e max) max=x;\n        }\n    }\n    mem[k]=max;\n    return max;\n}\nint main() {\n    ofstream fout(getenv(\"OUTPUT_PATH\"));\n    int t,n,k;\n    cin \u003e\u003e t;\n    while(t--) {\n        for(int i=0;i\u003cMAX;i++) mem[i]=-1;\n        cin\u003e\u003en\u003e\u003ek;\n        vector\u003cint\u003e arr(n);\n        for (int i = 0; i \u003c n; i++) cin\u003e\u003earr[i];\n        int result = unboundedKnapsack(k, arr);\n        fout \u003c\u003c result \u003c\u003c \"\\n\";\n    }\n    fout.close();\n    return 0;\n}\n","score":1.0,"language":"cpp14"},{"contest":"Master","challenge":"Knapsack","code":"#include \u003cbits/stdc++.h\u003e\n#define MAX 2001\nusing namespace std;\n\nint dp[MAX];\nint unboundedKnapsack(int k, vector\u003cint\u003e arr) {\n    for(int i=0;i\u003c=k;i++)\n        for(int j=0;j\u003carr.size();j++)\n            if(arr[j]\u003c=i)\n                if(arr[j]+dp[i-arr[j]] \u003e dp[i])\n                    dp[i]=arr[j]+dp[i-arr[j]];\n    return dp[k];\n}\nint main() {\n    ofstream fout(getenv(\"OUTPUT_PATH\"));\n    int t,n,k;\n    cin \u003e\u003e t;\n    while(t--) {\n        memset(dp,0,sizeof(dp));\n        cin\u003e\u003en\u003e\u003ek;\n        vector\u003cint\u003e arr(n);\n        for (int i = 0; i \u003c n; i++) cin\u003e\u003earr[i];\n        int result = unboundedKnapsack(k, arr);\n        fout \u003c\u003c result \u003c\u003c \"\\n\";\n    }\n    fout.close();\n    return 0;\n}\n","score":1.0,"language":"cpp14"},{"contest":"Master","challenge":"Non-Divisible Subset","code":"#include \u003cbits/stdc++.h\u003e\nusing namespace std;\nint nonDivisibleSubset(int k,int s[],int n,vector\u003cbool\u003e isthere) {\n    if(n==0) return 0;\n    int x=0,y=0;\n    x=nonDivisibleSubset(k,s+1,n-1,isthere);\n    if(!isthere[k-(s[0]%k)]) {\n        isthere[s[0]%k]=true;\n        y=1+nonDivisibleSubset(k,s+1,n-1,isthere);\n    }\n    return max(x,y);\n}\nint main() {\n    ofstream fout(getenv(\"OUTPUT_PATH\"));\n    int n,k; cin\u003e\u003en\u003e\u003ek;\n    vector\u003cbool\u003e isthere(k,false);\n    int s[n]; for(int i=0;i\u003cn;i++) cin\u003e\u003es[i];\n    int result=nonDivisibleSubset(k,s,n,isthere);\n    fout \u003c\u003c result \u003c\u003c \"\\n\";\n    fout.close();\n    return 0;\n}\n","score":0.333333333333,"language":"cpp14"},{"contest":"Master","challenge":"Non-Divisible Subset","code":"#include \u003cbits/stdc++.h\u003e\nusing namespace std;\nint main() {\n    ofstream fout(getenv(\"OUTPUT_PATH\"));\n    int n,k,x;\n    cin\u003e\u003en\u003e\u003ek;\n    int s[k]={};\n    for(int i=0;i\u003cn;i++) {\n        cin\u003e\u003ex;\n        ++s[x%k];\n    }\n    int result=0;\n    for(int i=0;i\u003c=k/2;i++) {\n        if(i==0 || i==k-i) result+=min(1,s[i]);\n        else result+=max(s[i],s[k-i]);\n    }\n    fout \u003c\u003c result \u003c\u003c \"\\n\";\n    fout.close();\n    return 0;\n}\n","score":1.0,"language":"cpp14"},{"contest":"Master","challenge":"Say \"Hello, World!\" With C++","code":"#include\u003ciostream\u003e\nusing namespace std;\nint main()\n{\n    cout\u003c\u003c\"Hello, World!\";\n}\n","score":1.0,"language":"cpp14"},{"contest":"Master","challenge":"Arrays Introduction","code":"#include\u003ciostream\u003e\nusing namespace std;\nint main()\n{\n    int a;\n    cin\u003e\u003ea;\n    int n[1005];\n    for(int i=0;i\u003ca;i++)\n    {\n        cin\u003e\u003en[i];\n    }\n    for (int i=a-1;i\u003e=0; i--) {\n        cout\u003c\u003cn[i]\u003c\u003c\" \";\n    }\n}\n","score":1.0,"language":"cpp14"},{"contest":"Master","challenge":"Taum and B'day","code":"#include \u003cbits/stdc++.h\u003e\n\nusing namespace std;\n\nvector\u003cstring\u003e split_string(string);\n\n// Complete the taumBday function below.\nint taumBday(int b, int w, int bc, int wc, int z) {\n    if(abs(bc-wc)\u003ez) {\n        if(bc\u003cwc) return (bc*b)+((bc+z)*w);\n        else return (wc*w)+((wc+z)*b);\n    }\n    else return (bc*b)+(wc*w);\n}\n\nint main()\n{\n    ofstream fout(getenv(\"OUTPUT_PATH\"));\n\n    int t;\n    cin \u003e\u003e t;\n    cin.ignore(numeric_limits\u003cstreamsize\u003e::max(), '\\n');\n\n    for (int t_itr = 0; t_itr \u003c t; t_itr++) {\n        string bw_temp;\n        getline(cin, bw_temp);\n\n        vector\u003cstring\u003e bw = split_string(bw_temp);\n\n        int b = stoi(bw[0]);\n\n        int w = stoi(bw[1]);\n\n        string bcWcz_temp;\n        getline(cin, bcWcz_temp);\n\n        vector\u003cstring\u003e bcWcz = split_string(bcWcz_temp);\n\n        int bc = stoi(bcWcz[0]);\n\n        int wc = stoi(bcWcz[1]);\n\n        int z = stoi(bcWcz[2]);\n\n        int result = taumBday(b, w, bc, wc, z);\n\n        fout \u003c\u003c result \u003c\u003c \"\\n\";\n    }\n\n    fout.close();\n\n    return 0;\n}\n\nvector\u003cstring\u003e split_string(string input_string) {\n    string::iterator new_end = unique(input_string.begin(), input_string.end(), [] (const char \u0026x, const char \u0026y) {\n        return x == y and x == ' ';\n    });\n\n    input_string.erase(new_end, input_string.end());\n\n    while (input_string[input_string.length() - 1] == ' ') {\n        input_string.pop_back();\n    }\n\n    vector\u003cstring\u003e splits;\n    char delimiter = ' ';\n\n    size_t i = 0;\n    size_t pos = input_string.find(delimiter);\n\n    while (pos != string::npos) {\n        splits.push_back(input_string.substr(i, pos - i));\n\n        i = pos + 1;\n        pos = input_string.find(delimiter, i);\n    }\n\n    splits.push_back(input_string.substr(i, min(pos, input_string.length()) - i + 1));\n\n    return splits;\n}\n","score":0.28,"language":"cpp14"},{"contest":"Master","challenge":"Taum and B'day","code":"#include \u003cbits/stdc++.h\u003e\n#define ll long long\nusing namespace std;\n\nvector\u003cstring\u003e split_string(string);\n\n// Complete the taumBday function below.\nll taumBday(ll b, ll w, ll bc, ll wc, ll z) {\n    if(abs(bc-wc)\u003ez) {\n        if(bc\u003cwc) return (bc*b)+((bc+z)*w);\n        else return (wc*w)+((wc+z)*b);\n    }\n    else return (bc*b)+(wc*w);\n}\n\nint main()\n{\n    ofstream fout(getenv(\"OUTPUT_PATH\"));\n\n    int t;\n    cin \u003e\u003e t;\n    cin.ignore(numeric_limits\u003cstreamsize\u003e::max(), '\\n');\n\n    for (int t_itr = 0; t_itr \u003c t; t_itr++) {\n        string bw_temp;\n        getline(cin, bw_temp);\n\n        vector\u003cstring\u003e bw = split_string(bw_temp);\n\n        int b = stoi(bw[0]);\n\n        int w = stoi(bw[1]);\n\n        string bcWcz_temp;\n        getline(cin, bcWcz_temp);\n\n        vector\u003cstring\u003e bcWcz = split_string(bcWcz_temp);\n\n        int bc = stoi(bcWcz[0]);\n\n        int wc = stoi(bcWcz[1]);\n\n        int z = stoi(bcWcz[2]);\n\n        ll result = taumBday(b, w, bc, wc, z);\n\n        fout \u003c\u003c result \u003c\u003c \"\\n\";\n    }\n\n    fout.close();\n\n    return 0;\n}\n\nvector\u003cstring\u003e split_string(string input_string) {\n    string::iterator new_end = unique(input_string.begin(), input_string.end(), [] (const char \u0026x, const char \u0026y) {\n        return x == y and x == ' ';\n    });\n\n    input_string.erase(new_end, input_string.end());\n\n    while (input_string[input_string.length() - 1] == ' ') {\n        input_string.pop_back();\n    }\n\n    vector\u003cstring\u003e splits;\n    char delimiter = ' ';\n\n    size_t i = 0;\n    size_t pos = input_string.find(delimiter);\n\n    while (pos != string::npos) {\n        splits.push_back(input_string.substr(i, pos - i));\n\n        i = pos + 1;\n        pos = input_string.find(delimiter, i);\n    }\n\n    splits.push_back(input_string.substr(i, min(pos, input_string.length()) - i + 1));\n\n    return splits;\n}\n","score":1.0,"language":"cpp14"},{"contest":"Master","challenge":"Manasa and Stones","code":"#include \u003cbits/stdc++.h\u003e\n\nusing namespace std;\n\n// Complete the stones function below.\nvector\u003cint\u003e stones(int n, int a, int b) {\n    vector\u003cint\u003e stone;\n    n=n-1;\n    if(b==a) {\n        stone.push_back(n*a);\n        return stone;\n    }\n    if(b\u003ca) swap(a,b);\n    for(int i=0;i\u003c=n;i++)\n        stone.push_back(((n-i)*a)+(i*b));\n    return stone;\n}\n\nint main()\n{\n    ofstream fout(getenv(\"OUTPUT_PATH\"));\n\n    int T;\n    cin \u003e\u003e T;\n    cin.ignore(numeric_limits\u003cstreamsize\u003e::max(), '\\n');\n\n    for (int T_itr = 0; T_itr \u003c T; T_itr++) {\n        int n;\n        cin \u003e\u003e n;\n        cin.ignore(numeric_limits\u003cstreamsize\u003e::max(), '\\n');\n\n        int a;\n        cin \u003e\u003e a;\n        cin.ignore(numeric_limits\u003cstreamsize\u003e::max(), '\\n');\n\n        int b;\n        cin \u003e\u003e b;\n        cin.ignore(numeric_limits\u003cstreamsize\u003e::max(), '\\n');\n\n        vector\u003cint\u003e result = stones(n, a, b);\n\n        for (int i = 0; i \u003c result.size(); i++) {\n            fout \u003c\u003c result[i];\n\n            if (i != result.size() - 1) {\n                fout \u003c\u003c \" \";\n            }\n        }\n\n        fout \u003c\u003c \"\\n\";\n    }\n\n    fout.close();\n\n    return 0;\n}\n","score":1.0,"language":"cpp14"},{"contest":"Master","challenge":"Minimum Distances","code":"#include \u003cbits/stdc++.h\u003e\n#define MAX 100005\nusing namespace std;\n\nint main() {\n    ofstream fout(getenv(\"OUTPUT_PATH\"));\n    int n,x;\n    cin \u003e\u003e n;\n    vector\u003cvector\u003cint\u003e \u003e hash(MAX) ;\n    for(int i=0;i\u003cn;i++) {\n        cin\u003e\u003ex;\n        hash[x].push_back(i);\n    }\n    int min=INT_MAX;\n    for(int i=0;i\u003cMAX;i++)\n        for(int j=1;j\u003chash[i].size();j++)\n            if(hash[i][j]-hash[i][j-1]\u003cmin)\n                min=hash[i][j]-hash[i][j-1];\n    fout\u003c\u003c(min==INT_MAX?-1:min)\u003c\u003c\"\\n\";\n    fout.close();\n    return 0;\n}\n","score":1.0,"language":"cpp14"},{"contest":"Master","challenge":"Halloween Sale","code":"#include \u003cbits/stdc++.h\u003e\n\nusing namespace std;\n\nvector\u003cstring\u003e split_string(string);\n\n// Complete the howManyGames function below.\nint howManyGames(int p, int d, int m, int s) {\n    int c=0;\n    while(s\u003ep) {\n        s-=p;\n        ++c;\n        if(p\u003em)\n            p-=d;\n    }\n    return c;\n}\n\nint main()\n{\n    ofstream fout(getenv(\"OUTPUT_PATH\"));\n\n    string pdms_temp;\n    getline(cin, pdms_temp);\n\n    vector\u003cstring\u003e pdms = split_string(pdms_temp);\n\n    int p = stoi(pdms[0]);\n\n    int d = stoi(pdms[1]);\n\n    int m = stoi(pdms[2]);\n\n    int s = stoi(pdms[3]);\n\n    int answer = howManyGames(p, d, m, s);\n\n    fout \u003c\u003c answer \u003c\u003c \"\\n\";\n\n    fout.close();\n\n    return 0;\n}\n\nvector\u003cstring\u003e split_string(string input_string) {\n    string::iterator new_end = unique(input_string.begin(), input_string.end(), [] (const char \u0026x, const char \u0026y) {\n        return x == y and x == ' ';\n    });\n\n    input_string.erase(new_end, input_string.end());\n\n    while (input_string[input_string.length() - 1] == ' ') {\n        input_string.pop_back();\n    }\n\n    vector\u003cstring\u003e splits;\n    char delimiter = ' ';\n\n    size_t i = 0;\n    size_t pos = input_string.find(delimiter);\n\n    while (pos != string::npos) {\n        splits.push_back(input_string.substr(i, pos - i));\n\n        i = pos + 1;\n        pos = input_string.find(delimiter, i);\n    }\n\n    splits.push_back(input_string.substr(i, min(pos, input_string.length()) - i + 1));\n\n    return splits;\n}\n","score":0.22,"language":"cpp14"},{"contest":"Master","challenge":"Halloween Sale","code":"#include \u003cbits/stdc++.h\u003e\n\nusing namespace std;\n\nvector\u003cstring\u003e split_string(string);\n\n// Complete the howManyGames function below.\nint howManyGames(int p, int d, int m, int s) {\n    int c=0;\n    while(s\u003e=p) {\n        s-=p;\n        ++c;\n        p-=d;\n        if(p\u003cm)\n        p=m;\n    }\n    return c;\n}\n\nint main()\n{\n    ofstream fout(getenv(\"OUTPUT_PATH\"));\n\n    string pdms_temp;\n    getline(cin, pdms_temp);\n\n    vector\u003cstring\u003e pdms = split_string(pdms_temp);\n\n    int p = stoi(pdms[0]);\n\n    int d = stoi(pdms[1]);\n\n    int m = stoi(pdms[2]);\n\n    int s = stoi(pdms[3]);\n\n    int answer = howManyGames(p, d, m, s);\n\n    fout \u003c\u003c answer \u003c\u003c \"\\n\";\n\n    fout.close();\n\n    return 0;\n}\n\nvector\u003cstring\u003e split_string(string input_string) {\n    string::iterator new_end = unique(input_string.begin(), input_string.end(), [] (const char \u0026x, const char \u0026y) {\n        return x == y and x == ' ';\n    });\n\n    input_string.erase(new_end, input_string.end());\n\n    while (input_string[input_string.length() - 1] == ' ') {\n        input_string.pop_back();\n    }\n\n    vector\u003cstring\u003e splits;\n    char delimiter = ' ';\n\n    size_t i = 0;\n    size_t pos = input_string.find(delimiter);\n\n    while (pos != string::npos) {\n        splits.push_back(input_string.substr(i, pos - i));\n\n        i = pos + 1;\n        pos = input_string.find(delimiter, i);\n    }\n\n    splits.push_back(input_string.substr(i, min(pos, input_string.length()) - i + 1));\n\n    return splits;\n}\n","score":1.0,"language":"cpp14"},{"contest":"Master","challenge":"Chocolate Feast ","code":"#include \u003cbits/stdc++.h\u003e\nusing namespace std;\n\nint chocolateFeast(int n, int c, int m) {\n    int chocolates=n/c;\n    int choco_offer=0;\n    int wrapers=chocolates;\n    while(wrapers\u003e=m) {\n        choco_offer+=(wrapers/m);\n        wrapers%=m;\n        wrapers+=choco_offer;\n        chocolates+=choco_offer;\n        choco_offer=0;\n    } return chocolates;\n}\nint main() {\n    ofstream fout(getenv(\"OUTPUT_PATH\"));\n    int t,n,c,m;\n    cin\u003e\u003et;\n    while(t--) {\n        cin\u003e\u003en\u003e\u003ec\u003e\u003em;\n        int result=chocolateFeast(n,c,m);\n        fout\u003c\u003cresult\u003c\u003c\"\\n\";\n    }\n    fout.close();\n    return 0;\n}\n","score":1.0,"language":"cpp14"},{"contest":"Master","challenge":"Cavity Map","code":"#include \u003cbits/stdc++.h\u003e\n\nusing namespace std;\n\n// Complete the cavityMap function below.\nvector\u003cstring\u003e cavityMap(vector\u003cstring\u003e grid) {\n    for(int i=1;i\u003cgrid.size()-1;i++) {\n        for(int j=1;j\u003cgrid[i].size()-1;j++) {\n            bool up=grid[i][j]\u003egrid[i-1][j];\n            bool down=grid[i][j]\u003egrid[i+1][j];\n            bool left=grid[i][j]\u003egrid[i][j-1];\n            bool right=grid[i][j]\u003egrid[i][j+1];\n            if(up \u0026\u0026 down \u0026\u0026 left \u0026\u0026 right) grid[i][j]='X';\n        }\n    }\n    return grid;\n}\n\nint main()\n{\n    ofstream fout(getenv(\"OUTPUT_PATH\"));\n\n    int n;\n    cin \u003e\u003e n;\n    cin.ignore(numeric_limits\u003cstreamsize\u003e::max(), '\\n');\n\n    vector\u003cstring\u003e grid(n);\n\n    for (int i = 0; i \u003c n; i++) {\n        string grid_item;\n        getline(cin, grid_item);\n\n        grid[i] = grid_item;\n    }\n\n    vector\u003cstring\u003e result = cavityMap(grid);\n\n    for (int i = 0; i \u003c result.size(); i++) {\n        fout \u003c\u003c result[i];\n\n        if (i != result.size() - 1) {\n            fout \u003c\u003c \"\\n\";\n        }\n    }\n\n    fout \u003c\u003c \"\\n\";\n\n    fout.close();\n\n    return 0;\n}\n","score":1.0,"language":"cpp14"},{"contest":"Master","challenge":"Functions","code":"#include \u003ciostream\u003e\nusing namespace std;\n\nint max_of_four(int a, int b, int c, int d) {\n    int max=d;\n    if(a\u003emax) max=a;\n    if(b\u003emax) max=b;\n    if(c\u003emax) max=c;\n    return max;\n}\nint main() {\n    int a,b,c,d;\n    cin\u003e\u003ea\u003e\u003eb\u003e\u003ec\u003e\u003ed;\n    cout\u003c\u003cmax_of_four(a,b,c,d);\n    return 0;\n}\n\n","score":1.0,"language":"cpp14"},{"contest":"Master","challenge":"Pointer","code":"#include \u003cstdio.h\u003e\nvoid abs(int *b) {\n    if(*b \u003c 0) *b *= -1;\n}\nvoid update(int *a,int *b) {\n    *a += *b;\n    *b = *a - 2 * *b;\n    abs(b);\n}\n\nint main() {\n    int a, b;\n    int *pa = \u0026a, *pb = \u0026b;\n    scanf(\"%d %d\", \u0026a, \u0026b);\n    update(pa, pb);\n    printf(\"%d\\n%d\", a, b);\n    return 0;\n}\n\n","score":1.0,"language":"cpp14"},{"contest":"Master","challenge":"Variable Sized Arrays","code":"#include \u003cvector\u003e\n#include \u003ciostream\u003e\n#include \u003calgorithm\u003e\nusing namespace std;\n\n\nint main() {\n    int n,q,x,i,j;\n    cin\u003e\u003en\u003e\u003eq;\n    int **varr=new int*[n];\n    for(i=0;i\u003cn;i++) {\n        cin\u003e\u003ex;\n        *(varr+i)=new int[x];\n        for(j=0;j\u003cx;j++)\n            cin\u003e\u003e*(*(varr+i)+j);\n    }\n    for(x=0;x\u003cq;x++) {\n        cin\u003e\u003ei\u003e\u003ej;\n        cout\u003c\u003c*(*(varr+i)+j)\u003c\u003cendl;\n    }\n    return 0;\n}\n\n","score":1.0,"language":"cpp14"},{"contest":"Master","challenge":"Strings","code":"#include \u003ciostream\u003e\n#include \u003cstring\u003e\nusing namespace std;\n\nint main() {\n    string a,b;\n    cin\u003e\u003ea\u003e\u003eb;\n    cout\u003c\u003ca.length()\u003c\u003c\" \"\u003c\u003cb.length()\u003c\u003cendl;\n    cout\u003c\u003ca+b\u003c\u003cendl;\n    swap(a[0],b[0]);\n    cout\u003c\u003ca\u003c\u003c\" \"\u003c\u003cb\u003c\u003cendl;\n    return 0;\n}\n\n","score":1.0,"language":"cpp14"},{"contest":"Master","challenge":"StringStream","code":"#include \u003csstream\u003e\n#include \u003cvector\u003e\n#include \u003ciostream\u003e\nusing namespace std;\n\nvector\u003cint\u003e parseInts(string str) {\n    int integer; char ch;\n    vector\u003cint\u003e integers;\n    stringstream ss(str);\n    while(ss\u003e\u003einteger) {\n        integers.push_back(integer);\n        ss\u003e\u003ech;\n    }\n    return integers;\n}\n\nint main() {\n    string str;\n    cin\u003e\u003estr;\n    vector\u003cint\u003e integers = parseInts(str);\n    for(int i = 0; i \u003c integers.size(); i++)\n        cout \u003c\u003c integers[i] \u003c\u003c \"\\n\";\n    return 0;\n}\n\n","score":1.0,"language":"cpp14"},{"contest":"Master","challenge":"Queen's Attack II","code":"#include \u003cbits/stdc++.h\u003e\n\nusing namespace std;\n\nvector\u003cstring\u003e split_string(string);\n\n// Complete the queensAttack function below.\nint queensAttack(int n, int k, int r_q, int c_q, vector\u003cvector\u003cint\u003e\u003e ob) {\n   int h_start=0,h_end=n+1,v_start=0,v_end=n+1,d1_start=max(r_q-c_q,0),d1_end=n+1-max(c_q-r_q,0),d2_start=max(0,r_q+c_q-n-1),d2_end=min(n+1,r_q+c_q);\n   for(int i=0;i\u003ck;i++) {\n       if(ob[i][0]==r_q \u0026\u0026 ob[i][1]\u003cc_q \u0026\u0026 h_start\u003cob[i][1]) h_start=ob[i][1];\n       if(ob[i][0]==r_q \u0026\u0026 ob[i][1]\u003ec_q \u0026\u0026 h_end\u003eob[i][1]) h_end=ob[i][1];\n       if(ob[i][1]==c_q \u0026\u0026 ob[i][0]\u003cr_q \u0026\u0026 v_start\u003cob[i][0]) v_start=ob[i][0];\n       if(ob[i][1]==c_q \u0026\u0026 ob[i][0]\u003er_q \u0026\u0026 v_end\u003eob[i][0]) v_end=ob[i][0];\n       if(abs(r_q-ob[i][0])==abs(c_q-ob[i][1])) {\n           if(ob[i][0]\u003cr_q \u0026\u0026 ob[i][1]\u003cc_q \u0026\u0026 d1_start\u003cob[i][0]) d1_start=ob[i][0];\n           if(ob[i][0]\u003er_q \u0026\u0026 ob[i][1]\u003ec_q \u0026\u0026 d1_end\u003eob[i][0]) d1_end=ob[i][0];\n           if(ob[i][0]\u003cr_q \u0026\u0026 ob[i][1]\u003ec_q \u0026\u0026 d2_start\u003cob[i][0]) d2_start=ob[i][0];\n           if(ob[i][0]\u003er_q \u0026\u0026 ob[i][1]\u003cc_q \u0026\u0026 d2_end\u003eob[i][0]) d2_end=ob[i][0];\n       }\n    }\n    return h_end-h_start-2+v_end-v_start-2+d1_end-d1_start-2+d2_end-d2_start-2;\n}\nint main()\n{\n    ofstream fout(getenv(\"OUTPUT_PATH\"));\n\n    string nk_temp;\n    getline(cin, nk_temp);\n\n    vector\u003cstring\u003e nk = split_string(nk_temp);\n\n    int n = stoi(nk[0]);\n\n    int k = stoi(nk[1]);\n\n    string r_qC_q_temp;\n    getline(cin, r_qC_q_temp);\n\n    vector\u003cstring\u003e r_qC_q = split_string(r_qC_q_temp);\n\n    int r_q = stoi(r_qC_q[0]);\n\n    int c_q = stoi(r_qC_q[1]);\n\n    vector\u003cvector\u003cint\u003e\u003e ob(k);\n    for (int i = 0; i \u003c k; i++) {\n        ob[i].resize(2);\n\n        for (int j = 0; j \u003c 2; j++) {\n            cin \u003e\u003e ob[i][j];\n        }\n\n        cin.ignore(numeric_limits\u003cstreamsize\u003e::max(), '\\n');\n    }\n\n    int result = queensAttack(n, k, r_q, c_q, ob);\n\n    fout \u003c\u003c result \u003c\u003c \"\\n\";\n\n    fout.close();\n\n    return 0;\n}\n\nvector\u003cstring\u003e split_string(string input_string) {\n    string::iterator new_end = unique(input_string.begin(), input_string.end(), [] (const char \u0026x, const char \u0026y) {\n        return x == y and x == ' ';\n    });\n\n    input_string.erase(new_end, input_string.end());\n\n    while (input_string[input_string.length() - 1] == ' ') {\n        input_string.pop_back();\n    }\n\n    vector\u003cstring\u003e splits;\n    char delimiter = ' ';\n\n    size_t i = 0;\n    size_t pos = input_string.find(delimiter);\n\n    while (pos != string::npos) {\n        splits.push_back(input_string.substr(i, pos - i));\n\n        i = pos + 1;\n        pos = input_string.find(delimiter, i);\n    }\n\n    splits.push_back(input_string.substr(i, min(pos, input_string.length()) - i + 1));\n\n    return splits;\n}\n","score":1.0,"language":"cpp14"},{"contest":"Master","challenge":"Big Sorting","code":"#include \u003cbits/stdc++.h\u003e\n\nusing namespace std;\n\nbool isSmall(string a, string b) {\n    if(a.length() \u003c b.length()) return true;\n    else if(a.length() \u003e b.length()) return false;\n    else if(a \u003c b) return true;\n    else return false;\n}\n\n// Complete the bigSorting function below.\nvector\u003cstring\u003e bigSorting(vector\u003cstring\u003e unsorted) {\n    sort(unsorted.begin(),unsorted.end(),isSmall);\n    return unsorted;\n}\n\nint main()\n{\n    ofstream fout(getenv(\"OUTPUT_PATH\"));\n\n    int n;\n    cin \u003e\u003e n;\n    cin.ignore(numeric_limits\u003cstreamsize\u003e::max(), '\\n');\n\n    vector\u003cstring\u003e unsorted(n);\n\n    for (int i = 0; i \u003c n; i++) {\n        string unsorted_item;\n        getline(cin, unsorted_item);\n\n        unsorted[i] = unsorted_item;\n    }\n\n    vector\u003cstring\u003e result = bigSorting(unsorted);\n\n    for (int i = 0; i \u003c result.size(); i++) {\n        fout \u003c\u003c result[i];\n\n        if (i != result.size() - 1) {\n            fout \u003c\u003c \"\\n\";\n        }\n    }\n\n    fout \u003c\u003c \"\\n\";\n\n    fout.close();\n\n    return 0;\n}\n","score":1.0,"language":"cpp14"},{"contest":"Master","challenge":"Super Reduced String","code":"#include \u003cbits/stdc++.h\u003e\n\nusing namespace std;\n\n// Complete the superReducedString function below.\nstring superReducedString(string s) {\n    string sRS=\"\";\n    for(int i=0;i\u003cs.length();i++) {\n        if(!sRS.empty() \u0026\u0026 sRS.back()==s.at(i)) sRS.pop_back();\n        else sRS.push_back(s.at(i));\n    }\n    if(sRS.empty()) sRS=\"Empty String\";\n    return sRS;\n}\n\nint main()\n{\n    ofstream fout(getenv(\"OUTPUT_PATH\"));\n\n    string s;\n    getline(cin, s);\n\n    string result = superReducedString(s);\n\n    fout \u003c\u003c result \u003c\u003c \"\\n\";\n\n    fout.close();\n\n    return 0;\n}\n","score":1.0,"language":"cpp14"},{"contest":"Master","challenge":"Intro to Tutorial Challenges","code":"#include \u003cbits/stdc++.h\u003e\n\nusing namespace std;\n\nvector\u003cstring\u003e split_string(string);\n\n// Complete the introTutorial function below.\nint introTutorial(int V, vector\u003cint\u003e arr) {\n    for(int i=0;i\u003carr.size();i++)\n        if(arr[i]==V) return i;\n    return 0;\n}\n\nint main()\n{\n    ofstream fout(getenv(\"OUTPUT_PATH\"));\n\n    int V;\n    cin \u003e\u003e V;\n    cin.ignore(numeric_limits\u003cstreamsize\u003e::max(), '\\n');\n\n    int n;\n    cin \u003e\u003e n;\n    cin.ignore(numeric_limits\u003cstreamsize\u003e::max(), '\\n');\n\n    string arr_temp_temp;\n    getline(cin, arr_temp_temp);\n\n    vector\u003cstring\u003e arr_temp = split_string(arr_temp_temp);\n\n    vector\u003cint\u003e arr(n);\n\n    for (int i = 0; i \u003c n; i++) {\n        int arr_item = stoi(arr_temp[i]);\n\n        arr[i] = arr_item;\n    }\n\n    int result = introTutorial(V, arr);\n\n    fout \u003c\u003c result \u003c\u003c \"\\n\";\n\n    fout.close();\n\n    return 0;\n}\n\nvector\u003cstring\u003e split_string(string input_string) {\n    string::iterator new_end = unique(input_string.begin(), input_string.end(), [] (const char \u0026x, const char \u0026y) {\n        return x == y and x == ' ';\n    });\n\n    input_string.erase(new_end, input_string.end());\n\n    while (input_string[input_string.length() - 1] == ' ') {\n        input_string.pop_back();\n    }\n\n    vector\u003cstring\u003e splits;\n    char delimiter = ' ';\n\n    size_t i = 0;\n    size_t pos = input_string.find(delimiter);\n\n    while (pos != string::npos) {\n        splits.push_back(input_string.substr(i, pos - i));\n\n        i = pos + 1;\n        pos = input_string.find(delimiter, i);\n    }\n\n    splits.push_back(input_string.substr(i, min(pos, input_string.length()) - i + 1));\n\n    return splits;\n}\n","score":1.0,"language":"cpp14"},{"contest":"Master","challenge":"CamelCase","code":"#include \u003cbits/stdc++.h\u003e\n\nusing namespace std;\n\n// Complete the camelcase function below.\nint camelcase(string s) {\n    int count=1;\n    for(int i=1;i\u003cs.length();i++)\n        if(s[i]\u003c='Z') count++;\n    return count;\n}\n\nint main()\n{\n    ofstream fout(getenv(\"OUTPUT_PATH\"));\n\n    string s;\n    getline(cin, s);\n\n    int result = camelcase(s);\n\n    fout \u003c\u003c result \u003c\u003c \"\\n\";\n\n    fout.close();\n\n    return 0;\n}\n","score":1.0,"language":"cpp14"},{"contest":"Master","challenge":"Insertion Sort - Part 1","code":"#include \u003cbits/stdc++.h\u003e\n\nusing namespace std;\n\nvector\u003cstring\u003e split_string(string);\n\n// Complete the insertionSort1 function below.\nvoid print(vector\u003cint\u003e arr) {\n    for(int i=0;i\u003carr.size();i++)\n        cout\u003c\u003carr[i]\u003c\u003c\" \";\n    cout\u003c\u003cendl;\n}\nvoid insertionSort1(vector\u003cint\u003e arr) {\n    int x=arr.back();\n    for(int i=arr.size()-2;i\u003e=0;i--) {\n        if(arr[i]\u003ex) arr[i+1]=arr[i];\n        else {\n            arr[i+1]=x;\n            break;\n        }\n        print(arr);\n    }\n    print(arr);\n}\n\nint main()\n{\n    int n;\n    cin \u003e\u003e n;\n    cin.ignore(numeric_limits\u003cstreamsize\u003e::max(), '\\n');\n\n    string arr_temp_temp;\n    getline(cin, arr_temp_temp);\n\n    vector\u003cstring\u003e arr_temp = split_string(arr_temp_temp);\n\n    vector\u003cint\u003e arr(n);\n\n    for (int i = 0; i \u003c n; i++) {\n        int arr_item = stoi(arr_temp[i]);\n\n        arr[i] = arr_item;\n    }\n\n    insertionSort1(arr);\n\n    return 0;\n}\n\nvector\u003cstring\u003e split_string(string input_string) {\n    string::iterator new_end = unique(input_string.begin(), input_string.end(), [] (const char \u0026x, const char \u0026y) {\n        return x == y and x == ' ';\n    });\n\n    input_string.erase(new_end, input_string.end());\n\n    while (input_string[input_string.length() - 1] == ' ') {\n        input_string.pop_back();\n    }\n\n    vector\u003cstring\u003e splits;\n    char delimiter = ' ';\n\n    size_t i = 0;\n    size_t pos = input_string.find(delimiter);\n\n    while (pos != string::npos) {\n        splits.push_back(input_string.substr(i, pos - i));\n\n        i = pos + 1;\n        pos = input_string.find(delimiter, i);\n    }\n\n    splits.push_back(input_string.substr(i, min(pos, input_string.length()) - i + 1));\n\n    return splits;\n}\n","score":0.75,"language":"cpp14"},{"contest":"Master","challenge":"Insertion Sort - Part 1","code":"#include \u003cbits/stdc++.h\u003e\n\nusing namespace std;\n\nvector\u003cstring\u003e split_string(string);\n\n// Complete the insertionSort1 function below.\nvoid print(vector\u003cint\u003e arr) {\n    for(int i=0;i\u003carr.size();i++)\n        cout\u003c\u003carr[i]\u003c\u003c\" \";\n    cout\u003c\u003cendl;\n}\nvoid insertionSort1(vector\u003cint\u003e arr) {\n    int x=arr.back();\n    for(int i=arr.size()-2;i\u003e=-1;i--) {\n        cout\u003c\u003ci\u003c\u003cendl;\n        if(arr[i]\u003ex) arr[i+1]=arr[i];\n        else {\n            arr[i+1]=x;\n            break;\n        }\n        print(arr);\n    }\n    print(arr);\n}\n\nint main()\n{\n    int n;\n    cin \u003e\u003e n;\n    cin.ignore(numeric_limits\u003cstreamsize\u003e::max(), '\\n');\n\n    string arr_temp_temp;\n    getline(cin, arr_temp_temp);\n\n    vector\u003cstring\u003e arr_temp = split_string(arr_temp_temp);\n\n    vector\u003cint\u003e arr(n);\n\n    for (int i = 0; i \u003c n; i++) {\n        int arr_item = stoi(arr_temp[i]);\n\n        arr[i] = arr_item;\n    }\n\n    insertionSort1(arr);\n\n    return 0;\n}\n\nvector\u003cstring\u003e split_string(string input_string) {\n    string::iterator new_end = unique(input_string.begin(), input_string.end(), [] (const char \u0026x, const char \u0026y) {\n        return x == y and x == ' ';\n    });\n\n    input_string.erase(new_end, input_string.end());\n\n    while (input_string[input_string.length() - 1] == ' ') {\n        input_string.pop_back();\n    }\n\n    vector\u003cstring\u003e splits;\n    char delimiter = ' ';\n\n    size_t i = 0;\n    size_t pos = input_string.find(delimiter);\n\n    while (pos != string::npos) {\n        splits.push_back(input_string.substr(i, pos - i));\n\n        i = pos + 1;\n        pos = input_string.find(delimiter, i);\n    }\n\n    splits.push_back(input_string.substr(i, min(pos, input_string.length()) - i + 1));\n\n    return splits;\n}\n","score":0.0,"language":"cpp14"},{"contest":"Master","challenge":"Insertion Sort - Part 1","code":"#include \u003cbits/stdc++.h\u003e\n\nusing namespace std;\n\nvector\u003cstring\u003e split_string(string);\n\n// Complete the insertionSort1 function below.\nvoid print(vector\u003cint\u003e arr) {\n    for(int i=0;i\u003carr.size();i++)\n        cout\u003c\u003carr[i]\u003c\u003c\" \";\n    cout\u003c\u003cendl;\n}\nvoid insertionSort1(vector\u003cint\u003e arr) {\n    int x=arr.back();\n    for(int i=arr.size()-2;i\u003e=-1;i--) {\n        if(arr[i]\u003ex) arr[i+1]=arr[i];\n        else {\n            arr[i+1]=x;\n            break;\n        }\n        print(arr);\n    }\n    print(arr);\n}\n\nint main()\n{\n    int n;\n    cin \u003e\u003e n;\n    cin.ignore(numeric_limits\u003cstreamsize\u003e::max(), '\\n');\n\n    string arr_temp_temp;\n    getline(cin, arr_temp_temp);\n\n    vector\u003cstring\u003e arr_temp = split_string(arr_temp_temp);\n\n    vector\u003cint\u003e arr(n);\n\n    for (int i = 0; i \u003c n; i++) {\n        int arr_item = stoi(arr_temp[i]);\n\n        arr[i] = arr_item;\n    }\n\n    insertionSort1(arr);\n\n    return 0;\n}\n\nvector\u003cstring\u003e split_string(string input_string) {\n    string::iterator new_end = unique(input_string.begin(), input_string.end(), [] (const char \u0026x, const char \u0026y) {\n        return x == y and x == ' ';\n    });\n\n    input_string.erase(new_end, input_string.end());\n\n    while (input_string[input_string.length() - 1] == ' ') {\n        input_string.pop_back();\n    }\n\n    vector\u003cstring\u003e splits;\n    char delimiter = ' ';\n\n    size_t i = 0;\n    size_t pos = input_string.find(delimiter);\n\n    while (pos != string::npos) {\n        splits.push_back(input_string.substr(i, pos - i));\n\n        i = pos + 1;\n        pos = input_string.find(delimiter, i);\n    }\n\n    splits.push_back(input_string.substr(i, min(pos, input_string.length()) - i + 1));\n\n    return splits;\n}\n","score":1.0,"language":"cpp14"},{"contest":"Master","challenge":"Strong Password","code":"#include \u003cbits/stdc++.h\u003e\nusing namespace std;\n\nint minimumNumber(int n, string pass) {\n    bool type[4]={};\n    for(int i=0;i\u003cn;i++) {\n        if(pass[i]\u003e='0' \u0026\u0026 pass[i]\u003c='9') type[0]=true;\n        else if(pass[i]\u003e='A' \u0026\u0026 pass[i]\u003c='Z') type[1]=true;\n        else if(pass[i]\u003e='a' \u0026\u0026 pass[i]\u003c='z') type[2]=true;\n        else type[3]=true;\n    } int cnt=0;\n    for(int i=0;i\u003c4;i++)\n        if(!type[i]) cnt++;\n    return max(cnt,6-n);\n}\nint main() {\n    ofstream fout(getenv(\"OUTPUT_PATH\"));\n    int n;\n    cin \u003e\u003e n;\n    cin.ignore(numeric_limits\u003cstreamsize\u003e::max(), '\\n');\n    string password;\n    getline(cin, password);\n    int answer = minimumNumber(n, password);\n    fout \u003c\u003c answer \u003c\u003c \"\\n\";\n    fout.close();\n    return 0;\n}\n","score":1.0,"language":"cpp14"},{"contest":"Master","challenge":"Organizing Containers of Balls","code":"#include \u003cbits/stdc++.h\u003e\n\nusing namespace std;\n\n// Complete the organizingContainers function below.\nstring organizingContainers(vector\u003cvector\u003cint\u003e\u003e container) {\n    for(int i=0;i\u003ccontainer.size();i++) {\n        int row_sum=0,col_sum=0;\n        for(int j=0;j\u003ccontainer.size();j++) {\n            row_sum+=container[i][j];\n            col_sum+=container[j][i];\n        } if(row_sum!=col_sum)\n        return \"Impossible\";\n    } return \"Possible\";\n}\n\nint main() {\n    ofstream fout(getenv(\"OUTPUT_PATH\"));\n    int q;\n    cin \u003e\u003e q;\n    cin.ignore(numeric_limits\u003cstreamsize\u003e::max(), '\\n');\n    for (int q_itr = 0; q_itr \u003c q; q_itr++) {\n        int n;\n        cin \u003e\u003e n;\n        cin.ignore(numeric_limits\u003cstreamsize\u003e::max(), '\\n');\n        vector\u003cvector\u003cint\u003e\u003e container(n);\n        for (int i = 0; i \u003c n; i++) {\n            container[i].resize(n);\n            for (int j = 0; j \u003c n; j++) {\n                cin \u003e\u003e container[i][j];\n            }\n            cin.ignore(numeric_limits\u003cstreamsize\u003e::max(), '\\n');\n        }\n        string result = organizingContainers(container);\n        fout \u003c\u003c result \u003c\u003c \"\\n\";\n    }\n    fout.close();\n    return 0;\n}\n","score":0.0,"language":"cpp14"},{"contest":"Master","challenge":"Organizing Containers of Balls","code":"#include \u003cbits/stdc++.h\u003e\n#define ll long long\nusing namespace std;\n\n// Complete the organizingContainers function below.\nstring organizingContainers(vector\u003cvector\u003cint\u003e\u003e container) {\n    for(int i=0;i\u003ccontainer.size();i++) {\n        ll row_sum=0,col_sum=0;\n        for(int j=0;j\u003ccontainer.size();j++) {\n            row_sum+=container[i][j];\n            col_sum+=container[j][i];\n        } if(row_sum!=col_sum)\n        return \"Impossible\";\n    } return \"Possible\";\n}\n\nint main() {\n    ofstream fout(getenv(\"OUTPUT_PATH\"));\n    int q;\n    cin \u003e\u003e q;\n    cin.ignore(numeric_limits\u003cstreamsize\u003e::max(), '\\n');\n    for (int q_itr = 0; q_itr \u003c q; q_itr++) {\n        int n;\n        cin \u003e\u003e n;\n        cin.ignore(numeric_limits\u003cstreamsize\u003e::max(), '\\n');\n        vector\u003cvector\u003cint\u003e\u003e container(n);\n        for (int i = 0; i \u003c n; i++) {\n            container[i].resize(n);\n            for (int j = 0; j \u003c n; j++) {\n                cin \u003e\u003e container[i][j];\n            }\n            cin.ignore(numeric_limits\u003cstreamsize\u003e::max(), '\\n');\n        }\n        string result = organizingContainers(container);\n        fout \u003c\u003c result \u003c\u003c \"\\n\";\n    }\n    fout.close();\n    return 0;\n}\n","score":0.0,"language":"cpp14"},{"contest":"Master","challenge":"Organizing Containers of Balls","code":"#include \u003cbits/stdc++.h\u003e\n#define ll long long\nusing namespace std;\n\n// Complete the organizingContainers function below.\nstring organizingContainers(vector\u003cvector\u003cint\u003e\u003e container) {\n    vector\u003cll\u003e row_sums,column_sums;\n    for(int i=0;i\u003ccontainer.size();i++) {\n        ll row_sum=0,col_sum=0;\n        for(int j=0;j\u003ccontainer.size();j++) {\n            row_sum+=container[i][j];\n            col_sum+=container[j][i];\n        } row_sums.push_back(row_sum);\n        column_sums.push_back(col_sum);\n    } sort(row_sums.begin(),row_sums.end());\n    sort(column_sums.begin(),column_sums.end());\n    if(row_sums==column_sums)\n        return \"Possible\";\n    else return \"Impossible\";\n}\n\nint main() {\n    ofstream fout(getenv(\"OUTPUT_PATH\"));\n    int q;\n    cin \u003e\u003e q;\n    cin.ignore(numeric_limits\u003cstreamsize\u003e::max(), '\\n');\n    for (int q_itr = 0; q_itr \u003c q; q_itr++) {\n        int n;\n        cin \u003e\u003e n;\n        cin.ignore(numeric_limits\u003cstreamsize\u003e::max(), '\\n');\n        vector\u003cvector\u003cint\u003e\u003e container(n);\n        for (int i = 0; i \u003c n; i++) {\n            container[i].resize(n);\n            for (int j = 0; j \u003c n; j++) {\n                cin \u003e\u003e container[i][j];\n            }\n            cin.ignore(numeric_limits\u003cstreamsize\u003e::max(), '\\n');\n        }\n        string result = organizingContainers(container);\n        fout \u003c\u003c result \u003c\u003c \"\\n\";\n    }\n    fout.close();\n    return 0;\n}\n","score":1.0,"language":"cpp14"},{"contest":"Master","challenge":"Bigger is Greater","code":"#include \u003cbits/stdc++.h\u003e\n\nusing namespace std;\n\n// Complete the biggerIsGreater function below.\nstring biggerIsGreater(string w) {\n    if(next_permutation(w.begin(),w.end())) return w;\n    return \"no answer\";\n}\nint main() {\n    ofstream fout(getenv(\"OUTPUT_PATH\"));\n    int T;\n    cin \u003e\u003e T;\n    cin.ignore(numeric_limits\u003cstreamsize\u003e::max(), '\\n');\n    for (int T_itr = 0; T_itr \u003c T; T_itr++) {\n        string w;\n        getline(cin, w);\n        string result = biggerIsGreater(w);\n        fout \u003c\u003c result \u003c\u003c \"\\n\";\n    }\n    fout.close();\n    return 0;\n}\n","score":1.0,"language":"cpp14"},{"contest":"Master","challenge":"Bigger is Greater","code":"#include \u003cbits/stdc++.h\u003e\n\nusing namespace std;\n\n// Complete the biggerIsGreater function below.\nbool biggerIsGreater(string \u0026w,int i=0) {\n    if(w.length()==i-1)\n        return false;\n    if(biggerIsGreater(w,i+1))\n        return true;\n    else {\n        for(int j=w.length()-1;j\u003ei;j--) {\n            if(w[j]\u003ew[i]) {\n                swap(w[j],w[i]);\n                sort(w.begin()+i+1,w.end());\n                return true;\n            }\n        }\n    }\n    return false;\n}\nint main() {\n    ofstream fout(getenv(\"OUTPUT_PATH\"));\n    int T;\n    cin \u003e\u003e T;\n    cin.ignore(numeric_limits\u003cstreamsize\u003e::max(), '\\n');\n    for (int T_itr = 0; T_itr \u003c T; T_itr++) {\n        string w;\n        getline(cin, w);\n        if(biggerIsGreater(w))\n            fout \u003c\u003c w \u003c\u003c \"\\n\";\n        else\n            fout \u003c\u003c \"no answer\" \u003c\u003c \"\\n\";\n    }\n    fout.close();\n    return 0;\n}\n","score":1.0,"language":"cpp14"},{"contest":"Master","challenge":"Bigger is Greater","code":"#include \u003cbits/stdc++.h\u003e\n\nusing namespace std;\n\n// Complete the biggerIsGreater function below.\nstring biggerIsGreater(string w) {\n    for(int i=w.length()-1;i\u003e=0;i--) {\n        for(int j=w.length()-1;j\u003ei;j--) {\n            if(w[j]\u003ew[i]) {\n                swap(w[j],w[i]);\n                sort(w.begin()+i+1,w.end());\n                return w;\n            }\n        }\n    }\n    return \"no answer\";\n}\nint main() {\n    ofstream fout(getenv(\"OUTPUT_PATH\"));\n    int T;\n    cin \u003e\u003e T;\n    cin.ignore(numeric_limits\u003cstreamsize\u003e::max(), '\\n');\n    for (int T_itr = 0; T_itr \u003c T; T_itr++) {\n        string w;\n        getline(cin, w);\n        fout \u003c\u003c biggerIsGreater(w) \u003c\u003c \"\\n\";\n    }\n    fout.close();\n    return 0;\n}\n","score":1.0,"language":"cpp14"},{"contest":"Master","challenge":"The Time in Words","code":"#include \u003cbits/stdc++.h\u003e\n\nusing namespace std;\n\nstring num[20]={\"\",\"one\",\"two\",\"three\",\"four\",\"five\",\"six\",\"seven\",\"eight\",\"nine\",\"ten\",\"eleven\",\"twelve\",\"thirteen\",\"fourteen\",\"fifteen\",\"sixteen\",\"seventeen\",\"eighteen\",\"nineteen\"};\nstring pre[10]={\"\",\"\",\"twenty\",\"thirty\",\"forty\",\"fifty\",\"sixty\",\"seventy\",\"eighty\",\"ninty\"};\n// Complete the timeInWords function below.\nstring timeInWords(int h, int m) {\n    if(m==0) return num[h]+\" o' clock\";\n    else if(m==30) return \"half past \"+num[h];\n    else if(m==15) return \"quarter past \"+num[h];\n    else if(m==45) return \"quarter to \"+num[h+1];\n    else if(m\u003c20) return num[m]+\" minutes past \"+num[h];\n    else if(m\u003c30) return pre[m/10]+\" \"+num[m%10]+\" minutes past \"+num[h];\n    else if(m\u003c41) return pre[(60-m)/10]+\" \"+num[(60-m)%10]+\" minutes to \"+num[h+1];\n    else return num[60-m]+\" minutes to \"+num[h+1];\n    return \"\";\n}\n\nint main()\n{\n    ofstream fout(getenv(\"OUTPUT_PATH\"));\n\n    int h;\n    cin \u003e\u003e h;\n    cin.ignore(numeric_limits\u003cstreamsize\u003e::max(), '\\n');\n\n    int m;\n    cin \u003e\u003e m;\n    cin.ignore(numeric_limits\u003cstreamsize\u003e::max(), '\\n');\n\n    string result = timeInWords(h, m);\n\n    fout \u003c\u003c result \u003c\u003c \"\\n\";\n\n    fout.close();\n\n    return 0;\n}\n","score":0.875,"language":"cpp14"},{"contest":"Master","challenge":"The Time in Words","code":"#include \u003cbits/stdc++.h\u003e\n\nusing namespace std;\n\nstring num[20]={\"\",\"one\",\"two\",\"three\",\"four\",\"five\",\"six\",\"seven\",\"eight\",\"nine\",\"ten\",\"eleven\",\"twelve\",\"thirteen\",\"fourteen\",\"fifteen\",\"sixteen\",\"seventeen\",\"eighteen\",\"nineteen\"};\nstring pre[10]={\"\",\"\",\"twenty\",\"thirty\",\"forty\",\"fifty\",\"sixty\",\"seventy\",\"eighty\",\"ninty\"};\n// Complete the timeInWords function below.\nstring timeInWords(int h, int m) {\n    if(m==0) return num[h]+\" o' clock\";\n    else if(m==30) return \"half past \"+num[h];\n    else if(m==15) return \"quarter past \"+num[h];\n    else if(m==45) return \"quarter to \"+num[h+1];\n    else if(m==1) return num[m]+\" minute past \"+num[h];\n    else if(m\u003c20) return num[m]+\" minutes past \"+num[h];\n    else if(m\u003c30) return pre[m/10]+\" \"+num[m%10]+\" minutes past \"+num[h];\n    else if(m\u003c41) return pre[(60-m)/10]+\" \"+num[(60-m)%10]+\" minutes to \"+num[h+1];\n    else return num[60-m]+\" minutes to \"+num[h+1];\n}\n\nint main()\n{\n    ofstream fout(getenv(\"OUTPUT_PATH\"));\n\n    int h;\n    cin \u003e\u003e h;\n    cin.ignore(numeric_limits\u003cstreamsize\u003e::max(), '\\n');\n\n    int m;\n    cin \u003e\u003e m;\n    cin.ignore(numeric_limits\u003cstreamsize\u003e::max(), '\\n');\n\n    string result = timeInWords(h, m);\n\n    fout \u003c\u003c result \u003c\u003c \"\\n\";\n\n    fout.close();\n\n    return 0;\n}\n","score":1.0,"language":"cpp14"},{"contest":"Master","challenge":"The Time in Words","code":"#include \u003cbits/stdc++.h\u003e\n\nusing namespace std;\n\nstring mins[] = {\n    \"o' clock\",\n    \"one minute\",\n    \"two minutes\",\n    \"three minutes\",\n    \"four minutes\",\n    \"five minutes\",\n    \"six minutes\",\n    \"seven minutes\",\n    \"eight minutes\",\n    \"nine minutes\",\n    \"ten minutes\",\n    \"eleven minutes\",\n    \"twelve minutes\",\n    \"thirteen minutes\",\n    \"fourteen minutes\",\n    \"quarter\",\n    \"sixteen minutes\",\n    \"seventeen minutes\",\n    \"eighteen minutes\",\n    \"nineteen minutes\",\n    \"twenty minutes\",\n    \"twenty one minutes\",\n    \"twenty two minutes\",\n    \"twenty three minutes\",\n    \"twenty four minutes\",\n    \"twenty five minutes\",\n    \"twenty six minutes\",\n    \"twenty seven minutes\",\n    \"twenty eight minutes\",\n    \"twenty nine minutes\",\n    \"half\"\n};\nstring hours[] = {\n    \"\",      \"one\",   \"two\",  \"three\", \"four\",   \"five\",  \"six\",\n    \"seven\", \"eight\", \"nine\", \"ten\",   \"eleven\", \"twelve\"\n};\nstring timeInWords(int h, int m) {\n    if(m==0) return hours[h]+\" \"+mins[m];\n    else if(m\u003c=30) return mins[m]+\" past \"+hours[h];\n    else return mins[60-m]+\" to \"+hours[h+1];\n}\nint main() {\n    ofstream fout(getenv(\"OUTPUT_PATH\"));\n    int h;\n    cin \u003e\u003e h;\n    cin.ignore(numeric_limits\u003cstreamsize\u003e::max(), '\\n');\n    int m;\n    cin \u003e\u003e m;\n    cin.ignore(numeric_limits\u003cstreamsize\u003e::max(), '\\n');\n    string result = timeInWords(h, m);\n    fout \u003c\u003c result \u003c\u003c \"\\n\";\n    fout.close();\n    return 0;\n}\n","score":1.0,"language":"cpp14"},{"contest":"Master","challenge":"The Grid Search","code":"#include \u003cbits/stdc++.h\u003e\n\nusing namespace std;\n\nvector\u003cstring\u003e split_string(string);\n\n// Complete the gridSearch function below.\nstring gridSearch(vector\u003cstring\u003e G, vector\u003cstring\u003e P) {\n    for(int I=0;I\u003c=G.size()-P.size();I++) {\n        for(int J=0;J\u003c=G[I].size()-P[0].size();J++) {\n            for(int i=0;i\u003cP.size();i++) {\n                for(int j=0;j\u003cP[i].size();j++) {\n                    if(G[I+i][J+j]!=P[i][j]) goto reset;\n                } if(i==P.size()-1) return \"YES\";\n            } reset:cout\u003c\u003c1;\n        } cout\u003c\u003cendl;\n    } return \"NO\";\n}\nint main() {\n    ofstream fout(getenv(\"OUTPUT_PATH\"));\n    int t;\n    cin \u003e\u003e t;\n    cin.ignore(numeric_limits\u003cstreamsize\u003e::max(), '\\n');\n    for (int t_itr = 0; t_itr \u003c t; t_itr++) {\n        string RC_temp;\n        getline(cin, RC_temp);\n        vector\u003cstring\u003e RC = split_string(RC_temp);\n        int R = stoi(RC[0]);\n        int C = stoi(RC[1]);\n        vector\u003cstring\u003e G(R);\n        for (int i = 0; i \u003c R; i++) {\n            string G_item;\n            getline(cin, G_item);\n            G[i] = G_item;\n        }\n        string rc_temp;\n        getline(cin, rc_temp);\n        vector\u003cstring\u003e rc = split_string(rc_temp);\n        int r = stoi(rc[0]);\n        int c = stoi(rc[1]);\n        vector\u003cstring\u003e P(r);\n        for (int i = 0; i \u003c r; i++) {\n            string P_item;\n            getline(cin, P_item);\n            P[i] = P_item;\n        }\n        string result = gridSearch(G, P);\n        fout \u003c\u003c result \u003c\u003c \"\\n\";\n    }\n    fout.close();\n    return 0;\n}\nvector\u003cstring\u003e split_string(string input_string) {\n    string::iterator new_end = unique(input_string.begin(), input_string.end(), [] (const char \u0026x, const char \u0026y) {\n        return x == y and x == ' ';\n    });\n    input_string.erase(new_end, input_string.end());\n    while (input_string[input_string.length() - 1] == ' ') {\n        input_string.pop_back();\n    }\n    vector\u003cstring\u003e splits;\n    char delimiter = ' ';\n    size_t i = 0;\n    size_t pos = input_string.find(delimiter);\n    while (pos != string::npos) {\n        splits.push_back(input_string.substr(i, pos - i));\n        i = pos + 1;\n        pos = input_string.find(delimiter, i);\n    }\n    splits.push_back(input_string.substr(i, min(pos, input_string.length()) - i + 1));\n    return splits;\n}\n","score":1.0,"language":"cpp14"},{"contest":"Master","challenge":"Vector-Sort","code":"#include \u003ccmath\u003e\n#include \u003ccstdio\u003e\n#include \u003cvector\u003e\n#include \u003ciostream\u003e\n#include \u003calgorithm\u003e\nusing namespace std;\n\n\nint main() {\n    int n; cin\u003e\u003en;\n    vector\u003cint\u003e a(n);\n    for(int i=0;i\u003cn;i++)\n        cin\u003e\u003ea[i];\n    sort(a.begin(),a.end());\n    for(int i=0;i\u003cn;i++)\n        cout\u003c\u003ca[i]\u003c\u003c\" \";\n    return 0;\n}\n","score":1.0,"language":"cpp14"},{"contest":"Master","challenge":"Structs","code":"#include \u003ccmath\u003e\n#include \u003ccstdio\u003e\n#include \u003cvector\u003e\n#include \u003ciostream\u003e\n#include \u003calgorithm\u003e\nusing namespace std;\n\nstruct Student {\n    int age;\n    int standard;\n    string first_name;\n    string last_name;\n};\n\nint main() {\n    Student st;\n    \n    cin \u003e\u003e st.age \u003e\u003e st.first_name \u003e\u003e st.last_name \u003e\u003e st.standard;\n    cout \u003c\u003c st.age \u003c\u003c \" \" \u003c\u003c st.first_name \u003c\u003c \" \" \u003c\u003c st.last_name \u003c\u003c \" \" \u003c\u003c st.standard;\n    \n    return 0;\n}\n\n","score":1.0,"language":"cpp14"},{"contest":"Master","challenge":"Class","code":"#include \u003ciostream\u003e\n#include \u003csstream\u003e\nusing namespace std;\n\nclass Student {\n    int age;\n    int standard;\n    string first_name;\n    string last_name;\n    public:\n    void set_age(int x) {\n        age=x;\n    }\n    void set_standard(int x) {\n        standard=x;\n    }\n    void set_first_name(string x) {\n        first_name=x;\n    }\n    void set_last_name(string x) {\n        last_name=x;\n    }\n    int get_age() {\n        return age;\n    }\n    int get_standard() {\n        return standard;\n    }\n    string get_first_name() {\n        return first_name;\n    }\n    string get_last_name() {\n        return last_name;\n    }\n    string to_string() {\n        return std::to_string(age)+','+first_name+','+last_name+','+std::to_string(standard);\n    }\n};\n\nint main() {\n    int age, standard;\n    string first_name, last_name;\n    \n    cin \u003e\u003e age \u003e\u003e first_name \u003e\u003e last_name \u003e\u003e standard;\n    \n    Student st;\n    st.set_age(age);\n    st.set_standard(standard);\n    st.set_first_name(first_name);\n    st.set_last_name(last_name);\n    \n    cout \u003c\u003c st.get_age() \u003c\u003c \"\\n\";\n    cout \u003c\u003c st.get_last_name() \u003c\u003c \", \" \u003c\u003c st.get_first_name() \u003c\u003c \"\\n\";\n    cout \u003c\u003c st.get_standard() \u003c\u003c \"\\n\";\n    cout \u003c\u003c \"\\n\";\n    cout \u003c\u003c st.to_string();\n    \n    return 0;\n}\n\n","score":1.0,"language":"cpp14"},{"contest":"Master","challenge":"Classes and Objects","code":"\n\nclass Student {\n    int exam_1,exam_2,exam_3,exam_4,exam_5;\n    public:\n    void input() {\n        cin\u003e\u003eexam_1\u003e\u003eexam_2\u003e\u003eexam_3\u003e\u003eexam_4\u003e\u003eexam_5;\n    }\n    int calculateTotalScore() {\n        return exam_1+exam_2+exam_3+exam_4+exam_5;\n    }\n};\n\n","score":1.0,"language":"cpp14"},{"contest":"Master","challenge":"Box It!","code":"\n\nclass Box {\n    int l,b,h;\n    public:\n    Box() {\n        l=0; b=0; h=0;\n    }\n    Box(int L,int B,int H) {\n        l=L; b=B; h=H;\n    }\n    Box(Box \u0026a) {\n        l=a.getLength(); b=a.getBreadth(); h=a.getHeight();\n    }\n    int getLength() {\n        return l;\n    }\n    int getBreadth () {\n        return b;\n    }\n    int getHeight () {\n        return h;\n    }\n    long long CalculateVolume() {\n        return l*b*h;\n    }\n    bool operator\u003c(Box\u0026 a) {\n        if(l\u003c=a.getLength()) {\n            if(l\u003ca.getLength()) return true;\n            else if(b\u003c=a.getBreadth()) {\n                if(b\u003ca.getBreadth()) return true;\n                else if(h\u003ca.getHeight()) return true;\n                return false;\n            }\n        }\n        return false;\n    }\n};\n\nostream \u0026operator\u003c\u003c(ostream \u0026out, Box \u0026a) {\n    out\u003c\u003ca.getLength()\u003c\u003c\" \"\u003c\u003ca.getBreadth()\u003c\u003c\" \"\u003c\u003ca.getHeight();\n    return out;\n}\n","score":0.8,"language":"cpp14"},{"contest":"Master","challenge":"Box It!","code":"\n\nclass Box {\n    long long l,b,h;\n    public:\n    Box() {\n        l=0; b=0; h=0;\n    }\n    Box(int L,int B,int H) {\n        l=L; b=B; h=H;\n    }\n    Box(Box \u0026a) {\n        l=a.getLength(); b=a.getBreadth(); h=a.getHeight();\n    }\n    int getLength() {\n        return l;\n    }\n    int getBreadth () {\n        return b;\n    }\n    int getHeight () {\n        return h;\n    }\n    long long CalculateVolume() {\n        return l*b*h;\n    }\n    bool operator\u003c(Box\u0026 a) {\n        if(l\u003c=a.getLength()) {\n            if(l\u003ca.getLength()) return true;\n            else if(b\u003c=a.getBreadth()) {\n                if(b\u003ca.getBreadth()) return true;\n                else if(h\u003ca.getHeight()) return true;\n                return false;\n            }\n        }\n        return false;\n    }\n    friend ostream \u0026operator\u003c\u003c(ostream \u0026out, Box \u0026a);\n};\n\nostream \u0026operator\u003c\u003c(ostream \u0026out, Box \u0026a) {\n    out\u003c\u003ca.l\u003c\u003c\" \"\u003c\u003ca.b\u003c\u003c\" \"\u003c\u003ca.h;\n    return out;\n}\n","score":1.0,"language":"cpp14"},{"contest":"Master","challenge":"Box It!","code":"\n\nclass Box {\n    long long l,b,h;\n    public:\n    Box() {\n        l=0; b=0; h=0;\n    }\n    Box(int L,int B,int H) {\n        l=L; b=B; h=H;\n    }\n    Box(Box \u0026a) {\n        l=a.getLength(); b=a.getBreadth(); h=a.getHeight();\n    }\n    int getLength() {\n        return l;\n    }\n    int getBreadth () {\n        return b;\n    }\n    int getHeight () {\n        return h;\n    }\n    long long CalculateVolume() {\n        return l*b*h;\n    }\n    bool operator\u003c(Box\u0026 a) {\n        if(l\u003c=a.getLength()) {\n            if(l\u003ca.getLength()) return true;\n            else if(b\u003c=a.getBreadth()) {\n                if(b\u003ca.getBreadth()) return true;\n                else if(h\u003ca.getHeight()) return true;\n                return false;\n            }\n        }\n        return false;\n    }\n};\n\nostream \u0026operator\u003c\u003c(ostream \u0026out, Box \u0026a) {\n    out\u003c\u003ca.getLength()\u003c\u003c\" \"\u003c\u003ca.getBreadth()\u003c\u003c\" \"\u003c\u003ca.getHeight();\n    return out;\n}\n","score":1.0,"language":"cpp14"},{"contest":"Master","challenge":"Inherited Code","code":"\nclass BadLengthException {\n    int len;\n    public:\n    BadLengthException(int n) {\n        len=n;\n    }\n    int what() {\n        return len;\n    }\n};\n","score":1.0,"language":"cpp14"},{"contest":"Master","challenge":"Vector-Erase","code":"#include \u003ccmath\u003e\n#include \u003ccstdio\u003e\n#include \u003cvector\u003e\n#include \u003ciostream\u003e\n#include \u003calgorithm\u003e\nusing namespace std;\n\n\nint main() {\n    int n; cin\u003e\u003en;\n    vector\u003cint\u003e a(n);\n    for(int i=0;i\u003cn;i++) {\n        cin\u003e\u003ea[i];\n    } int ind; pair\u003cint,int\u003e range;\n    cin\u003e\u003eind;\n    cin\u003e\u003erange.first\u003e\u003erange.second;\n    a.erase(a.begin()+ind-1);\n    a.erase(a.begin+range.first-1,a.begin+range.second);\n    cout\u003c\u003ca.size()\u003c\u003cendl;\n    for(int i=0;i\u003ca.size();i++) {\n        cout\u003c\u003ca[i]\u003c\u003c\" \";\n    } cout\u003c\u003cendl;\n    return 0;\n}\n","score":0.0,"language":"cpp14"},{"contest":"Master","challenge":"Vector-Erase","code":"#include \u003ccmath\u003e\n#include \u003ccstdio\u003e\n#include \u003cvector\u003e\n#include \u003ciostream\u003e\n#include \u003calgorithm\u003e\nusing namespace std;\n\n\nint main() {\n    int n; cin\u003e\u003en;\n    vector\u003cint\u003e a(n);\n    for(int i=0;i\u003cn;i++) {\n        cin\u003e\u003ea[i];\n    } int ind; pair\u003cint,int\u003e range;\n    cin\u003e\u003eind;\n    cin\u003e\u003erange.first\u003e\u003erange.second;\n    a.erase(a.begin()+ind-1);\n    a.erase(a.begin()+range.first-1,a.begin()+range.second-1);\n    cout\u003c\u003ca.size()\u003c\u003cendl;\n    for(int i=0;i\u003ca.size();i++) {\n        cout\u003c\u003ca[i]\u003c\u003c\" \";\n    } cout\u003c\u003cendl;\n    return 0;\n}\n","score":1.0,"language":"cpp14"},{"contest":"Master","challenge":"Lower Bound-STL","code":"#include \u003ccmath\u003e\n#include \u003ccstdio\u003e\n#include \u003cvector\u003e\n#include \u003ciostream\u003e\n#include \u003calgorithm\u003e\nusing namespace std;\n\n\nint main() {\n    int n,nq,q;\n    cin\u003e\u003en;\n    vector\u003cint\u003e v(n);\n    for(int i=0;i\u003cn;i++)\n        cin\u003e\u003ev[i]; \n    cin\u003e\u003enq;\n    for(int i=0;i\u003cnq;i++) {\n        cin\u003e\u003eq;\n        vector\u003cint\u003e::iterator it;\n        it=lower_bound(v.begin(),v.end(),q);\n        if(*it==q) cout\u003c\u003c\"Yes \"\u003c\u003cit-v.begin()+1\u003c\u003cendl;\n        else cout\u003c\u003c\"No \"\u003c\u003cit-v.begin()+1\u003c\u003cendl;\n    }\n    return 0;\n}\n","score":1.0,"language":"cpp14"},{"contest":"Master","challenge":"Sets-STL","code":"#include \u003ccmath\u003e\n#include \u003ccstdio\u003e\n#include \u003cvector\u003e\n#include \u003ciostream\u003e\n#include \u003cset\u003e\n#include \u003calgorithm\u003e\nusing namespace std;\n\nint main() {\n    int n,type,val;\n    cin \u003e\u003e n;\n    set\u003cint\u003e s;\n    while(n--) {\n        cin\u003e\u003etype\u003e\u003eval;\n        if(type==1) s.insert(val);\n        else if(type==2) s.erase(val);\n        else {\n            set\u003cint\u003e::iterator it=s.find(val);\n            if(it==s.end()) cout\u003c\u003c\"No\"\u003c\u003cendl;\n            else cout\u003c\u003c\"Yes\"\u003c\u003cendl;\n        }\n    }\n    return 0;\n}\n\n\n\n","score":1.0,"language":"cpp14"},{"contest":"Master","challenge":"Maps-STL","code":"#include \u003ccmath\u003e\n#include \u003ccstdio\u003e\n#include \u003cvector\u003e\n#include \u003ciostream\u003e\n#include \u003calgorithm\u003e\n#include \u003cmap\u003e\nusing namespace std;\n\n\nint main() {\n    map\u003cstring,int\u003e marksheet;\n    string name;\n    int n,type,marks;\n    cin\u003e\u003en; while(n--) {\n        cin\u003e\u003etype;\n        if(type==1) {\n            cin\u003e\u003ename\u003e\u003emarks;\n            marksheet[name]+=marks;\n        } else if(type==2) {\n            cin\u003e\u003ename;\n            marksheet.erase(name);\n        } else {\n            cin\u003e\u003ename;\n            cout\u003c\u003cmarksheet[name]\u003c\u003cendl;\n        }\n    } return 0;\n}\n","score":1.0,"language":"cpp14"},{"contest":"Master","challenge":"Print Pretty","code":"\n        long long a = A;\n        cout\u003c\u003cresetiosflags(ios::uppercase)\u003c\u003csetw(0)\u003c\u003cshowbase\u003c\u003chex\u003c\u003ca\u003c\u003cendl;\n        cout\u003c\u003cright\u003c\u003csetw(15)\u003c\u003csetfill('_')\u003c\u003cshowpos\u003c\u003cB\u003c\u003cendl;\n        cout\u003c\u003csetiosflags(ios::uppercase)\u003c\u003cnoshowpos\u003c\u003csetprecision(9)\u003c\u003cscientific\u003c\u003cC\u003c\u003cendl;\n","score":0.0,"language":"cpp14"},{"contest":"Master","challenge":"Print Pretty","code":"\n        long long a = A;\n        cout\u003c\u003cresetiosflags(ios::uppercase)\u003c\u003csetw(0)\u003c\u003cshowbase\u003c\u003chex\u003c\u003ca\u003c\u003cendl;\n        cout\u003c\u003cright\u003c\u003csetw(15)\u003c\u003csetfill('_')\u003c\u003cshowpos;\n        cout\u003c\u003csetprecision(2)\u003c\u003cfixed\u003c\u003cB\u003c\u003cendl;\n        cout\u003c\u003csetiosflags(ios::uppercase)\u003c\u003cnoshowpos;\n        cout\u003c\u003csetprecision(9)\u003c\u003cscientific\u003c\u003cC\u003c\u003cendl;\n","score":1.0,"language":"cpp14"},{"contest":"Master","challenge":"Print Pretty","code":"\n        long long a = A;\n        cout\u003c\u003cresetiosflags(ios::uppercase)\u003c\u003csetw(0)\u003c\u003cshowbase;\n        cout\u003c\u003chex\u003c\u003ca\u003c\u003cendl;\n        cout\u003c\u003cright\u003c\u003csetw(15)\u003c\u003csetfill('_')\u003c\u003cshowpos;\n        cout\u003c\u003csetprecision(2)\u003c\u003cfixed\u003c\u003cB\u003c\u003cendl;\n        cout\u003c\u003csetiosflags(ios::uppercase)\u003c\u003cnoshowpos;\n        cout\u003c\u003csetprecision(9)\u003c\u003cscientific\u003c\u003cC\u003c\u003cendl;\n","score":1.0,"language":"cpp14"},{"contest":"Master","challenge":"Print Pretty","code":"\n        cout\u003c\u003cnouppercase\u003c\u003csetw(0)\u003c\u003cshowbase;\n        cout\u003c\u003chex\u003c\u003c(long long)A\u003c\u003cendl;\n        cout\u003c\u003cright\u003c\u003csetw(15)\u003c\u003csetfill('_')\u003c\u003cshowpos;\n        cout\u003c\u003csetprecision(2)\u003c\u003cfixed\u003c\u003cB\u003c\u003cendl;\n        cout\u003c\u003cuppercase\u003c\u003cnoshowpos;\n        cout\u003c\u003csetprecision(9)\u003c\u003cscientific\u003c\u003cC\u003c\u003cendl;\n","score":1.0,"language":"cpp14"},{"contest":"Master","challenge":"Rectangle Area","code":"\n\nclass Rectangle {\nprotected:\n    int width;\n    int height;\npublic:\n    void display() {\n        cout\u003c\u003cwidth\u003c\u003c\" \"\u003c\u003cheight\u003c\u003cendl;\n    }\n};\nclass RectangleArea : public Rectangle {\n    public:\n    void read_input() {\n        cin\u003e\u003ewidth\u003e\u003eheight;\n    }\n    void display() {\n        cout\u003c\u003cwidth*height\u003c\u003cendl;\n    }\n\n};\n","score":1.0,"language":"cpp14"},{"contest":"Master","challenge":"Absolute Permutation","code":"#include \u003cbits/stdc++.h\u003e\n\nusing namespace std;\n\nvector\u003cstring\u003e split_string(string);\n\n// Complete the absolutePermutation function below.\nvector\u003cint\u003e absolutePermutation(int n, int k) {\n    vector\u003cint\u003e absPerm(n);\n    vector\u003cbool\u003e used(n);\n    for(int i=0;i\u003cn;i++) {\n        if(i-k\u003e=0 \u0026\u0026 !used[i-k]) {\n            absPerm[i]=i-k+1;\n            used[i-k]=true;\n        } else if(i+k\u003cn \u0026\u0026 !used[i+k]) {\n            absPerm[i]=i+k+1;\n            used[i+k]=true;\n        } else {\n            vector\u003cint\u003e NoAns;\n            NoAns.push_back(-1);\n            return NoAns;\n        }\n    } return absPerm;\n}\nint main() {\n    ofstream fout(getenv(\"OUTPUT_PATH\"));\n\n    int t;\n    cin \u003e\u003e t;\n    cin.ignore(numeric_limits\u003cstreamsize\u003e::max(), '\\n');\n\n    for (int t_itr = 0; t_itr \u003c t; t_itr++) {\n        string nk_temp;\n        getline(cin, nk_temp);\n\n        vector\u003cstring\u003e nk = split_string(nk_temp);\n\n        int n = stoi(nk[0]);\n\n        int k = stoi(nk[1]);\n\n        vector\u003cint\u003e result = absolutePermutation(n, k);\n\n        for (int i = 0; i \u003c result.size(); i++) {\n            fout \u003c\u003c result[i];\n\n            if (i != result.size() - 1) {\n                fout \u003c\u003c \" \";\n            }\n        }\n\n        fout \u003c\u003c \"\\n\";\n    }\n\n    fout.close();\n\n    return 0;\n}\n\nvector\u003cstring\u003e split_string(string input_string) {\n    string::iterator new_end = unique(input_string.begin(), input_string.end(), [] (const char \u0026x, const char \u0026y) {\n        return x == y and x == ' ';\n    });\n\n    input_string.erase(new_end, input_string.end());\n\n    while (input_string[input_string.length() - 1] == ' ') {\n        input_string.pop_back();\n    }\n\n    vector\u003cstring\u003e splits;\n    char delimiter = ' ';\n\n    size_t i = 0;\n    size_t pos = input_string.find(delimiter);\n\n    while (pos != string::npos) {\n        splits.push_back(input_string.substr(i, pos - i));\n\n        i = pos + 1;\n        pos = input_string.find(delimiter, i);\n    }\n\n    splits.push_back(input_string.substr(i, min(pos, input_string.length()) - i + 1));\n\n    return splits;\n}\n","score":1.0,"language":"cpp14"},{"contest":"Master","challenge":"Lily's Homework","code":"#include \u003cbits/stdc++.h\u003e\n\nusing namespace std;\n\nvector\u003cstring\u003e split_string(string);\n\n// Complete the lilysHomework function below.\nint lilysHomework(vector\u003cint\u003e arr) {\n    int count1=0,count2=0;\n    long long sum1=0,sum2=0;\n    vector\u003cint\u003e a(arr);\n    sort(a.begin(),a.end());\n    for(int i=1;i\u003ca.size();i++)\n        sum1+=abs(a[i]-a[i-1]);\n    for(int i=0;i\u003carr.size();i++)\n        if(arr[i] != a[i])\n            ++count1;\n    sort(a.rbegin(),a.rend());\n    for(int i=1;i\u003ca.size();i++)\n        sum2+=abs(a[i]-a[i-1]);\n    for(int i=0;i\u003carr.size();i++)\n        if(arr[i] != a[i])\n            ++count2;\n    if(sum1\u003csum2)\n        return (count1+1)/2;\n    else if(sum2\u003esum1)\n        return (count2+1)/2;\n    else\n        return min((count1+1)/2,(count2+1)/2);\n}\n\nint main()\n{\n    ofstream fout(getenv(\"OUTPUT_PATH\"));\n\n    int n;\n    cin \u003e\u003e n;\n    cin.ignore(numeric_limits\u003cstreamsize\u003e::max(), '\\n');\n\n    string arr_temp_temp;\n    getline(cin, arr_temp_temp);\n\n    vector\u003cstring\u003e arr_temp = split_string(arr_temp_temp);\n\n    vector\u003cint\u003e arr(n);\n\n    for (int i = 0; i \u003c n; i++) {\n        int arr_item = stoi(arr_temp[i]);\n\n        arr[i] = arr_item;\n    }\n\n    int result = lilysHomework(arr);\n\n    fout \u003c\u003c result \u003c\u003c \"\\n\";\n\n    fout.close();\n\n    return 0;\n}\n\nvector\u003cstring\u003e split_string(string input_string) {\n    string::iterator new_end = unique(input_string.begin(), input_string.end(), [] (const char \u0026x, const char \u0026y) {\n        return x == y and x == ' ';\n    });\n\n    input_string.erase(new_end, input_string.end());\n\n    while (input_string[input_string.length() - 1] == ' ') {\n        input_string.pop_back();\n    }\n\n    vector\u003cstring\u003e splits;\n    char delimiter = ' ';\n\n    size_t i = 0;\n    size_t pos = input_string.find(delimiter);\n\n    while (pos != string::npos) {\n        splits.push_back(input_string.substr(i, pos - i));\n\n        i = pos + 1;\n        pos = input_string.find(delimiter, i);\n    }\n\n    splits.push_back(input_string.substr(i, min(pos, input_string.length()) - i + 1));\n\n    return splits;\n}\n","score":0.6,"language":"cpp"},{"contest":"Master","challenge":"Caesar Cipher","code":"#include \u003cbits/stdc++.h\u003e\n\nusing namespace std;\n\n// Complete the caesarCipher function below.\nstring caesarCipher(string s, int k) {\n    k=k%26;\n    for(int i=0;i\u003cs.length();i++) {\n        if(s[i] \u003e= 'a' \u0026\u0026 s[i] \u003c= 'z') {\n            s[i]+=k;\n            if(s[i] \u003e= 'a' \u0026\u0026 s[i] \u003c= 'z');\n            else\n                s[i]-=26;\n        }\n        else if(s[i] \u003e= 'A' \u0026\u0026 s[i] \u003c= 'Z') {\n            s[i]+=k;\n            if(s[i] \u003e= 'A' \u0026\u0026 s[i] \u003c= 'Z');\n            else\n                s[i]-=26;\n        }\n    }\n    return s;\n}\n\nint main()\n{\n    ofstream fout(getenv(\"OUTPUT_PATH\"));\n\n    int n;\n    cin \u003e\u003e n;\n    cin.ignore(numeric_limits\u003cstreamsize\u003e::max(), '\\n');\n\n    string s;\n    getline(cin, s);\n\n    int k;\n    cin \u003e\u003e k;\n    cin.ignore(numeric_limits\u003cstreamsize\u003e::max(), '\\n');\n\n    string result = caesarCipher(s, k);\n\n    fout \u003c\u003c result \u003c\u003c \"\\n\";\n\n    fout.close();\n\n    return 0;\n}\n","score":1.0,"language":"cpp"},{"contest":"Master","challenge":"Password Cracker","code":"#include \u003ccmath\u003e\n#include \u003ccstdio\u003e\n#include \u003cvector\u003e\n#include \u003ciostream\u003e\n#include \u003calgorithm\u003e\n#include\u003cstring\u003e\nusing namespace std;\n\nbool comprator (string a ,string b, string c) {\n    return (a.length() \u003e b.length());\n}\n\nint main() { \n    int t;\n    cin\u003e\u003et;\n    while(t--) {\n        int n;\n        cin\u003e\u003en;\n        int spaces[2010]={0};\n        vector\u003cpair\u003cint,string\u003e \u003e a(n);\n        string loginA;\n        for(int i=0;i\u003cn;i++) {\n            cin\u003e\u003ea[i].second;\n            a[i].first=a[i].second.length();\n        }\n        cin\u003e\u003eloginA;\n        sort(a.rbegin(),a.rend());\n        string chk=loginA;\n        int i=0,j=0;\n        while(i\u003cn) {\n            int x=chk.find(a[i].second);\n            if(x\u003cchk.length() \u0026\u0026 x\u003e=0) {\n                spaces[j]=x;\n                ++j;\n                for(int k=0;k\u003ca[i].second.length();k++)\n                    chk[k+x]='1';\n            }\n            else\n                ++i;\n        }\n        int size=j;\n        bool flag=true;\n        sort(spaces,spaces+size);\n        for(int i=0;i\u003cchk.length();i++)\n            if(chk[i]!='1')\n                flag=false;\n        if(flag) {\n            j=1;\n            for(int i=0;i\u003cloginA.length();i++) {\n                if(i==spaces[j] \u0026\u0026 j\u003csize) {\n                    ++j;\n                    cout\u003c\u003c\" \";\n                }\n                cout\u003c\u003cloginA[i];\n            }\n            cout\u003c\u003cendl;\n        }\n        else\n            cout\u003c\u003c\"WRONG PASSWORD\"\u003c\u003cendl;\n    }\n    return 0;\n}\n","score":0.5,"language":"cpp"},{"contest":"Master","challenge":"Mandragora Forest","code":"#include \u003cbits/stdc++.h\u003e\n#define ll long long\nusing namespace std;\n\nvector\u003cstring\u003e split_string(string);\n\n// Complete the mandragora function below.\nlong mandragora(vector\u003cll\u003e h) {\n    ll n=h.size();\n    sort(h.rbegin(),h.rend());\n    ll e,max=h[0]*n;\n    for(ll i=1;i\u003cn;i++) {\n        h[i]+=h[i-1];\n        e=h[i]*(n-i);\n        if(e\u003emax)\n            max=e;\n    }\n    return max;\n}\nint main() {\n    ofstream fout(getenv(\"OUTPUT_PATH\"));\n\n    int t;\n    cin \u003e\u003e t;\n    cin.ignore(numeric_limits\u003cstreamsize\u003e::max(), '\\n');\n\n    for (int t_itr = 0; t_itr \u003c t; t_itr++) {\n        int n;\n        cin \u003e\u003e n;\n        cin.ignore(numeric_limits\u003cstreamsize\u003e::max(), '\\n');\n\n        string H_temp_temp;\n        getline(cin, H_temp_temp);\n\n        vector\u003cstring\u003e H_temp = split_string(H_temp_temp);\n\n        vector\u003cll\u003e H(n);\n\n        for (int i = 0; i \u003c n; i++) {\n            int H_item = stoi(H_temp[i]);\n\n            H[i] = H_item;\n        }\n\n        long result = mandragora(H);\n\n        fout \u003c\u003c result \u003c\u003c \"\\n\";\n    }\n\n    fout.close();\n\n    return 0;\n}\nvector\u003cstring\u003e split_string(string input_string) {\n    string::iterator new_end = unique(input_string.begin(), input_string.end(), [] (const char \u0026x, const char \u0026y) {\n        return x == y and x == ' ';\n    });\n\n    input_string.erase(new_end, input_string.end());\n\n    while (input_string[input_string.length() - 1] == ' ') {\n        input_string.pop_back();\n    }\n\n    vector\u003cstring\u003e splits;\n    char delimiter = ' ';\n\n    size_t i = 0;\n    size_t pos = input_string.find(delimiter);\n\n    while (pos != string::npos) {\n        splits.push_back(input_string.substr(i, pos - i));\n\n        i = pos + 1;\n        pos = input_string.find(delimiter, i);\n    }\n\n    splits.push_back(input_string.substr(i, min(pos, input_string.length()) - i + 1));\n\n    return splits;\n}\n","score":1.0,"language":"cpp"},{"contest":"Master","challenge":"Lonely Integer","code":"#include \u003cbits/stdc++.h\u003e\nusing namespace std;\n\nint main() {\n    ofstream fout(getenv(\"OUTPUT_PATH\"));\n    vector\u003cbool\u003e boo(101);\n    int n,x;\n    cin\u003e\u003en;\n    while(n--) {\n        cin\u003e\u003ex;\n        boo[x]=!boo[x];\n    } \n    for(int i=0;i\u003c101;i++)\n        if(boo[i]) fout\u003c\u003ci\u003c\u003cendl;\n    fout.close();\n    return 0;\n}\n","score":1.0,"language":"cpp"},{"contest":"Master","challenge":"Lonely Integer","code":"#include \u003cbits/stdc++.h\u003e\nusing namespace std;\n\ntemplate \u003cclass type\u003e\ntype input() {\n    type x;\n    cin\u003e\u003ex;\n    return x;\n}\nint main() {\n    ofstream fout(getenv(\"OUTPUT_PATH\"));\n    int n,a=0; cin\u003e\u003en;\n    while(n--) a^=input\u003cint\u003e();\n    fout\u003c\u003ca\u003c\u003cendl;\n    fout.close();\n    return 0;\n}\n","score":1.0,"language":"cpp"},{"contest":"Master","challenge":"Sum vs XOR","code":"#include \u003cbits/stdc++.h\u003e\nusing namespace std;\nint main() {\n    ofstream fout(getenv(\"OUTPUT_PATH\"));\n    long n,result=0; cin\u003e\u003en;\n    while(n) {\n        if(!(n\u00261)) result+=1;\n        n=n\u003e\u003e1;\n    } fout\u003c\u003c(1\u003c\u003cresult)\u003c\u003cendl;\n    fout.close();\n    return 0;\n}\n","score":0.909090909091,"language":"cpp"},{"contest":"Master","challenge":"Sum vs XOR","code":"#include \u003cbits/stdc++.h\u003e\nusing namespace std;\nint main() {\n    ofstream fout(getenv(\"OUTPUT_PATH\"));\n    long n,result=0; cin\u003e\u003en;\n    while(n) {\n        if(!(n\u00261)) result+=1;\n        n=n\u003e\u003e1;\n    } fout\u003c\u003c(1L\u003c\u003cresult)\u003c\u003cendl;\n    fout.close();\n    return 0;\n}\n","score":1.0,"language":"cpp"},{"contest":"Master","challenge":"Alternating Characters ","code":"#include \u003cbits/stdc++.h\u003e\n\nusing namespace std;\n\n// Complete the alternatingCharacters function below.\nint alternatingCharacters(string s) {\n    int deletions_required=0;\n    for(int i=1;i\u003cs.length();i++) \n        if(s[i]==s[i-1]) ++deletions_required;\n    return deletions_required;\n}\nint main() {\n    ofstream fout(getenv(\"OUTPUT_PATH\"));\n    int q;\n    cin \u003e\u003e q;\n    cin.ignore(numeric_limits\u003cstreamsize\u003e::max(), '\\n');\n    for (int q_itr = 0; q_itr \u003c q; q_itr++) {\n        string s;\n        getline(cin, s);\n        int result = alternatingCharacters(s);\n        fout \u003c\u003c result \u003c\u003c \"\\n\";\n    }\n    fout.close();\n    return 0;\n}\n","score":1.0,"language":"cpp"},{"contest":"Master","challenge":"The Bomberman Game","code":"#include \u003cbits/stdc++.h\u003e\nusing namespace std;\n\nvector\u003cstring\u003e split_string(string);\nvector\u003cstring\u003e bomberMan(int n,vector\u003cstring\u003e grid) {\n    string s(grid[0].length(),'O');\n    vector\u003cstring\u003e full(grid.size(),s);\n    vector\u003cstring\u003e grid1(full),grid3(full);\n    for(int i=0;i\u003cgrid.size();i++) {\n        for(int j=0;j\u003cgrid[0].size();j++) {\n            if(grid[i][j]=='O') {\n                grid1[i][j]='.';\n                if(i+1 \u003c grid.size()) grid1[i+1][j]='.';\n                if(j+1 \u003c grid[0].size()) grid1[i][j+1]='.';\n                if(i \u003e 0) grid1[i-1][j]='.';\n                if(j \u003e 0) grid1[i][j-1]='.';\n            }\n        }\n    }\n    for(int i=0;i\u003cgrid.size();i++) {\n        for(int j=0;j\u003cgrid[0].size();j++) {\n            if(grid1[i][j]=='O') {\n                grid3[i][j]='.';\n                if(i+1 \u003c grid.size()) grid3[i+1][j]='.';\n                if(j+1 \u003c grid[0].size()) grid3[i][j+1]='.';\n                if(i \u003e 0) grid3[i-1][j]='.';\n                if(j \u003e 0) grid3[i][j-1]='.';\n            }\n        }\n    }\n    if(n==1) return grid;\n    if(n%4==3) return grid1;\n    if(n%4==1) return grid3;\n    return full;\n}\nint main() {\n    ofstream fout(getenv(\"OUTPUT_PATH\"));\n    string rcn_temp;\n    getline(cin, rcn_temp);\n    vector\u003cstring\u003e rcn = split_string(rcn_temp);\n    int r = stoi(rcn[0]);\n    int c = stoi(rcn[1]);\n    int n = stoi(rcn[2]);\n    vector\u003cstring\u003e grid(r);\n    for (int i = 0; i \u003c r; i++) {\n        string grid_item;\n        getline(cin, grid_item);\n\n        grid[i] = grid_item;\n    }\n    vector\u003cstring\u003e result = bomberMan(n, grid);\n    for (int i = 0; i \u003c result.size(); i++) {\n        fout \u003c\u003c result[i];\n        if (i != result.size() - 1) {\n            fout \u003c\u003c \"\\n\";\n        }\n    }\n    fout \u003c\u003c \"\\n\";\n    fout.close();\n    return 0;\n}\nvector\u003cstring\u003e split_string(string input_string) {\n    string::iterator new_end = unique(input_string.begin(), input_string.end(), [] (const char \u0026x, const char \u0026y) {\n        return x == y and x == ' ';\n    });\n    input_string.erase(new_end, input_string.end());\n    while (input_string[input_string.length() - 1] == ' ') {\n        input_string.pop_back();\n    }\n    vector\u003cstring\u003e splits;\n    char delimiter = ' ';\n    size_t i = 0;\n    size_t pos = input_string.find(delimiter);\n    while (pos != string::npos) {\n        splits.push_back(input_string.substr(i, pos - i));\n        i = pos + 1;\n        pos = input_string.find(delimiter, i);\n    }\n    splits.push_back(input_string.substr(i, min(pos, input_string.length()) - i + 1));\n    return splits;\n}\n","score":1.0,"language":"cpp"},{"contest":"Master","challenge":"The Bomberman Game","code":"#include \u003cbits/stdc++.h\u003e\nusing namespace std;\n\nvector\u003cstring\u003e split_string(string);\nvector\u003cstring\u003e bomberMan(int n,vector\u003cstring\u003e grid) {\n    string s(grid[0].length(),'O');\n    vector\u003cstring\u003e full(grid.size(),s);\n    vector\u003cstring\u003e grid1(full),grid3(full);\n    for(int i=0;i\u003cgrid.size();i++) {\n        for(int j=0;j\u003cgrid[0].size();j++) {\n            if(grid[i][j]=='O') {\n                grid3[i][j]='.';\n                if(i+1 \u003c grid.size()) grid3[i+1][j]='.';\n                if(j+1 \u003c grid[0].size()) grid3[i][j+1]='.';\n                if(i \u003e 0) grid3[i-1][j]='.';\n                if(j \u003e 0) grid3[i][j-1]='.';\n            }\n        }\n    }\n    for(int i=0;i\u003cgrid.size();i++) {\n        for(int j=0;j\u003cgrid[0].size();j++) {\n            if(grid3[i][j]=='O') {\n                grid1[i][j]='.';\n                if(i+1 \u003c grid.size()) grid1[i+1][j]='.';\n                if(j+1 \u003c grid[0].size()) grid1[i][j+1]='.';\n                if(i \u003e 0) grid1[i-1][j]='.';\n                if(j \u003e 0) grid1[i][j-1]='.';\n            }\n        }\n    }\n    if(n==1) return grid;\n    if(n%4==3) return grid3;\n    if(n%4==1) return grid1;\n    return full;\n}\nint main() {\n    ofstream fout(getenv(\"OUTPUT_PATH\"));\n    string rcn_temp;\n    getline(cin, rcn_temp);\n    vector\u003cstring\u003e rcn = split_string(rcn_temp);\n    int r = stoi(rcn[0]);\n    int c = stoi(rcn[1]);\n    int n = stoi(rcn[2]);\n    vector\u003cstring\u003e grid(r);\n    for (int i = 0; i \u003c r; i++) {\n        string grid_item;\n        getline(cin, grid_item);\n        grid[i] = grid_item;\n    }\n    vector\u003cstring\u003e result = bomberMan(n, grid);\n    for (int i = 0; i \u003c result.size(); i++) {\n        fout \u003c\u003c result[i];\n        if (i != result.size() - 1) {\n            fout \u003c\u003c \"\\n\";\n        }\n    }\n    fout \u003c\u003c \"\\n\";\n    fout.close();\n    return 0;\n}\nvector\u003cstring\u003e split_string(string input_string) {\n    string::iterator new_end = unique(input_string.begin(), input_string.end(), [] (const char \u0026x, const char \u0026y) {\n        return x == y and x == ' ';\n    });\n    input_string.erase(new_end, input_string.end());\n    while (input_string[input_string.length() - 1] == ' ') {\n        input_string.pop_back();\n    }\n    vector\u003cstring\u003e splits;\n    char delimiter = ' ';\n    size_t i = 0;\n    size_t pos = input_string.find(delimiter);\n    while (pos != string::npos) {\n        splits.push_back(input_string.substr(i, pos - i));\n        i = pos + 1;\n        pos = input_string.find(delimiter, i);\n    }\n    splits.push_back(input_string.substr(i, min(pos, input_string.length()) - i + 1));\n    return splits;\n}\n","score":1.0,"language":"cpp"},{"contest":"Master","challenge":"Birthday Cake Candles","code":"#include \u003ciostream\u003e\n#include \u003calgorithm\u003e\nusing namespace std;\nint main() {\n    long int n;\n    cin\u003e\u003en;\n    long int a[n];\n    long int count=1;\n    for(int i=0;i\u003cn;i++)\n        cin\u003e\u003ea[i];\n    int x=sizeof(a)/sizeof(a[0]);\n    sort(a,a+x);\n    for(int i=n-1;i\u003e=1;i--)\n        if(a[i]==a[i-1])\n            count++;\n    cout\u003c\u003ccount;\n    return 0;\n}\n","score":0.87012987013,"language":"cpp"},{"contest":"Master","challenge":"Birthday Cake Candles","code":"#include \u003ciostream\u003e\n#include \u003cvector\u003e\n#include \u003calgorithm\u003e\nusing namespace std;\nint main() {\n    int n;\n    cin\u003e\u003en;\n    vector\u003cint\u003e a(n);\n    int count=1;\n    for(int i=0;i\u003cn;i++)\n        cin\u003e\u003ea[i];\n    int x=sizeof(a)/sizeof(a[0]);\n    sort(a,a+x);\n    for(int i=n-1;i\u003e=1;i--)\n        if(a[i]==a[i-1])\n            count++;\n    cout\u003c\u003ccount;\n    return 0;\n}\n","score":0.0,"language":"cpp"},{"contest":"Master","challenge":"Birthday Cake Candles","code":"#include \u003ciostream\u003e\n#include \u003cvector\u003e\n#include \u003calgorithm\u003e\nusing namespace std;\nint main() {\n    int n;\n    cin\u003e\u003en;\n    vector\u003cint\u003e a(n);\n    int count=1;\n    for(int i=0;i\u003cn;i++)\n        cin\u003e\u003ea[i];\n    sort(a.begin(),a.end());\n    for(int i=n-1;i\u003e=1;i--)\n        if(a[i]==a[i-1])\n            count++;\n    cout\u003c\u003ccount;\n    return 0;\n}\n","score":0.87012987013,"language":"cpp"},{"contest":"Master","challenge":"Birthday Cake Candles","code":"#include \u003cbits/stdc++.h\u003e\n\nusing namespace std;\n\nint birthdayCakeCandles(int n, vector \u003cint\u003e ar) {\n    // Complete this function\n    int max=ar[0],count=0;\n    for(int i=0;i\u003cn;i++)\n    {\n        if(ar[i]\u003emax)\n        {\n            max=ar[i];\n            count=0;\n        }\n        if(ar[i]==max)\n            count+=1;\n    }\n    return count;\n}\n\nint main() {\n    int n;\n    cin \u003e\u003e n;\n    vector\u003cint\u003e ar(n);\n    for(int ar_i = 0; ar_i \u003c n; ar_i++){\n       cin \u003e\u003e ar[ar_i];\n    }\n    int result = birthdayCakeCandles(n, ar);\n    cout \u003c\u003c result \u003c\u003c endl;\n    return 0;\n}\n","score":1.0,"language":"cpp"},{"contest":"Master","challenge":"Two Characters","code":"#include \u003cbits/stdc++.h\u003e\n\nusing namespace std;\n\nstring ltrim(const string \u0026);\nstring rtrim(const string \u0026);\n\n// Complete the alternate function below.\nint alternate(string s) {\n    int max=0;\n    for(char a='a';a\u003c='z';a++) {\n        for(char b='a';b\u003c='z';b++) {\n            int count=0;\n            bool alt=true;\n            for(int i=0;i\u003cs.length();i++) {\n                if(alt \u0026\u0026 a==s[i]) {\n                    ++count;\n                    alt=false;\n                } else if(!alt \u0026\u0026 b==s[i]) {\n                    ++count;\n                    alt=true;\n                } if(count\u003emax) max=count;\n            }\n        }\n    } return max;\n}\n\nint main()\n{\n    ofstream fout(getenv(\"OUTPUT_PATH\"));\n\n    string l_temp;\n    getline(cin, l_temp);\n\n    int l = stoi(ltrim(rtrim(l_temp)));\n\n    string s;\n    getline(cin, s);\n\n    int result = alternate(s);\n\n    fout \u003c\u003c result \u003c\u003c \"\\n\";\n\n    fout.close();\n\n    return 0;\n}\n\nstring ltrim(const string \u0026str) {\n    string s(str);\n\n    s.erase(\n        s.begin(),\n        find_if(s.begin(), s.end(), not1(ptr_fun\u003cint, int\u003e(isspace)))\n    );\n\n    return s;\n}\n\nstring rtrim(const string \u0026str) {\n    string s(str);\n\n    s.erase(\n        find_if(s.rbegin(), s.rend(), not1(ptr_fun\u003cint, int\u003e(isspace))).base(),\n        s.end()\n    );\n\n    return s;\n}\n","score":0.033333333333,"language":"cpp"},{"contest":"Master","challenge":"Two Characters","code":"#include \u003cbits/stdc++.h\u003e\n\nusing namespace std;\n\nstring ltrim(const string \u0026);\nstring rtrim(const string \u0026);\n\nbool isValid(string s) {\n    for(int i=1;i\u003cs.length();i++)\n        if(s[i-1]==s[i]) return false;\n    return true;\n}\nint alternate(string s) {\n    int max=0;\n    for(char a='a';a\u003c='z';a++) {\n        for(char b=a+1;b\u003c='z';b++) {\n            string e;\n            for(int i=0;i\u003cs.length();i++)\n                if(s[i]==a || s[i]==b) e+=s[i];\n            if(isValid(e) \u0026\u0026 e.length()\u003emax) max=e.length();\n        }\n    } return max;\n}\n\nint main()\n{\n    ofstream fout(getenv(\"OUTPUT_PATH\"));\n\n    string l_temp;\n    getline(cin, l_temp);\n\n    int l = stoi(ltrim(rtrim(l_temp)));\n\n    string s;\n    getline(cin, s);\n\n    int result = alternate(s);\n\n    fout \u003c\u003c result \u003c\u003c \"\\n\";\n\n    fout.close();\n\n    return 0;\n}\n\nstring ltrim(const string \u0026str) {\n    string s(str);\n\n    s.erase(\n        s.begin(),\n        find_if(s.begin(), s.end(), not1(ptr_fun\u003cint, int\u003e(isspace)))\n    );\n\n    return s;\n}\n\nstring rtrim(const string \u0026str) {\n    string s(str);\n\n    s.erase(\n        find_if(s.rbegin(), s.rend(), not1(ptr_fun\u003cint, int\u003e(isspace))).base(),\n        s.end()\n    );\n\n    return s;\n}\n","score":0.966666666667,"language":"cpp"},{"contest":"Master","challenge":"Two Characters","code":"#include \u003cbits/stdc++.h\u003e\n\nusing namespace std;\n\nstring ltrim(const string \u0026);\nstring rtrim(const string \u0026);\n\nbool isValid(string s) {\n    for(int i=1;i\u003cs.length();i++)\n        if(s[i-1]==s[i]) return false;\n    if(s.length()==1) return false;\n    return true;\n}\nint alternate(string s) {\n    int max=0;\n    for(char a='a';a\u003c='z';a++) {\n        for(char b=a+1;b\u003c='z';b++) {\n            string e;\n            for(int i=0;i\u003cs.length();i++)\n                if(s[i]==a || s[i]==b) e+=s[i];\n            if(isValid(e) \u0026\u0026 e.length()\u003emax) max=e.length();\n        }\n    } return max;\n}\n\nint main()\n{\n    ofstream fout(getenv(\"OUTPUT_PATH\"));\n\n    string l_temp;\n    getline(cin, l_temp);\n\n    int l = stoi(ltrim(rtrim(l_temp)));\n\n    string s;\n    getline(cin, s);\n\n    int result = alternate(s);\n\n    fout \u003c\u003c result \u003c\u003c \"\\n\";\n\n    fout.close();\n\n    return 0;\n}\n\nstring ltrim(const string \u0026str) {\n    string s(str);\n\n    s.erase(\n        s.begin(),\n        find_if(s.begin(), s.end(), not1(ptr_fun\u003cint, int\u003e(isspace)))\n    );\n\n    return s;\n}\n\nstring rtrim(const string \u0026str) {\n    string s(str);\n\n    s.erase(\n        find_if(s.rbegin(), s.rend(), not1(ptr_fun\u003cint, int\u003e(isspace))).base(),\n        s.end()\n    );\n\n    return s;\n}\n","score":1.0,"language":"cpp"},{"contest":"Master","challenge":"HackerRank in a String!","code":"#include \u003cbits/stdc++.h\u003e\n\nusing namespace std;\n\n// Complete the hackerrankInString function below.\nstring hackerrankInString(string s) {\n    string search=\"hackerrank\";\n    int ind=0;\n    for(int i=0;i\u003cs.length();i++) {\n        if(s[i]==search[ind]) ++ind;\n        if(ind==search.length()) return \"YES\";\n    } return \"NO\";\n}\n\nint main()\n{\n    ofstream fout(getenv(\"OUTPUT_PATH\"));\n\n    int q;\n    cin \u003e\u003e q;\n    cin.ignore(numeric_limits\u003cstreamsize\u003e::max(), '\\n');\n\n    for (int q_itr = 0; q_itr \u003c q; q_itr++) {\n        string s;\n        getline(cin, s);\n\n        string result = hackerrankInString(s);\n\n        fout \u003c\u003c result \u003c\u003c \"\\n\";\n    }\n\n    fout.close();\n\n    return 0;\n}\n","score":1.0,"language":"cpp"},{"contest":"Master","challenge":"Pangrams","code":"#include \u003cbits/stdc++.h\u003e\nusing namespace std;\n\nstring pangrams(string s) {\n    bool present_alph[26]={};\n    for(int i=0;i\u003cs.length();i++) {\n        if('A'\u003c=s[i] \u0026\u0026 s[i]\u003c='Z')\n            present_alph[s[i]-'A']=true;\n        else present_alph[s[i]-'a']=true; \n    } for(int i=0;i\u003c26;i++)\n        if(!present_alph[i])\n            return \"not pangram\";\n    return \"pangram\";\n}\n\nint main() {\n    ofstream fout(getenv(\"OUTPUT_PATH\"));\n    string s;\n    getline(cin, s);\n    string result = pangrams(s);\n    fout \u003c\u003c result \u003c\u003c \"\\n\";\n    fout.close();\n    return 0;\n}\n","score":1.0,"language":"cpp"},{"contest":"Master","challenge":"Weighted Uniform Strings","code":"#include \u003cbits/stdc++.h\u003e\n\nusing namespace std;\n\n// Complete the weightedUniformStrings function below.\nvector\u003cstring\u003e weightedUniformStrings(string s, vector\u003cint\u003e queries) {\n    int count=1;\n    int max_uniform[26]={};\n    vector\u003cstring\u003e answers;\n    max_uniform[s[0]-'a']=1;\n    for(int i=1;i\u003cs.length();i++) {\n        if(s[i]==s[i-1]) ++count;\n        else count=1;\n        if(count\u003emax_uniform[s[i]-'a'])\n            max_uniform[s[i]-'a']=count;\n    } for(int i=0;i\u003cqueries.size();i++) {\n        for(int a=1;a\u003c=26;a++) {\n            if(queries[i]%a==0 \u0026\u0026 queries[i]/a\u003c=max_uniform[a-1]) {\n                answers.push_back(\"Yes\");\n                break;\n            }\n        } if(answers.size() != i+1)\n            answers.push_back(\"No\");\n    } return answers;\n}\n\nint main()\n{\n    ofstream fout(getenv(\"OUTPUT_PATH\"));\n\n    string s;\n    getline(cin, s);\n\n    int queries_count;\n    cin \u003e\u003e queries_count;\n    cin.ignore(numeric_limits\u003cstreamsize\u003e::max(), '\\n');\n\n    vector\u003cint\u003e queries(queries_count);\n\n    for (int i = 0; i \u003c queries_count; i++) {\n        int queries_item;\n        cin \u003e\u003e queries_item;\n        cin.ignore(numeric_limits\u003cstreamsize\u003e::max(), '\\n');\n\n        queries[i] = queries_item;\n    }\n\n    vector\u003cstring\u003e result = weightedUniformStrings(s, queries);\n\n    for (int i = 0; i \u003c result.size(); i++) {\n        fout \u003c\u003c result[i];\n\n        if (i != result.size() - 1) {\n            fout \u003c\u003c \"\\n\";\n        }\n    }\n\n    fout \u003c\u003c \"\\n\";\n\n    fout.close();\n\n    return 0;\n}\n","score":1.0,"language":"cpp"},{"contest":"Master","challenge":"Separate the Numbers","code":"#include \u003cbits/stdc++.h\u003e\nusing namespace std;\n\nbool isBeautiful(string s,long x) { string e;\n    while(e.length()\u003cs.length()) e+=to_string(x++);\n    if(s==e) return true;\n    return false;\n}\n\nvoid separateNumbers(string s) {\n    for(int a=1;a\u003c=s.length()/2;a++) {\n        int x=stoi(s.substr(0,a));\n        if(isBeautiful(s,x)) {\n            cout\u003c\u003c\"YES \"\u003c\u003cx\u003c\u003cendl;\n            return;\n        }\n    } cout\u003c\u003c\"NO\"\u003c\u003cendl;\n}\n\nint main() {\n    int q;\n    cin \u003e\u003e q;\n    cin.ignore(numeric_limits\u003cstreamsize\u003e::max(), '\\n');\n\n    for (int q_itr = 0; q_itr \u003c q; q_itr++) {\n        string s;\n        getline(cin, s);\n\n        separateNumbers(s);\n    }\n\n    return 0;\n}\n","score":0.029702970297,"language":"cpp14"},{"contest":"Master","challenge":"Separate the Numbers","code":"#include \u003cbits/stdc++.h\u003e\nusing namespace std;\n\nbool isBeautiful(string s,long x) { string e;\n    while(e.length()\u003cs.length()) e+=to_string(x++);\n    if(s==e) return true;\n    return false;\n}\n\nvoid separateNumbers(string s) {\n    for(int a=1;a\u003c=s.length()/2;a++) {\n        long x=stol(s.substr(0,a));\n        if(isBeautiful(s,x)) {\n            cout\u003c\u003c\"YES \"\u003c\u003cx\u003c\u003cendl;\n            return;\n        }\n    } cout\u003c\u003c\"NO\"\u003c\u003cendl;\n}\n\nint main() {\n    int q;\n    cin \u003e\u003e q;\n    cin.ignore(numeric_limits\u003cstreamsize\u003e::max(), '\\n');\n\n    for (int q_itr = 0; q_itr \u003c q; q_itr++) {\n        string s;\n        getline(cin, s);\n\n        separateNumbers(s);\n    }\n\n    return 0;\n}\n","score":1.0,"language":"cpp14"},{"contest":"Master","challenge":"Funny String","code":"#include \u003cbits/stdc++.h\u003e\n\nusing namespace std;\n\n// Complete the funnyString function below.\nstring funnyString(string s) {\n    int n=s.length();\n    for(int i=1;i\u003cn+1/2;i++)\n        if(abs(s[i]-s[i-1])!=abs(s[n-i-1]-s[n-i]))\n            return \"Not Funny\";\n    return \"Funny\";\n}\n\nint main()\n{\n    ofstream fout(getenv(\"OUTPUT_PATH\"));\n\n    int q;\n    cin \u003e\u003e q;\n    cin.ignore(numeric_limits\u003cstreamsize\u003e::max(), '\\n');\n\n    for (int q_itr = 0; q_itr \u003c q; q_itr++) {\n        string s;\n        getline(cin, s);\n\n        string result = funnyString(s);\n\n        fout \u003c\u003c result \u003c\u003c \"\\n\";\n    }\n\n    fout.close();\n\n    return 0;\n}\n","score":1.0,"language":"cpp14"},{"contest":"Master","challenge":"Gemstones","code":"#include \u003cbits/stdc++.h\u003e\n\nusing namespace std;\n\n// Complete the gemstones function below.\nint gemstones(vector\u003cstring\u003e arr) {\n    vector\u003cbool\u003e gem(26,true);\n    for(int i=0;i\u003carr.size();i++) {\n        bool boo[26]={};\n        for(int x=0;x\u003carr[i].length();x++)\n            boo[arr[i][x]-'a']=true;\n        for(int a=0;a\u003c26;a++)\n            gem[a]=gem[a]\u0026boo[a];\n    } int gems=0;\n    for(int a=0;a\u003c26;a++)\n        gems+=gem[a];\n    return gems;\n}\nint main() {\n    ofstream fout(getenv(\"OUTPUT_PATH\"));\n    int n;\n    cin \u003e\u003e n;\n    cin.ignore(numeric_limits\u003cstreamsize\u003e::max(), '\\n');\n    vector\u003cstring\u003e arr(n);\n    for (int i = 0; i \u003c n; i++) {\n        string arr_item;\n        getline(cin, arr_item);\n        arr[i] = arr_item;\n    }\n    int result = gemstones(arr);\n    fout \u003c\u003c result \u003c\u003c \"\\n\";\n    fout.close();\n    return 0;\n}\n","score":1.0,"language":"cpp14"},{"contest":"Master","challenge":"Beautiful Binary String","code":"#include \u003cbits/stdc++.h\u003e\n\nusing namespace std;\n\n// Complete the beautifulBinaryString function below.\nint beautifulBinaryString(string b) {\n    int count=0;\n    for(int i=2;i\u003cb.length();i++) {\n        if(b[i-2]=='0' \u0026\u0026 b[i-1]=='1' \u0026\u0026 b[i]=='0') {\n            b[i]='1';\n            ++count;\n        }\n    } return count;\n}\n\nint main()\n{\n    ofstream fout(getenv(\"OUTPUT_PATH\"));\n\n    int n;\n    cin \u003e\u003e n;\n    cin.ignore(numeric_limits\u003cstreamsize\u003e::max(), '\\n');\n\n    string b;\n    getline(cin, b);\n\n    int result = beautifulBinaryString(b);\n\n    fout \u003c\u003c result \u003c\u003c \"\\n\";\n\n    fout.close();\n\n    return 0;\n}\n","score":1.0,"language":"cpp14"},{"contest":"Master","challenge":"The Love-Letter Mystery","code":"#include \u003cbits/stdc++.h\u003e\n\nusing namespace std;\n\n// Complete the theLoveLetterMystery function below.\nint theLoveLetterMystery(string s) {\n    int count=0,n=s.length();\n    for(int i=0;i\u003cn/2;i++)\n        count+=abs(s[i]-s[n-i-1]);\n    return count;\n}\n\nint main()\n{\n    ofstream fout(getenv(\"OUTPUT_PATH\"));\n\n    int q;\n    cin \u003e\u003e q;\n    cin.ignore(numeric_limits\u003cstreamsize\u003e::max(), '\\n');\n\n    for (int q_itr = 0; q_itr \u003c q; q_itr++) {\n        string s;\n        getline(cin, s);\n\n        int result = theLoveLetterMystery(s);\n\n        fout \u003c\u003c result \u003c\u003c \"\\n\";\n    }\n\n    fout.close();\n\n    return 0;\n}\n","score":1.0,"language":"cpp14"},{"contest":"Master","challenge":"Palindrome Index","code":"#include \u003cbits/stdc++.h\u003e\nusing namespace std;\n\nint isPalindrome(string s) {\n    int n=s.length();\n    for(int i=0;i\u003cn/2;i++)\n        if(s[i]!=s[n-i-1])\n            return i;\n    return -1;\n}\nint palindromeIndex(string s1) {\n    string s2=s1;\n    int n=s1.length();\n    int ind=isPalindrome(s1);\n    if(ind\u003c0) return -1;\n    s1.erase(ind,1);\n    s2.erase(n-1-ind,1);\n    int ind1=isPalindrome(s1);\n    int ind2=isPalindrome(s2);\n    if(ind1\u003c0) return ind;\n    else if(ind2\u003c0) return n-1-ind;\n    else return -1;\n}\n\nint main() {\n    ofstream fout(getenv(\"OUTPUT_PATH\"));\n\n    int q;\n    cin \u003e\u003e q;\n    cin.ignore(numeric_limits\u003cstreamsize\u003e::max(), '\\n');\n\n    for (int q_itr = 0; q_itr \u003c q; q_itr++) {\n        string s;\n        getline(cin, s);\n\n        int result = palindromeIndex(s);\n\n        fout \u003c\u003c result \u003c\u003c \"\\n\";\n    }\n\n    fout.close();\n\n    return 0;\n}\n","score":1.0,"language":"cpp14"},{"contest":"Master","challenge":"Between Two Sets","code":"#include \u003cbits/stdc++.h\u003e\n\nusing namespace std;\nint max(int ar[],int size) {\n    int max=ar[0];\n    for(int i=1;i\u003csize;i++)\n        if(ar[i]\u003emax) max=ar[i];\n    return max;\n}\nint min(int ar[],int size) {\n    int min=ar[0];\n    for(int i=1;i\u003csize;i++)\n        if(ar[i]\u003cmin) min=ar[i];\n    return min;\n}\nbool condition1(int ar[],int size,int x) {\n    for(int i=0;i\u003csize;i++)\n        if(x%ar[i] != 0) return false;\n    return true;\n}\nbool condition2(int ar[],int size,int x) {\n    for(int i=0;i\u003csize;i++)\n        if(ar[i]%x != 0) return false;\n    return true;\n}\nint main() {\n    int m,n;\n    cin\u003e\u003en\u003e\u003em;\n    int a[n],b[m];\n    for(int i=0;i\u003cn;i++) cin\u003e\u003ea[i];\n    for(int j=0;j\u003cm;j++) cin\u003e\u003eb[j];\n    int max_a=max(a,n);\n    int min_b=min(b,m);\n    int count=0;\n    for(int i=max_a;i\u003c=min_b;i++) {\n        if(condition1(a,n,i) \u0026\u0026 condition2(b,m,i))\n            ++count;\n    } cout\u003c\u003ccount\u003c\u003cendl;\n    return 0;\n}\n","score":1.0,"language":"cpp14"},{"contest":"Master","challenge":"Anagram","code":"#include \u003cbits/stdc++.h\u003e\n\nusing namespace std;\n\n// Complete the anagram function below.\nint anagram(string s) {\n    int m=0,n=s.length();\n    if(n%2) return -1;\n    int s1[26]={},s2[26]={};\n    for(int i=0;i\u003cn/2;i++) {\n        ++s1[s[i]-'a'];\n        ++s2[s[n/2+i]-'a'];\n    } for(int i=0;i\u003c26;i++)\n        m+=min(s1[i],s2[i]);\n    return n/2-m;\n}\n\nint main() {\n    ofstream fout(getenv(\"OUTPUT_PATH\"));\n\n    int q;\n    cin \u003e\u003e q;\n    cin.ignore(numeric_limits\u003cstreamsize\u003e::max(), '\\n');\n\n    for (int q_itr = 0; q_itr \u003c q; q_itr++) {\n        string s;\n        getline(cin, s);\n\n        int result = anagram(s);\n\n        fout \u003c\u003c result \u003c\u003c \"\\n\";\n    }\n\n    fout.close();\n\n    return 0;\n}\n","score":1.0,"language":"cpp14"},{"contest":"Master","challenge":"Making Anagrams","code":"#include \u003cbits/stdc++.h\u003e\n\nusing namespace std;\n\n// Complete the makingAnagrams function below.\nint makingAnagrams(string s1, string s2) {\n    int m=0,c1[26]={},c2[26]={};\n    for(int i=0;i\u003cs1.length();i++) ++c1[s1[i]-'a'];\n    for(int i=0;i\u003cs2.length();i++) ++c2[s2[i]-'a'];\n    for(int i=0;i\u003c26;i++) m+=min(c1[i],c2[i]);\n    return s1.length()+s2.length()-2*m;\n}\n\nint main()\n{\n    ofstream fout(getenv(\"OUTPUT_PATH\"));\n\n    string s1;\n    getline(cin, s1);\n\n    string s2;\n    getline(cin, s2);\n\n    int result = makingAnagrams(s1, s2);\n\n    fout \u003c\u003c result \u003c\u003c \"\\n\";\n\n    fout.close();\n\n    return 0;\n}\n","score":1.0,"language":"cpp14"},{"contest":"Master","challenge":"Game of Thrones - I","code":"#include \u003cbits/stdc++.h\u003e\n\nusing namespace std;\n\n// Complete the gameOfThrones function below.\nstring gameOfThrones(string s) {\n    int fre[26]={}; int cnt_nt_even=0;\n    for(int i=0;i\u003cs.length();i++) fre[s[i]-'a']++;\n    for(int i=0;i\u003c26;i++) cnt_nt_even+=(fre[i]%2);\n    if(cnt_nt_even\u003c2) return \"YES\";\n    else return \"NO\";\n}\n\nint main()\n{\n    ofstream fout(getenv(\"OUTPUT_PATH\"));\n\n    string s;\n    getline(cin, s);\n\n    string result = gameOfThrones(s);\n\n    fout \u003c\u003c result \u003c\u003c \"\\n\";\n\n    fout.close();\n\n    return 0;\n}\n","score":1.0,"language":"cpp14"},{"contest":"Master","challenge":"String Construction ","code":"#include \u003cbits/stdc++.h\u003e\n\nusing namespace std;\n\n// Complete the stringConstruction function below.\nint stringConstruction(string s) {\n    int d=0;bool c1[26]={};\n    for(int i=0;i\u003cs.length();i++) c1[s[i]-'a']=true;\n    for(int i=0;i\u003c26;i++) d+=c1[i];\n    return d;\n}\n\nint main()\n{\n    ofstream fout(getenv(\"OUTPUT_PATH\"));\n\n    int q;\n    cin \u003e\u003e q;\n    cin.ignore(numeric_limits\u003cstreamsize\u003e::max(), '\\n');\n\n    for (int q_itr = 0; q_itr \u003c q; q_itr++) {\n        string s;\n        getline(cin, s);\n\n        int result = stringConstruction(s);\n\n        fout \u003c\u003c result \u003c\u003c \"\\n\";\n    }\n\n    fout.close();\n\n    return 0;\n}\n","score":1.0,"language":"cpp14"},{"contest":"Master","challenge":"Insertion Sort - Part 2","code":"#include \u003cbits/stdc++.h\u003e\nusing namespace std;\n\nvector\u003cstring\u003e split_string(string);\n\nvoid print(vector\u003cint\u003e arr) {\n    for(int i=0;i\u003carr.size();i++)\n        cout\u003c\u003carr[i]\u003c\u003c\" \";\n    cout\u003c\u003cendl;\n}\nvoid insertionSort2(vector\u003cint\u003e arr) {\n    for(int i=1;i\u003carr.size();i++) {\n        if(arr[i]\u003carr[i-1]) {\n            int temp=arr[i];\n            int j=i-1;\n            while(arr[j]\u003etemp) {\n                arr[j+1]=arr[j];\n                j--;\n            } arr[j+1]=temp;\n        } print(arr);\n    }\n}\nint main() {\n    int n;\n    cin \u003e\u003e n;\n    cin.ignore(numeric_limits\u003cstreamsize\u003e::max(), '\\n');\n\n    string arr_temp_temp;\n    getline(cin, arr_temp_temp);\n\n    vector\u003cstring\u003e arr_temp = split_string(arr_temp_temp);\n\n    vector\u003cint\u003e arr(n);\n\n    for (int i = 0; i \u003c n; i++) {\n        int arr_item = stoi(arr_temp[i]);\n\n        arr[i] = arr_item;\n    }\n\n    insertionSort2(arr);\n\n    return 0;\n}\nvector\u003cstring\u003e split_string(string input_string) {\n    string::iterator new_end = unique(input_string.begin(), input_string.end(), [] (const char \u0026x, const char \u0026y) {\n        return x == y and x == ' ';\n    });\n\n    input_string.erase(new_end, input_string.end());\n\n    while (input_string[input_string.length() - 1] == ' ') {\n        input_string.pop_back();\n    }\n\n    vector\u003cstring\u003e splits;\n    char delimiter = ' ';\n\n    size_t i = 0;\n    size_t pos = input_string.find(delimiter);\n\n    while (pos != string::npos) {\n        splits.push_back(input_string.substr(i, pos - i));\n\n        i = pos + 1;\n        pos = input_string.find(delimiter, i);\n    }\n\n    splits.push_back(input_string.substr(i, min(pos, input_string.length()) - i + 1));\n\n    return splits;\n}\n","score":1.0,"language":"cpp14"},{"contest":"Master","challenge":"Correctness and the Loop Invariant","code":"#include \u003cstdio.h\u003e\n#include \u003cstring.h\u003e\n#include \u003cmath.h\u003e\n#include \u003cstdlib.h\u003e\n#include \u003cassert.h\u003e\n\nvoid insertionSort(int N, int arr[]) {\n    int i,j;\n    int value;\n    for(i=1;i\u003cN;i++)\n    {\n        value=arr[i];\n        j=i-1;\n        while(j\u003e=0 \u0026\u0026 value\u003carr[j])\n        {\n            arr[j+1]=arr[j];\n            j=j-1;\n        }\n        arr[j+1]=value;\n    }\n    for(j=0;j\u003cN;j++)\n    {\n        printf(\"%d\",arr[j]);\n        printf(\" \");\n    }\n}\nint main(void) {\n\n    int N;\n    scanf(\"%d\", \u0026N);\n    int arr[N], i;\n    for(i = 0; i \u003c N; i++) {\n        scanf(\"%d\", \u0026arr[i]);\n    }\n\n    insertionSort(N, arr);\n\n    return 0;\n}\n\n","score":1.0,"language":"cpp"}],"teams":[],"contest_participations":[{"jobs_consent":null,"contest":"Master"},{"jobs_consent":null,"contest":"Owasptu_Decipher"},{"jobs_consent":null,"contest":"Codegolf"},{"jobs_consent":null,"contest":"Code Golf "},{"jobs_consent":null,"contest":"Coding Buffet 1"},{"jobs_consent":null,"contest":"Coding Buffet 1"},{"jobs_consent":null,"contest":"CODE REACTION"},{"jobs_consent":null,"contest":"switch-coding-2"},{"jobs_consent":null,"contest":"Owasp_code_arena"},{"jobs_consent":null,"contest":"GS Codesprint 2018"},{"jobs_consent":null,"contest":"Week of Code 36"},{"jobs_consent":null,"contest":"Week of Code 36"},{"jobs_consent":null,"contest":"ProjectEuler+"},{"jobs_consent":null,"contest":"iet_codingcombat"},{"jobs_consent":null,"contest":"iet_codingcombat"},{"jobs_consent":null,"contest":"Game of Codes 2.0"},{"jobs_consent":true,"contest":"University CodeSprint 4"},{"jobs_consent":null,"contest":"101 Hack 53"},{"jobs_consent":null,"contest":"HourRank 27"},{"jobs_consent":null,"contest":"HourRank 27"},{"jobs_consent":null,"contest":"Mock ICPC"},{"jobs_consent":null,"contest":"GameOfCodes II"},{"jobs_consent":null,"contest":"Game of Codes II - 1st Year"},{"jobs_consent":null,"contest":"Week of Code 35"},{"jobs_consent":null,"contest":"World CodeSprint 13"},{"jobs_consent":null,"contest":"HourRank 28"},{"jobs_consent":null,"contest":"101 Hack 54"},{"jobs_consent":null,"contest":"Week of Code 37"},{"jobs_consent":null,"contest":"Week of Code 38"},{"jobs_consent":null,"contest":"Week of Code 38"},{"jobs_consent":null,"contest":"101 Hack 55"},{"jobs_consent":null,"contest":"Game of Codes 2017"},{"jobs_consent":null,"contest":"Code Battle"},{"jobs_consent":null,"contest":"CodeSprint India 2014 Qualification Round 2"},{"jobs_consent":null,"contest":"HourRank 29"},{"jobs_consent":null,"contest":"Moody's Analytics 2018 University CodeSprint"},{"jobs_consent":true,"contest":"University Codesprint 5"},{"jobs_consent":null,"contest":"holaOWASP!!!"},{"jobs_consent":null,"contest":"holaOWASP!!!"},{"jobs_consent":null,"contest":"Co-Decode"},{"jobs_consent":null,"contest":"code-marathon-sat18"},{"jobs_consent":null,"contest":"preview dummy contest"},{"jobs_consent":null,"contest":"R3V3R5E C0D1NG"},{"jobs_consent":null,"contest":"T1M30UT"},{"jobs_consent":null,"contest":"THE ENDGAME"},{"jobs_consent":null,"contest":"THE ENDGAME"},{"jobs_consent":null,"contest":"My private contest"},{"jobs_consent":null,"contest":"Raj's Private Contest"}],"forum_comments":[{"contest":"GameOfCodes II","challenge":"Paper Game","description":"yeah +1 please give a sample test case..........","upvotes":0,"downvotes":0},{"contest":"GameOfCodes II","challenge":"Paper Game","description":"and 7 papers doesnt amke any sense , i mean the game can b played only on one paper, and if a paper is cut into two which piece is discarded and which one is used to continue the game, PLEASE EXPLAIN!!!!!!!!!","upvotes":1,"downvotes":0},{"contest":"Master","challenge":"Sequence Equation","description":"**A simple, small and robust c++ solution.**\n\n```\nvector\u003cint\u003e permutationEquation(vector\u003cint\u003e p)\n{\n    int size=p.size();\n    vector\u003cint\u003e y(size);\n    loop(i,size)\n        y[p[p[i]-1]-1]=i+1;\n    return y;\n}\n```","upvotes":0,"downvotes":0},{"contest":"Master","challenge":"Army Game","description":"***One liner for c++***\n\n```\nint gameWithCells(int n, int m) {\n    return ceil(n/2.0)*ceil(m/2.0);\n}\n```","upvotes":3,"downvotes":0},{"contest":"Master","challenge":"Queen's Attack II","description":"**Smallest c++ code with just a single loop** *(after hours of rewriting it and reading comments):*\n```\nint queensAttack(int n, int k, int r_q, int c_q, vector\u003cvector\u003cint\u003e\u003e ob) {\n   int h_start=0,h_end=n+1,v_start=0,v_end=n+1,d1_start=max(r_q-c_q,0),d1_end=n+1-max(c_q-r_q,0),d2_start=max(0,r_q+c_q-n-1),d2_end=min(n+1,r_q+c_q);\n   for(int i=0;i\u003ck;i++) {\n       if(ob[i][0]==r_q \u0026\u0026 ob[i][1]\u003cc_q \u0026\u0026 h_start\u003cob[i][1]) h_start=ob[i][1];\n       if(ob[i][0]==r_q \u0026\u0026 ob[i][1]\u003ec_q \u0026\u0026 h_end\u003eob[i][1]) h_end=ob[i][1];\n       if(ob[i][1]==c_q \u0026\u0026 ob[i][0]\u003cr_q \u0026\u0026 v_start\u003cob[i][0]) v_start=ob[i][0];\n       if(ob[i][1]==c_q \u0026\u0026 ob[i][0]\u003er_q \u0026\u0026 v_end\u003eob[i][0]) v_end=ob[i][0];\n       if(abs(r_q-ob[i][0])==abs(c_q-ob[i][1])) {\n           if(ob[i][0]\u003cr_q \u0026\u0026 ob[i][1]\u003cc_q \u0026\u0026 d1_start\u003cob[i][0]) d1_start=ob[i][0];\n           if(ob[i][0]\u003er_q \u0026\u0026 ob[i][1]\u003ec_q \u0026\u0026 d1_end\u003eob[i][0]) d1_end=ob[i][0];\n           if(ob[i][0]\u003cr_q \u0026\u0026 ob[i][1]\u003ec_q \u0026\u0026 d2_start\u003cob[i][0]) d2_start=ob[i][0];\n           if(ob[i][0]\u003er_q \u0026\u0026 ob[i][1]\u003cc_q \u0026\u0026 d2_end\u003eob[i][0]) d2_end=ob[i][0];\n       }\n    }\n    return h_end-h_start-2+v_end-v_start-2+d1_end-d1_start-2+d2_end-d2_start-2;\n}\n```","upvotes":0,"downvotes":0},{"contest":"Master","challenge":"Queen's Attack II","description":"**Smallest C++ code** *(after hours of rewriting it and reading comments):*\n```\nint queensAtt(int n,int k,int r_q,int c_q,vector\u003cvector\u003cint\u003e\u003e ob) {\n    int h_start=0,h_end=n+1,v_start=0,v_end=n+1;\n    int d1_start=max(r_q-c_q,0),d1_end=n+1-max(c_q-r_q,0);\n    int d2_start=max(0,r_q+c_q-n-1),d2_end=min(n+1,r_q+c_q);\n    for(int i=0;i\u003ck;i++) {\n        if(ob[i][0]==r_q \u0026\u0026 ob[i][1]\u003cc_q \u0026\u0026 h_start\u003cob[i][1])\n            h_start=ob[i][1];\n        if(ob[i][0]==r_q \u0026\u0026 ob[i][1]\u003ec_q \u0026\u0026 h_end\u003eob[i][1])\n            h_end=ob[i][1];\n        if(ob[i][1]==c_q \u0026\u0026 ob[i][0]\u003cr_q \u0026\u0026 v_start\u003cob[i][0])\n            v_start=ob[i][0];\n        if(ob[i][1]==c_q \u0026\u0026 ob[i][0]\u003er_q \u0026\u0026 v_end\u003eob[i][0])\n            v_end=ob[i][0];\n        if(abs(r_q-ob[i][0])==abs(c_q-ob[i][1])) {\n            if(ob[i][0]\u003cr_q \u0026\u0026 ob[i][1]\u003cc_q \u0026\u0026 d1_start\u003cob[i][0])\n                d1_start=ob[i][0];\n            if(ob[i][0]\u003er_q \u0026\u0026 ob[i][1]\u003ec_q \u0026\u0026 d1_end\u003eob[i][0])\n                d1_end=ob[i][0];\n            if(ob[i][0]\u003cr_q \u0026\u0026 ob[i][1]\u003ec_q \u0026\u0026 d2_start\u003cob[i][0])\n                d2_start=ob[i][0];\n            if(ob[i][0]\u003er_q \u0026\u0026 ob[i][1]\u003cc_q \u0026\u0026 d2_end\u003eob[i][0])\n                d2_end=ob[i][0];\n        }\n    }\n    int h = h_end-h_start-2;\n    int v = v_end-v_start-2;\n    int d1= d1_end-d1_start-2;\n    int d2= d2_end-d2_start-2;\n    return h + v + d1 + d2;\n}\n```","upvotes":0,"downvotes":0},{"contest":"Master","challenge":"Bigger is Greater","description":"***A very simple recursive algorithm in c++*** \n```\n#include \u003cbits/stdc++.h\u003e\n\nusing namespace std;\n\n// Complete the biggerIsGreater function below.\nbool biggerIsGreater(string \u0026w,int i=0) {\n    if(w.length()==i-1)\n        return false;\n    if(biggerIsGreater(w,i+1))\n        return true;\n    else {\n        for(int j=w.length()-1;j\u003ei;j--) {\n            if(w[j]\u003ew[i]) {\n                swap(w[j],w[i]);\n                sort(w.begin()+i+1,w.end());\n                return true;\n            }\n        }\n    }\n    return false;\n}\nint main() {\n    ofstream fout(getenv(\"OUTPUT_PATH\"));\n    int T;\n    cin \u003e\u003e T;\n    cin.ignore(numeric_limits\u003cstreamsize\u003e::max(), '\\n');\n    for (int T_itr = 0; T_itr \u003c T; T_itr++) {\n        string w;\n        getline(cin, w);\n        if(biggerIsGreater(w))\n            fout \u003c\u003c w \u003c\u003c \"\\n\";\n        else\n            fout \u003c\u003c \"no answer\" \u003c\u003c \"\\n\";\n    }\n    fout.close();\n    return 0;\n}\n```","upvotes":0,"downvotes":0},{"contest":"Master","challenge":"The Time in Words","description":"***The just one if-else code (c++) ***\n```\n#include \u003cbits/stdc++.h\u003e\nusing namespace std;\n\nstring mins[] = {\n    \"o' clock\",\n    \"one minute\",\n    \"two minutes\",\n    \"three minutes\",\n    \"four minutes\",\n    \"five minutes\",\n    \"six minutes\",\n    \"seven minutes\",\n    \"eight minutes\",\n    \"nine minutes\",\n    \"ten minutes\",\n    \"eleven minutes\",\n    \"twelve minutes\",\n    \"thirteen minutes\",\n    \"fourteen minutes\",\n    \"quarter\",\n    \"sixteen minutes\",\n    \"seventeen minutes\",\n    \"eighteen minutes\",\n    \"nineteen minutes\",\n    \"twenty minutes\",\n    \"twenty one minutes\",\n    \"twenty two minutes\",\n    \"twenty three minutes\",\n    \"twenty four minutes\",\n    \"twenty five minutes\",\n    \"twenty six minutes\",\n    \"twenty seven minutes\",\n    \"twenty eight minutes\",\n    \"twenty nine minutes\",\n    \"half\"\n};\nstring hours[] = {\n    \"\",      \"one\",   \"two\",  \"three\", \"four\",   \"five\",  \"six\",\n    \"seven\", \"eight\", \"nine\", \"ten\",   \"eleven\", \"twelve\"\n};\nstring timeInWords(int h, int m) {\n    if(m==0) return hours[h]+\" \"+mins[m];\n    else if(m\u003c=30) return mins[m]+\" past \"+hours[h];\n    else return mins[60-m]+\" to \"+hours[h+1];\n}\nint main() {\n    ofstream fout(getenv(\"OUTPUT_PATH\"));\n    int h;\n    cin \u003e\u003e h;\n    cin.ignore(numeric_limits\u003cstreamsize\u003e::max(), '\\n');\n    int m;\n    cin \u003e\u003e m;\n    cin.ignore(numeric_limits\u003cstreamsize\u003e::max(), '\\n');\n    string result = timeInWords(h, m);\n    fout \u003c\u003c result \u003c\u003c \"\\n\";\n    fout.close();\n    return 0;\n}\n```","upvotes":1,"downvotes":0},{"contest":"Master","challenge":"Weighted Uniform Strings","description":"**C++ code without hashing all the possible answers beforehand (i.e. without using dictionary or map or bool array)**\n```\nvector\u003cstring\u003e weightedUniformStrings(string s, vector\u003cint\u003e queries) {\n    int count=1;\n    int max_uniform[26]={};\n    vector\u003cstring\u003e answers;\n    max_uniform[s[0]-'a']=1;\n    for(int i=1;i\u003cs.length();i++) {\n        if(s[i]==s[i-1]) ++count;\n        else count=1;\n        if(count\u003emax_uniform[s[i]-'a'])\n            max_uniform[s[i]-'a']=count;\n    } for(int i=0;i\u003cqueries.size();i++) {\n        for(int a=1;a\u003c=26;a++) {\n            if(queries[i]%a==0 \u0026\u0026 queries[i]/a\u003c=max_uniform[a-1]){\n                answers.push_back(\"Yes\");\n                break;\n            }\n        } if(answers.size() != i+1)\n            answers.push_back(\"No\");\n    } return answers;\n}\n```","upvotes":0,"downvotes":0},{"contest":"Master","challenge":"Separate the Numbers","description":"**Probably the smallest C++ code ...**\n```\n#include \u003cbits/stdc++.h\u003e\nusing namespace std;\n\nbool isBeautiful(string s,long x) { string e;\n    while(e.length()\u003cs.length()) e+=to_string(x++);\n    if(s==e) return true;\n    return false;\n}\nvoid separateNumbers(string s) {\n    for(int a=1;a\u003c=s.length()/2;a++) {\n        long x=stol(s.substr(0,a));\n        if(isBeautiful(s,x)) {\n            cout\u003c\u003c\"YES \"\u003c\u003cx\u003c\u003cendl;\n            return;\n        }\n    } cout\u003c\u003c\"NO\"\u003c\u003cendl;\n}\nint main() {\n    int q; cin \u003e\u003e q;\n    cin.ignore(numeric_limits\u003cstreamsize\u003e::max(),'\\n');\n    for (int q_itr = 0; q_itr \u003c q; q_itr++) {\n        string s;\n        getline(cin, s);\n        separateNumbers(s);\n    } return 0;\n}\n```","upvotes":0,"downvotes":0}],"all_ratings":[{"overall_rank":149962,"new_rating":1010.27,"contest_rank":12069,"contest":"Week of Code 36"},{"overall_rank":null,"new_rating":1008.6,"contest_rank":12069,"contest":"Week of Code 36"},{"overall_rank":75855,"new_rating":1460.27,"contest_rank":1896,"contest":"University CodeSprint 4"},{"overall_rank":null,"new_rating":1458.6,"contest_rank":1896,"contest":"University CodeSprint 4"},{"overall_rank":34327,"new_rating":1671.51,"contest_rank":2126,"contest":"Week of Code 38"},{"overall_rank":null,"new_rating":1671.05,"contest_rank":2126,"contest":"Week of Code 38"},{"overall_rank":17164,"new_rating":1815.27,"contest_rank":847,"contest":"University Codesprint 5"},{"overall_rank":null,"new_rating":1815.06,"contest_rank":847,"contest":"University Codesprint 5"}],"contest_medals":[{"track":"Algorithms","contest":"University Codesprint 5","medal":"bronze"}],"survey_results":[],"messages_sent":[{"receiver":"Rishab100","message":{"id":587384,"sender_id":3181793,"receiver_id":1296418,"message":"abhishek goyal","message_thread_id":102659,"created_at":"2017-11-03T12:40:24.000Z","updated_at":"2017-11-04T05:55:41.000Z","status":1}},{"receiver":"Rishab100","message":{"id":587385,"sender_id":3181793,"receiver_id":1296418,"message":"\u003ca href=\"mailto:abhishek252167@gmail.com\"\u003eabhishek252167@gmail.com\u003c/a\u003e","message_thread_id":102659,"created_at":"2017-11-03T12:40:29.000Z","updated_at":"2017-11-04T05:55:41.000Z","status":1}},{"receiver":"Rishab100","message":{"id":587386,"sender_id":3181793,"receiver_id":1296418,"message":"101715006","message_thread_id":102659,"created_at":"2017-11-03T12:40:39.000Z","updated_at":"2017-11-04T05:55:41.000Z","status":1}},{"receiver":"Rishab100","message":{"id":587387,"sender_id":3181793,"receiver_id":1296418,"message":"1st year","message_thread_id":102659,"created_at":"2017-11-03T12:41:06.000Z","updated_at":"2017-11-04T05:55:40.000Z","status":1}},{"receiver":"Rishab100","message":{"id":587388,"sender_id":3181793,"receiver_id":1296418,"message":"Enc branch","message_thread_id":102659,"created_at":"2017-11-03T12:41:25.000Z","updated_at":"2017-11-04T05:55:40.000Z","status":1}},{"receiver":"talktoanchit","message":{"id":1376932,"sender_id":3181793,"receiver_id":6238250,"message":"haan","message_thread_id":345228,"created_at":"2019-05-29T10:20:03.000Z","updated_at":"2019-05-31T14:20:33.000Z","status":1}},{"receiver":"talktoanchit","message":{"id":1376933,"sender_id":3181793,"receiver_id":6238250,"message":"bol","message_thread_id":345228,"created_at":"2019-05-29T10:20:06.000Z","updated_at":"2019-05-31T14:20:33.000Z","status":1}},{"receiver":"talktoanchit","message":{"id":1377430,"sender_id":3181793,"receiver_id":6238250,"message":"\u003ca href=\"https://www.hackerrank.com/challenges/magic-square-forming/problem\"\u003ehttps://www.hackerrank.com/challenges/magic-square-forming/problem\u003c/a\u003e","message_thread_id":345228,"created_at":"2019-05-31T16:28:01.000Z","updated_at":"2019-05-31T18:55:47.000Z","status":1}},{"receiver":"talktoanchit","message":{"id":1377431,"sender_id":3181793,"receiver_id":6238250,"message":"ye?","message_thread_id":345228,"created_at":"2019-05-31T16:28:08.000Z","updated_at":"2019-05-31T18:55:47.000Z","status":1}},{"receiver":"talktoanchit","message":{"id":1377432,"sender_id":3181793,"receiver_id":6238250,"message":"yha kya chat kr rha","message_thread_id":345228,"created_at":"2019-05-31T16:28:21.000Z","updated_at":"2019-05-31T18:55:47.000Z","status":1}},{"receiver":"talktoanchit","message":{"id":1377433,"sender_id":3181793,"receiver_id":6238250,"message":"whatsapp pr krle","message_thread_id":345228,"created_at":"2019-05-31T16:28:25.000Z","updated_at":"2019-05-31T18:55:47.000Z","status":1}},{"receiver":"talktoanchit","message":{"id":1377434,"sender_id":3181793,"receiver_id":6238250,"message":"#include \u0026lt;bits/stdc++.h\u0026gt;\n\nusing namespace std;\n\nint formingMagicSquare(vector \u0026lt; vector\u0026lt;int\u0026gt; \u0026gt; s)\n{\n    // Complete this function\n    int a[3][3]={8,1,6,3,5,7,4,9,2},sum[8]={0,0,0,0,0,0,0,0};\n    int i,j,k,min;\n    for(k=0;k\u0026lt;8;k++)\n    {\n        if(k==4)\n        {\n            //mirror array\n            for(int i=0;i\u0026lt;3;i++)\n            {\n                a[i][0]=a[i][0]+a[i][2];\n                a[i][2]=a[i][0]-a[i][2];\n                a[i][0]=a[i][0]-a[i][2];\n            }\n        }\n        else\n        {\n            //rotate array\n            int temp=a[0][0]; a[0][0]=a[2][0]; a[2][0]=a[2][2]; a[2][2]=a[0][2]; a[0][2]=temp;\n            temp=a[0][1]; a[0][1]=a[1][0]; a[1][0]=a[2][1]; a[2][1]=a[1][2]; a[1][2]=temp;\n        }\n        for(i=0;i\u0026lt;3;i++)\n            for(j=0;j\u0026lt;3;j++)\n                sum[k]+=abs(a[i][j]-s[i][j]);\n    }\n    min=sum[0];\n    for(k=1;k\u0026lt;8;k++)\n        if(min\u0026gt;sum[k])\n            min=sum[k];\n    return min;\n}","message_thread_id":345228,"created_at":"2019-05-31T16:29:58.000Z","updated_at":"2019-05-31T18:55:47.000Z","status":1}},{"receiver":"talktoanchit","message":{"id":1377435,"sender_id":3181793,"receiver_id":6238250,"message":"hn ye kia hua ha mene","message_thread_id":345228,"created_at":"2019-05-31T16:30:01.000Z","updated_at":"2019-05-31T18:55:47.000Z","status":1}},{"receiver":"talktoanchit","message":{"id":1377436,"sender_id":3181793,"receiver_id":6238250,"message":"int main() {\n    vector\u0026lt; vector\u0026lt;int\u0026gt; \u0026gt; s(3,vector\u0026lt;int\u0026gt;(3));\n    for(int s_i = 0;s_i \u0026lt; 3;s_i++){\n       for(int s_j = 0;s_j \u0026lt; 3;s_j++){\n          cin \u0026gt;\u0026gt; s[s_i][s_j];\n       }\n    }\n    int result = formingMagicSquare(s);\n    cout \u0026lt;\u0026lt; result \u0026lt;\u0026lt; endl;\n    return 0;\n}","message_thread_id":345228,"created_at":"2019-05-31T16:30:14.000Z","updated_at":"2019-05-31T18:55:47.000Z","status":1}}],"run_codes":[],"contests_created":[{"name":"R3V3R5E C0D1NG","challenge_names":["R3V3R5E C0D1NG 1","R3V3R5E C0D1NG 2","R3V3R5E C0D1NG 3","R3V3R5E C0D1NG 4","R3V3R5E C0D1NG 5"]},{"name":"THE ENDGAME","challenge_names":["Maira's birthday challange","Buying Chocolates 1","The High Triangle","Save Abhinav from detention"]}],"job_applications":[]}