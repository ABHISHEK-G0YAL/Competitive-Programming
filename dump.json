{
    "\n": [
        ".\\practice\\codechef\\BUYING2.cpp",
        ".\\practice\\codechef\\CHEFPTNT.cpp",
        ".\\practice\\codechef\\CHEFRUN.cpp",
        ".\\practice\\codechef\\CHEGLOVE.cpp",
        ".\\practice\\codechef\\CK87QUER.cpp",
        ".\\practice\\codechef\\CNTFAIL.cpp",
        ".\\practice\\codechef\\CO92JUDG.cpp",
        ".\\practice\\codechef\\CO92SUBW.cpp",
        ".\\practice\\codechef\\DBFB.cpp",
        ".\\practice\\codechef\\HOMDEL.cpp",
        ".\\practice\\codechef\\INF1908.cpp",
        ".\\practice\\codechef\\JOHNY.cpp",
        ".\\practice\\codechef\\MAXREMOV.cpp",
        ".\\practice\\codechef\\MGCSET.cpp",
        ".\\practice\\codechef\\MTYFRI.cpp",
        ".\\practice\\codechef\\NAICHEF.cpp",
        ".\\practice\\codechef\\NMNMX.cpp",
        ".\\practice\\codechef\\NUMCOMP.cpp",
        ".\\practice\\codechef\\OJUMPS.cpp",
        ".\\practice\\codechef\\PAIRING.cpp",
        ".\\practice\\codechef\\PINS.cpp",
        ".\\practice\\codechef\\POTATOES.cpp",
        ".\\practice\\codechef\\RD19.cpp",
        ".\\practice\\codechef\\REMAIN.cpp",
        ".\\practice\\codechef\\SCC5.cpp",
        ".\\practice\\codechef\\SMRSTR.cpp",
        ".\\practice\\codechef\\SPAMCLAS.cpp",
        ".\\practice\\codechef\\SPSUM.cpp",
        ".\\practice\\codechef\\T22.cpp",
        ".\\practice\\codechef\\TEST.cpp",
        ".\\practice\\codechef\\TRACE.cpp",
        ".\\practice\\codechef\\WATSCORE.cpp",
        ".\\practice\\codechef\\ZUBTRCNT.cpp",
        ".\\practice\\codechef\\ACMIND17\\ORDTEAMS.cpp",
        ".\\practice\\codechef\\ACMIND17\\STDDEV.cpp",
        ".\\practice\\codechef\\AMR15ROL\\AMR15A.cpp",
        ".\\practice\\codechef\\AMR15ROL\\AMR15D.cpp",
        ".\\practice\\codechef\\COOK111B\\CKWLK.cpp",
        ".\\practice\\codechef\\COOK111B\\DOR.cpp",
        ".\\practice\\codechef\\COOK111B\\MDL.cpp",
        ".\\practice\\codeforces\\Alice_and_the_List_of_Presents.cpp",
        ".\\practice\\codeforces\\CME.cpp",
        ".\\practice\\codeforces\\Color_the_Fence.cpp",
        ".\\practice\\codeforces\\Commentary_Boxes.cpp",
        ".\\practice\\codeforces\\Distinct_Digits.cpp",
        ".\\practice\\codeforces\\DZY_Loves_Chessboard.c",
        ".\\practice\\codeforces\\Fafa_and_the_Gates.cpp",
        ".\\practice\\codeforces\\Filling_the_Grid.cpp",
        ".\\practice\\codeforces\\Labs.cpp",
        ".\\practice\\codeforces\\Little_Girl_and_Maximum_XOR.cpp",
        ".\\practice\\codeforces\\Love_Triangle.cpp",
        ".\\practice\\codeforces\\Make_a_triangle.cpp",
        ".\\practice\\codeforces\\Micro-World.cpp",
        ".\\practice\\codeforces\\Minimum_Integer.cpp",
        ".\\practice\\codeforces\\Pair_of_Toys.cpp",
        ".\\practice\\codeforces\\Partition.cpp",
        ".\\practice\\codeforces\\Pens_and_Pencils.cpp",
        ".\\practice\\codeforces\\Petya_and_Origami.cpp",
        ".\\practice\\codeforces\\Rooms_and_Staircases.cpp",
        ".\\practice\\codeforces\\Stones.cpp",
        ".\\practice\\codeforces\\Strings_Equalization.cpp",
        ".\\practice\\codeforces\\String_Transformation.cpp",
        ".\\practice\\codeforces\\Weird_Subtraction_Process.cpp",
        ".\\practice\\Eminence\\monk and cakes\\inp_gen.cpp",
        ".\\practice\\Eminence\\monk and cakes\\monk and cakes.cpp",
        ".\\practice\\GeeksforGeeks\\Boolean_Parenthesization.cpp",
        ".\\practice\\GeeksforGeeks\\Edit_Distance.cpp",
        ".\\practice\\GeeksforGeeks\\Fixing_Two_nodes_of_a_BST.cpp",
        ".\\practice\\GeeksforGeeks\\Kth_smallest_element.cpp",
        ".\\practice\\GeeksforGeeks\\Largest_subarray_of_0's_and_1's.cpp",
        ".\\practice\\GeeksforGeeks\\Left_View_of_Binary_Tree.cpp",
        ".\\practice\\GeeksforGeeks\\Level_order_traversal_in_spiral_form.cpp",
        ".\\practice\\GeeksforGeeks\\Longest_Palindrome_in_a_String.cpp",
        ".\\practice\\GeeksforGeeks\\Maximize_The_Cut_Segments.cpp",
        ".\\practice\\GeeksforGeeks\\Maximum_Rectangular_Area_in_a_Histogram.cpp",
        ".\\practice\\GeeksforGeeks\\Merge_Without_Extra_Space.cpp",
        ".\\practice\\GeeksforGeeks\\Minimum_number_of_Coins.cpp",
        ".\\practice\\GeeksforGeeks\\Palindromic_patitioning.cpp",
        ".\\practice\\GeeksforGeeks\\Print_BST_elements_in_given_range.cpp",
        ".\\practice\\GeeksforGeeks\\Rearrange_Array_Alternately.cpp",
        ".\\practice\\GeeksforGeeks\\Remove_Duplicates.cpp",
        ".\\practice\\GeeksforGeeks\\Reverse_words_in_a_given_string.cpp",
        ".\\practice\\GeeksforGeeks\\Subarray_with_given_sum.cpp",
        ".\\practice\\HackerRank\\2D_Array_DS.cpp",
        ".\\practice\\HackerRank\\3D_Surface_Area.cpp",
        ".\\practice\\HackerRank\\Absolute_Permutation.cpp",
        ".\\practice\\HackerRank\\Abstract_Classes_Polymorphism.cpp",
        ".\\practice\\HackerRank\\Accessing_Inherited_Functions.cpp",
        ".\\practice\\HackerRank\\Acid_Naming.cpp",
        ".\\practice\\HackerRank\\ACM_ICPC_Team.cpp",
        ".\\practice\\HackerRank\\Alternating_Characters.cpp",
        ".\\practice\\HackerRank\\Anagram.cpp",
        ".\\practice\\HackerRank\\Angry_Professor.cpp",
        ".\\practice\\HackerRank\\Append_and_Delete.cpp",
        ".\\practice\\HackerRank\\Apple_and_Orange.cpp",
        ".\\practice\\HackerRank\\Army_Game.cpp",
        ".\\practice\\HackerRank\\Arrays_DS.cpp",
        ".\\practice\\HackerRank\\Arrays_Introduction.cpp",
        ".\\practice\\HackerRank\\Arrays_Left_Rotation.cpp",
        ".\\practice\\HackerRank\\Attending_Workshops.cpp",
        ".\\practice\\HackerRank\\Attribute_Parser.cpp",
        ".\\practice\\HackerRank\\A_Very_Big_Sum.cpp",
        ".\\practice\\HackerRank\\Balanced_Brackets.cpp",
        ".\\practice\\HackerRank\\Basic_Data_Types.cpp",
        ".\\practice\\HackerRank\\Beautiful_Binary_String.cpp",
        ".\\practice\\HackerRank\\Beautiful_Days_at_the_Movies.cpp",
        ".\\practice\\HackerRank\\Beautiful_Pairs.cpp",
        ".\\practice\\HackerRank\\Beautiful_Triplets.cpp",
        ".\\practice\\HackerRank\\Between_Two_Sets.cpp",
        ".\\practice\\HackerRank\\Bigger_is_Greater.cpp",
        ".\\practice\\HackerRank\\Big_Sorting.cpp",
        ".\\practice\\HackerRank\\Birthday_Cake_Candles.cpp",
        ".\\practice\\HackerRank\\Birthday_Chocolate.cpp",
        ".\\practice\\HackerRank\\Bit_Array.cpp",
        ".\\practice\\HackerRank\\Bon_Apptit.cpp",
        ".\\practice\\HackerRank\\Box_It.cpp",
        ".\\practice\\HackerRank\\Breaking_the_Records.cpp",
        ".\\practice\\HackerRank\\Caesar_Cipher.cpp",
        ".\\practice\\HackerRank\\CamelCase.cpp",
        ".\\practice\\HackerRank\\Cats_and_a_Mouse.cpp",
        ".\\practice\\HackerRank\\Cavity_Map.cpp",
        ".\\practice\\HackerRank\\Chocolate_Feast.cpp",
        ".\\practice\\HackerRank\\Circular_Array_Rotation.cpp",
        ".\\practice\\HackerRank\\Class.cpp",
        ".\\practice\\HackerRank\\Classes_and_Objects.cpp",
        ".\\practice\\HackerRank\\Climbing_the_Leaderboard.cpp",
        ".\\practice\\HackerRank\\Closest_Numbers.cpp",
        ".\\practice\\HackerRank\\Compare_the_Triplets.cpp",
        ".\\practice\\HackerRank\\Conditional_Statements.cpp",
        ".\\practice\\HackerRank\\Connecting_Towns.cpp",
        ".\\practice\\HackerRank\\Correctness_and_the_Loop_Invariant.cpp",
        ".\\practice\\HackerRank\\Counting_Sort_1.cpp",
        ".\\practice\\HackerRank\\Counting_Sort_2.cpp",
        ".\\practice\\HackerRank\\Counting_Valleys.cpp",
        ".\\practice\\HackerRank\\Cpp_exception_handling.cpp",
        ".\\practice\\HackerRank\\Cutting_Paper_Squares.cpp",
        ".\\practice\\HackerRank\\Cut_the_sticks.cpp",
        ".\\practice\\HackerRank\\C_Class_Templates.cpp",
        ".\\practice\\HackerRank\\C_Class_Template_Specialization.cpp",
        ".\\practice\\HackerRank\\C_Variadics.cpp",
        ".\\practice\\HackerRank\\Day_0_Hello_World.c",
        ".\\practice\\HackerRank\\Day_0_Hello_World.js",
        ".\\practice\\HackerRank\\Day_0_Mean_Median_and_Mode.cpp",
        ".\\practice\\HackerRank\\Day_1_Data_Types.c",
        ".\\practice\\HackerRank\\Day_25_Running_Time_and_Complexity.cpp",
        ".\\practice\\HackerRank\\Day_27_Testing.cpp",
        ".\\practice\\HackerRank\\Day_2_Operators.c",
        ".\\practice\\HackerRank\\Day_3_Intro_to_Conditional_Statements.c",
        ".\\practice\\HackerRank\\Day_4_Class_vs._Instance.cpp",
        ".\\practice\\HackerRank\\Day_5_Loops.cpp",
        ".\\practice\\HackerRank\\Day_6_Lets_Review.cpp",
        ".\\practice\\HackerRank\\Day_7_Arrays.cpp",
        ".\\practice\\HackerRank\\Day_9_Recursion_3.cpp",
        ".\\practice\\HackerRank\\Day_of_the_Programmer.cpp",
        ".\\practice\\HackerRank\\Deque_STL.cpp",
        ".\\practice\\HackerRank\\Designer_PDF_Viewer.cpp",
        ".\\practice\\HackerRank\\Diagonal_Difference.cpp",
        ".\\practice\\HackerRank\\Divisible_Sum_Pairs.cpp",
        ".\\practice\\HackerRank\\Drawing_Book.cpp",
        ".\\practice\\HackerRank\\Electronics_Shop.cpp",
        ".\\practice\\HackerRank\\Emas_Supercomputer.cpp",
        ".\\practice\\HackerRank\\Encryption.cpp",
        ".\\practice\\HackerRank\\Equal.cpp",
        ".\\practice\\HackerRank\\Equalize_the_Array.cpp",
        ".\\practice\\HackerRank\\Exceeding_the_Speed_Limit.cpp",
        ".\\practice\\HackerRank\\Exceptional_Server.cpp",
        ".\\practice\\HackerRank\\Extra_Long_Factorials.py",
        ".\\practice\\HackerRank\\Fair_Rations.cpp",
        ".\\practice\\HackerRank\\Find_Digits.cpp",
        ".\\practice\\HackerRank\\Find_the_Median.cpp",
        ".\\practice\\HackerRank\\Find_the_Point.cpp",
        ".\\practice\\HackerRank\\Flatland_Space_Stations.cpp",
        ".\\practice\\HackerRank\\Flipping_bits.cpp",
        ".\\practice\\HackerRank\\Forming_a_Magic_Square.cpp",
        ".\\practice\\HackerRank\\For_Loop.cpp",
        ".\\practice\\HackerRank\\Functions.cpp",
        ".\\practice\\HackerRank\\Funny_String.cpp",
        ".\\practice\\HackerRank\\Game_of_Thrones_I.cpp",
        ".\\practice\\HackerRank\\Gemstones.cpp",
        ".\\practice\\HackerRank\\Grading_Students.cpp",
        ".\\practice\\HackerRank\\Greedy_Florist.cpp",
        ".\\practice\\HackerRank\\Grid_Challenge.cpp",
        ".\\practice\\HackerRank\\HackerRank_in_a_String.cpp",
        ".\\practice\\HackerRank\\Halloween_Sale.cpp",
        ".\\practice\\HackerRank\\Handshake.cpp",
        ".\\practice\\HackerRank\\Happy_Ladybugs.cpp",
        ".\\practice\\HackerRank\\Hotel_Prices.cpp",
        ".\\practice\\HackerRank\\Ice_Cream_Parlor.cpp",
        ".\\practice\\HackerRank\\Inheritance_Introduction.cpp",
        ".\\practice\\HackerRank\\Inherited_Code.cpp",
        ".\\practice\\HackerRank\\Input_and_Output.cpp",
        ".\\practice\\HackerRank\\Insertion_Sort_Part_1.cpp",
        ".\\practice\\HackerRank\\Insertion_Sort_Part_2.cpp",
        ".\\practice\\HackerRank\\Intro_to_Tutorial_Challenges.cpp",
        ".\\practice\\HackerRank\\Jim_and_the_Orders.cpp",
        ".\\practice\\HackerRank\\Jumping_on_the_Clouds.cpp",
        ".\\practice\\HackerRank\\Jumping_on_the_Clouds_Revisited.cpp",
        ".\\practice\\HackerRank\\Kangaroo.cpp",
        ".\\practice\\HackerRank\\Knapsack.cpp",
        ".\\practice\\HackerRank\\Largest_Permutation.cpp",
        ".\\practice\\HackerRank\\Left_Rotation.cpp",
        ".\\practice\\HackerRank\\Leonardos_Prime_Factors.cpp",
        ".\\practice\\HackerRank\\Lets_Echo.sh",
        ".\\practice\\HackerRank\\Library_Fine.cpp",
        ".\\practice\\HackerRank\\Lisas_Workbook.cpp",
        ".\\practice\\HackerRank\\Lonely_Integer.cpp",
        ".\\practice\\HackerRank\\Lower_Bound_STL.cpp",
        ".\\practice\\HackerRank\\Luck_Balance.cpp",
        ".\\practice\\HackerRank\\Magic_Spells.cpp",
        ".\\practice\\HackerRank\\Make_It_Anagram.cpp",
        ".\\practice\\HackerRank\\Making_Anagrams.cpp",
        ".\\practice\\HackerRank\\Manasa_and_Stones.cpp",
        ".\\practice\\HackerRank\\Mandragora_Forest.cpp",
        ".\\practice\\HackerRank\\Maps_STL.cpp",
        ".\\practice\\HackerRank\\Marcs_Cakewalk.cpp",
        ".\\practice\\HackerRank\\Mark_and_Toys.cpp",
        ".\\practice\\HackerRank\\Mars_Exploration.cpp",
        ".\\practice\\HackerRank\\Maximizing_XOR.cpp",
        ".\\practice\\HackerRank\\Maximum_Draws.cpp",
        ".\\practice\\HackerRank\\Maximum_Perimeter_Triangle.cpp",
        ".\\practice\\HackerRank\\Migratory_Birds.cpp",
        ".\\practice\\HackerRank\\Minimum_Absolute_Difference_in_an_Array.cpp",
        ".\\practice\\HackerRank\\Minimum_Distances.cpp",
        ".\\practice\\HackerRank\\Minimum_Height_Triangle.cpp",
        ".\\practice\\HackerRank\\Minimum_Swaps_2.cpp",
        ".\\practice\\HackerRank\\Mini_Max_Sum.cpp",
        ".\\practice\\HackerRank\\Missing_Numbers.cpp",
        ".\\practice\\HackerRank\\Modified_Kaprekar_Numbers.cpp",
        ".\\practice\\HackerRank\\Multi_Level_Inheritance.cpp",
        ".\\practice\\HackerRank\\New_Year_Chaos.cpp",
        ".\\practice\\HackerRank\\Non_Divisible_Subset.cpp",
        ".\\practice\\HackerRank\\Operator_Overloading.cpp",
        ".\\practice\\HackerRank\\Organizing_Containers_of_Balls.cpp",
        ".\\practice\\HackerRank\\Overloading_Ostream_Operator.cpp",
        ".\\practice\\HackerRank\\Overload_Operators.cpp",
        ".\\practice\\HackerRank\\Palindrome_Index.cpp",
        ".\\practice\\HackerRank\\Pangrams.cpp",
        ".\\practice\\HackerRank\\Permuting_Two_Arrays.cpp",
        ".\\practice\\HackerRank\\Picking_Numbers.cpp",
        ".\\practice\\HackerRank\\Plus_Minus.cpp",
        ".\\practice\\HackerRank\\Pointer.cpp",
        ".\\practice\\HackerRank\\Preprocessor_Solution.cpp",
        ".\\practice\\HackerRank\\Print_Pretty.cpp",
        ".\\practice\\HackerRank\\Priyanka_and_Toys.cpp",
        ".\\practice\\HackerRank\\Python_If_Else.py",
        ".\\practice\\HackerRank\\Queens_Attack_II.cpp",
        ".\\practice\\HackerRank\\Quicksort_1_Partition.cpp",
        ".\\practice\\HackerRank\\Rectangle_Area.cpp",
        ".\\practice\\HackerRank\\Repeated_String.cpp",
        ".\\practice\\HackerRank\\Running_Time_of_Algorithms.cpp",
        ".\\practice\\HackerRank\\Save_the_Prisoner.cpp",
        ".\\practice\\HackerRank\\Say_Hello_World_With_C.cpp",
        ".\\practice\\HackerRank\\Say_Hello_World_With_Python.py",
        ".\\practice\\HackerRank\\Security_Functions.cpp",
        ".\\practice\\HackerRank\\Security_Functions_II.cpp",
        ".\\practice\\HackerRank\\Separate_the_Numbers.cpp",
        ".\\practice\\HackerRank\\Sequence_Equation.cpp",
        ".\\practice\\HackerRank\\Service_Lane.cpp",
        ".\\practice\\HackerRank\\Sets_STL.cpp",
        ".\\practice\\HackerRank\\Sherlock_and_Array.cpp",
        ".\\practice\\HackerRank\\Sherlock_and_Squares.cpp",
        ".\\practice\\HackerRank\\Sherlock_and_The_Beast.cpp",
        ".\\practice\\HackerRank\\Simple_Array_Sum.cpp",
        ".\\practice\\HackerRank\\Sock_Merchant.cpp",
        ".\\practice\\HackerRank\\Solve_Me_First.cpp",
        ".\\practice\\HackerRank\\Staircase.cpp",
        ".\\practice\\HackerRank\\Strange_Counter.cpp",
        ".\\practice\\HackerRank\\Strings.cpp",
        ".\\practice\\HackerRank\\StringStream.cpp",
        ".\\practice\\HackerRank\\String_Construction.cpp",
        ".\\practice\\HackerRank\\Strong_Password.cpp",
        ".\\practice\\HackerRank\\Structs.cpp",
        ".\\practice\\HackerRank\\Summing_the_N_series.cpp",
        ".\\practice\\HackerRank\\Sum_vs_XOR.cpp",
        ".\\practice\\HackerRank\\Super_Reduced_String.cpp",
        ".\\practice\\HackerRank\\Taum_and_Bday.cpp",
        ".\\practice\\HackerRank\\The_Bomberman_Game.cpp",
        ".\\practice\\HackerRank\\The_Full_Counting_Sort.cpp",
        ".\\practice\\HackerRank\\The_Grid_Search.cpp",
        ".\\practice\\HackerRank\\The_Hurdle_Race.cpp",
        ".\\practice\\HackerRank\\The_Love_Letter_Mystery.cpp",
        ".\\practice\\HackerRank\\The_Power_Sum.cpp",
        ".\\practice\\HackerRank\\The_Time_in_Words.cpp",
        ".\\practice\\HackerRank\\Time_Complexity_Primality.cpp",
        ".\\practice\\HackerRank\\Time_Conversion.cpp",
        ".\\practice\\HackerRank\\Tree_Top_View.cpp",
        ".\\practice\\HackerRank\\Two_Characters.cpp",
        ".\\practice\\HackerRank\\Two_Strings.cpp",
        ".\\practice\\HackerRank\\Utopian_Tree.cpp",
        ".\\practice\\HackerRank\\Variable_Sized_Arrays.cpp",
        ".\\practice\\HackerRank\\Vector_Erase.cpp",
        ".\\practice\\HackerRank\\Vector_Sort.cpp",
        ".\\practice\\HackerRank\\Viral_Advertising.cpp",
        ".\\practice\\HackerRank\\Virtual_Functions.cpp",
        ".\\practice\\HackerRank\\Ways_to_give_a_check.c",
        ".\\practice\\HackerRank\\Weighted_Uniform_Strings.cpp",
        ".\\practice\\HackerRank\\Which_Section.cpp",
        ".\\practice\\LeetCode\\4Sum.cpp",
        ".\\practice\\LeetCode\\All_Possible_Full_Binary_Trees.cpp",
        ".\\practice\\LeetCode\\Arranging_Coins.cpp",
        ".\\practice\\LeetCode\\Coin_Change.cpp",
        ".\\practice\\LeetCode\\Construct_Binary_Search_Tree_from_Preorder_Traversal.cpp",
        ".\\practice\\LeetCode\\Continuous_Subarray_Sum.cpp",
        ".\\practice\\LeetCode\\Convert_Sorted_Array_to_Binary_Search_Tree.cpp",
        ".\\practice\\LeetCode\\Count_and_Say.cpp",
        ".\\practice\\LeetCode\\Defanging_an_IP_Address.cpp",
        ".\\practice\\LeetCode\\Diameter_of_Binary_Tree.cpp",
        ".\\practice\\LeetCode\\Edit_Distance.cpp",
        ".\\practice\\LeetCode\\Find_Common_Characters.cpp",
        ".\\practice\\LeetCode\\First_Unique_Character_in_a_String.cpp",
        ".\\practice\\LeetCode\\Implement_strStr().cpp",
        ".\\practice\\LeetCode\\Interleaving_String.cpp",
        ".\\practice\\LeetCode\\K-th_Symbol_in_Grammar.cpp",
        ".\\practice\\LeetCode\\Kth_Largest_Element_in_an_Array.cpp",
        ".\\practice\\LeetCode\\K_Closest_Points_to_Origin.cpp",
        ".\\practice\\LeetCode\\Largest_Rectangle_in_Histogram.cpp",
        ".\\practice\\LeetCode\\Longest_Increasing_Subsequence.java",
        ".\\practice\\LeetCode\\Longest_Univalue_Path.cpp",
        ".\\practice\\LeetCode\\Lowest_Common_Ancestor_of_a_Binary_Tree.cpp",
        ".\\practice\\LeetCode\\Maximal_Rectangle.cpp",
        ".\\practice\\LeetCode\\Maximum_Number_of_Events_That_Can_Be_Attended.cpp",
        ".\\practice\\LeetCode\\Maximum_Product_Subarray.cpp",
        ".\\practice\\LeetCode\\Maximum_Width_of_Binary_Tree.cpp",
        ".\\practice\\LeetCode\\Number_of_Digit_One.cpp",
        ".\\practice\\LeetCode\\Number_of_Squareful_Arrays.cpp",
        ".\\practice\\LeetCode\\Out_of_Boundary_Paths.cpp",
        ".\\practice\\LeetCode\\Palindrome_Partitioning_II.cpp",
        ".\\practice\\LeetCode\\Recover_Binary_Search_Tree.cpp",
        ".\\practice\\LeetCode\\Remove_K_Digits.cpp",
        ".\\practice\\LeetCode\\Reorder_Data_in_Log_Files.cpp",
        ".\\practice\\LeetCode\\Stone_Game_II.cpp",
        ".\\practice\\LeetCode\\Trapping_Rain_Water.cpp",
        ".\\practice\\LeetCode\\Two_Sum.cpp",
        ".\\practice\\LeetCode\\Validate_IP_Address.cpp",
        ".\\practice\\LeetCode\\Valid_Palindrome.cpp",
        ".\\practice\\LeetCode\\Valid_Parentheses.cpp",
        ".\\practice\\LeetCode\\Wildcard_Matching.cpp",
        ".\\practice\\SPOJ\\Crazy_Smoker.cpp",
        ".\\practice\\SPOJ\\Edit_Distance_Again.cpp",
        ".\\practice\\SPOJ\\Life_the_Universe_and_Everything.cpp",
        ".\\practice\\SPOJ\\Life_the_Universe_and_Everything_(Interactive).cpp",
        ".\\practice\\SPOJ\\Mixtures.cpp",
        ".\\practice\\SPOJ\\Perfect_Cubes.cpp",
        ".\\practice\\SPOJ\\SPOJ_Custom_Test.cpp",
        ".\\practice\\SPOJ\\SUM_OF_DIGITS.cpp",
        ".\\contests\\ACM-ICPC_18\\ROBOGAME.cpp",
        ".\\contests\\ACM-ICPC_19\\DISCSHOP.cpp",
        ".\\contests\\ACM-ICPC_19\\TRAINSET.cpp",
        ".\\contests\\Code-Jam_2018\\Qualifiacation-Round\\Saving_The_Universe_Again.cpp",
        ".\\contests\\Code-Jam_2018\\Qualifiacation-Round\\Practice\\Trouble_Sort.cpp",
        ".\\contests\\Code-Jam_2019\\Qualifiacation-Round\\Foregone_Solution.cpp",
        ".\\contests\\Code-Jam_2019\\Qualifiacation-Round\\You_Can_Go_Your_Own_Way.cpp",
        ".\\contests\\Code-Jam_2019\\Round-1C\\power_arrangers.cpp",
        ".\\contests\\Code-Jam_2019\\Round-1C\\robot_programming_strategy.cpp",
        ".\\contests\\CodeChef\\AUG18B\\GCDMOD.cpp",
        ".\\contests\\CodeChef\\AUG18B\\PROBLEMS.cpp",
        ".\\contests\\CodeChef\\AUG18B\\SHKNUM.cpp",
        ".\\contests\\CodeChef\\AUG18B\\SPELLBOB.cpp",
        ".\\contests\\CodeChef\\AUG19A\\CHEFDIL.cpp",
        ".\\contests\\CodeChef\\JAN20B\\BRKBKS.cpp",
        ".\\contests\\CodeChef\\JAN20B\\CHFDORA.cpp",
        ".\\contests\\CodeChef\\JAN20B\\DYNAMO.cpp",
        ".\\contests\\CodeChef\\JULY19A\\CIRMERGE.cpp",
        ".\\contests\\CodeChef\\JULY19A\\GUESSPRM.cpp",
        ".\\contests\\CodeChef\\JUNE19A\\CHFING.cpp",
        ".\\contests\\CodeChef\\JUNE19A\\SUMAGCD.cpp",
        ".\\contests\\CodeChef\\MARCH20B\\ADASHOP2.cpp",
        ".\\contests\\CodeChef\\MARCH20B\\CHPINTU.cpp",
        ".\\contests\\CodeChef\\MARCH20B\\ENGXOR.cpp",
        ".\\contests\\CodeChef\\NOV18B\\CHFTIRED.cpp",
        ".\\contests\\CodeChef\\NOV18B\\CHHAPPY.cpp",
        ".\\contests\\CodeChef\\NOV18B\\GMEDIAN.cpp",
        ".\\contests\\CodeChef\\NOV18B\\PRDRG.cpp",
        ".\\contests\\CodeChef\\NOV18B\\practice\\MAGICHF2.cpp",
        ".\\contests\\CodeChef\\OCT18B\\BITOBYT.cpp",
        ".\\contests\\CodeChef\\OCT18B\\CHSERVE.cpp",
        ".\\contests\\CodeChef\\OCT18B\\HMAPPY.cpp",
        ".\\contests\\CodeChef\\SEPT18B\\CHEFADV.cpp",
        ".\\contests\\CodeChef\\SEPT18B\\MAGICHF.cpp",
        ".\\contests\\CodeChef\\SEPT18B\\XORIER.cpp",
        ".\\contests\\CodeVita_2018\\Inverses.cpp",
        ".\\contests\\CodeVita_2018\\Number-Sort-Spell.cpp",
        ".\\contests\\Facebook-Hacker-Cup_2018\\Qualification_Round\\Ethan_Searches_for_a_String.cpp",
        ".\\contests\\Facebook-Hacker-Cup_2018\\Qualification_Round\\Ethan_Searches_for_a_String_tester.cpp",
        ".\\contests\\Facebook-Hacker-Cup_2018\\Qualification_Round\\Interception.cpp",
        ".\\contests\\Facebook-Hacker-Cup_2018\\Qualification_Round\\Tourist.cpp",
        ".\\contests\\Facebook-Hacker-Cup_2018\\Round_1\\Let_it_Flow\\inpgen-empty_middlerow.cpp",
        ".\\contests\\Facebook-Hacker-Cup_2019\\Qualification_Round\\Leapfrog_Ch_1.cpp",
        ".\\contests\\Facebook-Hacker-Cup_2019\\Qualification_Round\\Leapfrog_Ch_2.cpp",
        ".\\contests\\Saturnalia_2019\\SAT101.cpp",
        ".\\contests\\Saturnalia_2019\\SAT102.cpp",
        ".\\contests\\Saturnalia_2019\\SAT103.cpp",
        ".\\contests\\SnackDown_2019\\Online-Pre-Elimination\\BUDDYNIM.cpp",
        ".\\contests\\SnackDown_2019\\Online-Qualifier\\CHEFPRMS.cpp",
        ".\\contests\\SnackDown_2019\\Online-Qualifier\\QUALPREL.cpp",
        ".\\contests\\SnackDown_2019\\Online-Qualifier\\SPREAD2.cpp",
        ".\\contests\\SnackDown_2019\\Online-Qualifier\\practice\\QABC.cpp",
        ".\\contests\\SnackDown_2019\\Online-Qualifier\\practice\\TEAMMATE.cpp",
        ".\\contests\\SnackDown_2019\\Online-Round-1A\\CARDMGK.cpp",
        ".\\contests\\SnackDown_2019\\Online-Round-1A\\TYPING.cpp",
        ".\\contests\\SnackDown_2019\\Online-Round-1A\\practise\\ARRGRAPH.cpp",
        ".\\contests\\SnackDown_2019\\Online-Round-1B\\CHFAR.cpp",
        ".\\contests\\SnackDown_2019\\Online-Round-1B\\MAXPRODU.cpp",
        ".\\contests\\SnackDown_2019\\Online-Round-1B\\QUEUE2.cpp",
        ".\\contests\\SnackDown_2019\\Online-Round-1B\\SNCKYEAR.cpp"
    ],
    "// Wrong Answer\n": [
        ".\\contests\\ACM-ICPC_19\\SEGDIR.cpp",
        ".\\contests\\CodeChef\\JULY19A\\CHFWAR.cpp",
        ".\\contests\\CodeChef\\JULY19A\\LVMFFN.cpp"
    ],
    "// TLE\n": [
        ".\\contests\\Code-Jam_2018\\Qualifiacation-Round\\Trouble_Sort.cpp"
    ],
    "// Partially Solved (50pts)\n": [
        ".\\contests\\CodeChef\\AUG19A\\KS1.cpp"
    ],
    "// Partially Solved (10pts)\n": [
        ".\\contests\\CodeChef\\JULY19A\\CCC.cpp"
    ],
    "// 0.204 submission max is 1.00\n": [
        ".\\contests\\CodeChef\\JUNE19A\\SNCK99.cpp"
    ],
    "// partial submission (30pts)\n": [
        ".\\contests\\CodeChef\\SEPT18B\\TABGAME.cpp"
    ],
    "// Incorrect Submission\n": [
        ".\\contests\\Facebook-Hacker-Cup_2018\\Round_1\\Let_it_Flow\\Let_It_Flow.cpp",
        ".\\contests\\Facebook-Hacker-Cup_2019\\Round_1\\classTreasurer.cpp",
        ".\\contests\\Facebook-Hacker-Cup_2019\\Round_1\\graphsAsAService.cpp"
    ],
    "// incomplete code\n": [
        ".\\contests\\Facebook-Hacker-Cup_2019\\Round_1\\connectTheDots.cpp"
    ],
    "// partial points (50pts)\n": [
        ".\\contests\\SnackDown_2019\\Online-Round-1A\\AVGMAT.cpp",
        ".\\contests\\SnackDown_2019\\Online-Round-1A\\CHEFADD.cpp",
        ".\\contests\\SnackDown_2019\\Online-Round-1A\\practise\\PERIODIC.cpp"
    ]
}